{"version":3,"sources":["utils/formatter.js","views/Menu/Projects/ProjectWall/ProjectWall.js","views/Menu/Projects/ProjectWall/shared.js"],"names":["convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","convertNumberCurrencies","n","ranges","divider","suffix","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","statusDeliverable","draft","pending","rejected","approved","FileList","authUser","useAuthUser","matchRoute","useRouteMatch","deliverableRef","useRef","uploadFile","useFilterProjectContext","filter","setFilter","useState","EditorState","createEmpty","editorState","setEditorState","idActivity","comment","reply","setReply","id","status","statusMessage","open","modalVerify","setModalVerify","useSWR","params","projectId","sortActivity","value","category","searchActivity","getData","data","error","mutate","loading","useMemo","attendancesOptions","professional","map","pro","name","role","concat","client","deliverableData","activityDetails","act","sort","a","b","useFormik","initialValues","content","text","isDraft","files","onSubmit","values","setSubmitting","setValues","setErrors","formData","FormData","append","JSON","stringify","f","file","request","put","then","res","toast","success","catch","err","finally","post","handleSubmit","isSubmitting","handleClickCategory","useCallback","state","attendees","additionalAttendees","meeting","createWithContent","ContentState","createFromBlockArray","convertFromHTML","date","moment","format","startTime","endTime","handleChangeAttendance","e","old","handleChangeMeetingEndTime","target","handleClickSubmit","handleVerifyDeliverable","handleUploadFile","preventDefault","size","preview","URL","createObjectURL","handleDeleteFile","handleChangeMeetingDate","meetingDetails","link","handleChangeFilterCategory","handleChangeFilterSort","handleChangeFilterSearch","Row","Col","xs","className","projectName","md","Card","CardBody","contractValue","stratingDate","closingDate","href","rel","InputGroup","InputGroupAddon","addonType","required","selected","Date","dateFormat","minDate","placeholderText","showTimeInput","autoComplete","onSelect","onChangeRaw","InputGroupText","icon","Table","bordered","milestoneDetails","v","key","activities","add","Button","color","fileDetails","Badge","pop","style","cursor","onClick","current","scrollIntoView","behavior","includes","lg","Label","type","mask","onChange","placeholder","inputProps","Input","att","isClearable","isMulti","isValidNewOption","inputValue","test","String","toLowerCase","formatGroupLabel","display","alignItems","fontWeight","fontSize","letterSpacing","label","noOptionsMessage","components","DropdownIndicator","IndicatorSeparator","editorStyle","height","onEditorStateChange","onContentStateChange","draftToHtml","handleEditorChange","fileName","ref","click","disabled","Spinner","options","position","top","right","bottom","left","justifyContent","width","activity","createdBy","utc","createdAt","local","htmlParser","fileUrl","textDecoration","replies","ir","rows","borderRadius","onKeyPress","blur","Modal","isOpen","centered","toggle","ModalBody","maxFiles","Array","fill","UncontrolledPopover","trigger","placement","popperClassName","PopoverBody","Progress","striped","fileList"],"mappings":"yGAAA,0FAsBO,SAASA,EAAgBC,GAG5B,IAFA,IAAIC,EAAS,GACTC,EAAWF,EAAMG,WAAWC,MAAM,IAAIC,UAAUC,KAAK,IAChDC,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IAASA,EAAI,IAAM,IAAGN,GAAUC,EAASO,OAAOF,EAAG,GAAK,KAE7F,OAAON,EAAOG,MAAM,GAAIH,EAAOO,OAAS,GAAGH,UAAUC,KAAK,IAGvD,SAASI,EAAwBC,GAUpC,IATA,IAAMC,EAAS,CACX,CAAEC,QAAS,KAAMC,OAAQ,KACzB,CAAED,QAAS,KAAMC,OAAQ,KACzB,CAAED,QAAS,KAAMC,OAAQ,KACzB,CAAED,QAAS,IAAKC,OAAQ,KACxB,CAAED,QAAS,IAAKC,OAAQ,KACxB,CAAED,QAAS,IAAKC,OAAQ,MAGnBP,EAAI,EAAGA,EAAIK,EAAOJ,OAAQD,IAC/B,GAAII,GAAKC,EAAOL,GAAGM,QACf,OAAQF,EAAIC,EAAOL,GAAGM,SAASV,WAAaS,EAAOL,GAAGO,OAG9D,OAAOH,EAAER,WA3CbY,IAAQC,SAAS,SAAU,YAAa,CACpCC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,KACVC,QAAS,KACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,SAAUC,GACf,OAAkB,IAAXA,EAAe,KAAO,UAEjCC,SAAU,CACNC,OAAQ,SAGhBb,IAAQc,OAAO,c,meCITC,EAAoB,CACtBC,MAAO,QACPC,QAAS,aACTC,SAAU,YACVC,SAAU,YAmoBRC,GAhoBS,qBAAO,IAAD,6DACXC,GAAWC,cACXC,GAAaC,cACbC,GAAiBC,mBACjBC,GAAaD,iBAAO,MAJT,GAKWE,cALX,qBAKVC,GALU,MAKFC,GALE,SAMqBC,mBAASC,cAAYC,eAN1C,qBAMVC,GANU,MAMGC,GANH,SAOSJ,mBAAS,CAC/BK,WAAY,GACZC,QAAS,KATI,qBAOVC,GAPU,MAOHC,GAPG,SAWqBR,mBAAS,CAAES,GAAI,EAAGC,OAAQ,GAAIC,cAAe,GAAIC,MAAM,IAX5E,qBAWVC,GAXU,MAWGC,GAXH,SAYwBC,aAAO,sCAAoBvB,GAAWwB,OAAOC,UAAtC,2BAAkEnB,GAAOoB,aAAaC,OAAtF,OAA8FrB,GAAOsB,SAAP,oBAA+BtB,GAAOsB,SAASD,OAAU,IAAvJ,OAA4JrB,GAAOuB,eAAP,kBAAmCvB,GAAOuB,gBAAmB,OAA3PC,GAZG,GAYTC,KAAeC,GAZN,GAYMA,MAAOC,GAZb,GAYaA,OACxBC,IAAWJ,IAAWE,GACtBD,GAAOI,mBAAQ,WAAO,IAAD,IACvB,wBAAOL,SAAP,IAAOA,IAAP,UAAOA,GAASC,YAAhB,aAAO,EAAeA,YAAtB,QAA8B,KAC/B,CAACD,KAEEM,GAAqBD,mBAAQ,WAAO,IAAD,QAErC,OADiB,iBAAGJ,SAAH,IAAGA,IAAH,UAAGA,GAAMM,oBAAT,aAAG,EAAoBC,KAAI,SAAAC,GAAG,MAAK,CAAEC,KAAMD,EAAIC,KAAMvB,GAAIsB,EAAItB,GAAIwB,KAAM,0BAAvE,QAA6F,IAC3FC,OAAO,CAAC,CAAEF,KAAI,OAAET,SAAF,IAAEA,IAAF,UAAEA,GAAMY,cAAR,aAAE,EAAcH,KAAMvB,GAAE,OAAEc,SAAF,IAAEA,IAAF,UAAEA,GAAMY,cAAR,aAAE,EAAc1B,GAAIwB,KAAM,cACpF,CAACV,KAEEa,GAAkBT,mBAAQ,WAAO,IAAD,IAClC,wBAAOJ,SAAP,IAAOA,IAAP,UAAOA,GAAMc,uBAAb,aAAO,EAAuBvC,QAAO,SAAAwC,GAAG,MAAqB,gBAAjBA,EAAIlB,YAA4BmB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE/B,GAAKgC,EAAEhC,aAApG,QAA2G,OAC5G,CAACc,KAzBa,GA2ByCmB,YAAU,CAChEC,cAAe,CACXtC,WAAY,EACZe,SAAU,aACVwB,QAAS,GACTC,KAAM,GACNC,QAAS,QACTC,MAAO,IAGXC,SAAU,SAACC,EAAD,GAAsD,IAA3CC,EAA0C,EAA1CA,cAA0BC,GAAgB,EAA3BC,UAA2B,EAAhBD,WAC3CD,GAAc,GACd,IAAIG,EAAW,IAAIC,SACfL,EAAO5C,YACPgD,EAASE,OAAO,aAAcN,EAAO5C,YAEzCgD,EAASE,OAAO,WAAYN,EAAO7B,UACnCiC,EAASE,OAAO,UAAWC,KAAKC,UAAUR,EAAOL,UACjDS,EAASE,OAAO,OAAQN,EAAOJ,MAC/BQ,EAASE,OAAO,UAAWN,EAAOH,SAC9BG,EAAOF,MAAMrF,OAAS,GACtBuF,EAAOF,MAAMjD,QAAO,SAAA4D,GAAC,OAAKA,EAAEjD,MAAIqB,KAAI,SAAC6B,EAAMlG,GACvC,OAAO4F,EAASE,OAAO,QAAU9F,EAAI,GAAIkG,EAAKA,KAAMA,EAAKA,KAAK3B,SAIlEiB,EAAO5C,WACPuD,IAAQC,IAAR,qBAA0BrE,GAAWwB,OAAOC,UAA5C,aAAkEoC,GAC7DS,MAAK,SAAAC,GACFC,IAAMC,QAAQ,kCACdd,EAAU,CACN9C,WAAY,EACZe,SAAU,aACVwB,QAAS,GACTC,KAAM,GACNC,QAAS,QACTC,MAAO,KAEX3C,GAAeH,cAAYC,eAC3BuB,QAEHyC,OAAM,SAAAC,GACHH,IAAMxC,MAAM,gCAEf4C,SAAQ,WACLlB,GAAc,MAGtBU,IAAQS,KAAR,qBAA2B7E,GAAWwB,OAAOC,UAA7C,aAAmEoC,GAC9DS,MAAK,SAAAC,GACFC,IAAMC,QAAQ,kCACdd,EAAU,CACN9C,WAAY,EACZe,SAAU,aACVwB,QAAS,GACTC,KAAM,GACNC,QAAS,QACTC,MAAO,KAEX3C,GAAeH,cAAYC,eAC3BuB,QAEHyC,OAAM,SAAAC,GACHH,IAAMxC,MAAM,gCAEf4C,SAAQ,WACLlB,GAAc,SAlE1BD,GA3BS,GA2BTA,OAAQE,GA3BC,GA2BDA,UAAWmB,GA3BV,GA2BUA,aAAcC,GA3BxB,GA2BwBA,aAwEnCC,GAAsBC,uBAAY,SAACrD,GAIkE,IAAD,IAHrF,eAAbA,EACA+B,IAAU,SAACuB,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBtD,gBAE9BgB,GAAgB1E,OAAS,GAA4D,UAAvD0E,GAAgBA,GAAgB1E,OAAS,GAAGgD,QAC1EyC,GAAU,CAAE9C,WAAY+B,GAAgBA,GAAgB1E,OAAS,GAAG+C,GAAIW,WAAUwB,QAAS,CAAE+B,UAAW/C,GAAoBgD,oBAAmB,UAAExC,GAAgBA,GAAgB1E,OAAS,GAAGkF,eAA9C,aAAE,EAAqDgC,oBAAqBC,QAAO,UAAEzC,GAAgBA,GAAgB1E,OAAS,GAAGkF,eAA9C,aAAE,EAAqDiC,SAAWhC,KAAMT,GAAgBA,GAAgB1E,OAAS,GAAGmF,KAAMC,QAAS,OAAQC,MAAOX,GAAgBA,GAAgB1E,OAAS,GAAGqF,QACha3C,GAAeH,cAAY6E,kBACvBC,eAAaC,qBACTC,0BAAgB7C,GAAgBA,GAAgB1E,OAAS,GAAGmF,UAIpEM,IAAU,SAACuB,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBrE,WAAY,EAAGe,WAAUwB,QAAS,CAAE+B,UAAW/C,GAAoBgD,oBAAqB,GAAIC,QAAS,CAAEK,KAAMC,MAASC,OAAO,gBAAiBC,UAAWF,MAASC,OAAO,SAAUE,QAAS,YAGvO,CAACnC,GAAWvB,GAAoBQ,KAE7BmD,GAAyBd,uBAAY,SAACe,GACxCrC,IAAU,SAAAsC,GAAG,kCAAUA,GAAV,IAAe7C,QAAQ,2BAAM6C,EAAI7C,SAAX,IAAoBgC,oBAAmB,OAAEY,QAAF,IAAEA,IAAK,YAClF,CAACrC,KAEEuC,GAA6BjB,uBAAY,SAACe,GAAO,IAC3CrE,EAAUqE,EAAEG,OAAZxE,MACRgC,IAAU,SAAAsC,GAAG,kCAAUA,GAAV,IAAe7C,QAAQ,2BAAM6C,EAAI7C,SAAX,IAAoBiC,QAAQ,2BAAMY,EAAI7C,QAAQiC,SAAnB,IAA4BS,QAASnE,aACpG,CAACgC,KAqBEyC,GAAoBnB,sBAAW,uCAAC,WAAOe,GAAP,SAAAhD,EAAA,sEAC5BW,IAAU,SAAAsC,GAAG,kCAAUA,GAAV,IAAe3C,QAAS0C,OADT,OAElClB,KAFkC,2CAAD,sDAGlC,CAACnB,GAAWmB,KAETuB,GAA0BpB,uBAAY,SAAChE,EAAIC,EAAQC,GACrDiD,IAAQC,IAAR,qBAA0BrE,GAAWwB,OAAOC,UAA5C,oBAAyE,CACrEZ,WAAYI,EACZC,SACAC,kBAECmD,MAAK,SAAAC,GACFC,IAAMC,QAAQ,mCACdxC,QAEHyC,OAAM,SAAAC,GACHH,IAAMxC,MAAM,iCAEf4C,SAAQ,WACLtD,GAAe,CAAEL,GAAI,EAAGC,OAAQ,GAAIC,cAAe,GAAIC,MAAM,SAEtE,CAACpB,GAAWwB,OAAOC,UAAWQ,KAE3BqE,GAAmBrB,uBAAY,SAACe,GAClCA,EAAEO,iBADsC,IAEhChD,EAAUyC,EAAEG,OAAZ5C,MACJA,EAAM,GAAGiD,KAAO,QAChBhC,IAAMxC,MAAM,4BAGhB2B,IAAU,SAAAsC,GAAG,kCAAUA,GAAV,IAAe1C,MAAM,GAAD,mBAAM0C,EAAI1C,OAAV,CAAiB,CAAEkD,QAASC,IAAIC,gBAAgBpD,EAAM,IAAKY,KAAMZ,EAAM,aACzG,CAACI,KAEEiD,GAAmB3B,uBAAY,SAACwB,GAClC9C,IAAU,SAAAsC,GAAG,kCAAUA,GAAV,IAAe1C,MAAO0C,EAAI1C,MAAMjD,QAAO,SAAA6D,GAAI,OAAIA,EAAKsC,UAAYA,YAC9E,CAAC9C,KAEEkD,GAA0B5B,uBAAY,SAACe,GACzC5B,IAAQC,IAAR,qBAA0BrE,GAAWwB,OAAOC,UAA5C,qBAA0E,CACtEqF,eAAgB,CACZC,KAAMhF,GAAK+E,eAAeC,KAC1BrB,KAAMC,IAAOK,MAGhB1B,MAAK,SAAAC,GAEFtC,UAKT,CAACF,GAAM/B,GAAWwB,OAAOC,UAAWQ,KAEjC+E,GAA6B/B,uBAAY,SAACe,GAC5CzF,IAAU,SAAA2E,GAAK,kCAAUA,GAAV,IAAiBtD,SAAQ,OAAEoE,QAAF,IAAEA,IAAK,UAChD,CAACzF,KAOE0G,GAAyBhC,uBAAY,SAACe,GACxCzF,IAAU,SAAA2E,GAAK,kCAAUA,GAAV,IAAiBxD,aAAY,OAAEsE,QAAF,IAAEA,IAAK,UACpD,CAACzF,KAEE2G,GAA2BjC,uBAAY,SAACe,GAAO,IACzCrE,EAAUqE,EAAEG,OAAZxE,MACRpB,IAAU,SAAA2E,GAAK,kCAAUA,GAAV,IAAiBrD,eAAgBF,SACjD,CAACpB,KAEJ,OACI,kBAAC4G,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,yBAAKC,UAAU,iCAAiCvF,GAAKwF,cAEzD,kBAACH,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,KACZ,kBAACC,EAAA,EAAD,CAAMH,UAAU,aACZ,kBAACI,EAAA,EAAD,KACI,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,6BAAK,0BAAMC,UAAU,cAAhB,UAAL,WAAiDvF,SAAjD,IAAiDA,IAAjD,UAAiDA,GAAMY,cAAvD,aAAiD,EAAcH,MAC/D,6BAAK,0BAAM8E,UAAU,cAAhB,cAAL,KAAyD,OAAJvF,SAAI,IAAJA,IAAA,UAAAA,GAAMM,oBAAN,eAAoBnE,QAApB,OAA6B6D,SAA7B,IAA6BA,IAA7B,UAA6BA,GAAMM,aAAa,UAAhD,aAA6B,EAAuBG,KAAO,IAChH,6BAAK,0BAAM8E,UAAU,cAAhB,kBAAL,QAA6D7J,YAAe,iBAACsE,SAAD,IAACA,QAAD,EAACA,GAAM4F,qBAAP,QAAwB,IACpG,6BAAK,0BAAML,UAAU,cAAhB,iBAAL,IAAwD3B,IAAM,OAAC5D,SAAD,IAACA,QAAD,EAACA,GAAM6F,cAAchC,OAAO,iBAC1F,6BAAK,0BAAM0B,UAAU,cAAhB,gBAAL,IAAuD3B,IAAM,OAAC5D,SAAD,IAACA,QAAD,EAACA,GAAM8F,aAAajC,OAAO,qBAKxG,kBAAC6B,EAAA,EAAD,CAAMH,UAAU,aACZ,kBAACI,EAAA,EAAD,KACI,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,yBAAKC,UAAU,iCAAf,WACA,yBAAKA,UAAU,cAAf,gBAAyC,uBAAGQ,KAAI,iBAAE/F,SAAF,IAAEA,IAAF,UAAEA,GAAM+E,sBAAR,aAAE,EAAsBC,YAAxB,QAAgC,GAAIZ,OAAO,SAAS4B,IAAI,sBAAsBT,UAAU,yBAA/F,cAAzC,KACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,mBAAf,gBACA,kBAACU,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiBC,UAAU,UAAUZ,UAAU,SAC3C,kBAAC,IAAD,CACIa,UAAQ,EACR3F,KAAK,YACL4F,SAAU,IAAIC,KAAJ,iBAAStG,SAAT,IAASA,IAAT,UAASA,GAAM+E,sBAAf,aAAS,EAAsBpB,YAA/B,QAAuCC,OACjD2C,WAAW,qBACXC,QAAS,IAAIF,KACbG,gBAAgB,gBAChBlB,UAAU,eACVmB,eAAa,EACbC,aAAa,MACbC,SAAU9B,GACV+B,YAAa,SAAC5C,GAAD,OAAOA,EAAEO,oBAE1B,kBAACsC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAiBC,KAAK,0BAU1D,kBAAC1B,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,KACZ,kBAACC,EAAA,EAAD,CAAMH,UAAU,aACZ,kBAACI,EAAA,EAAD,KACI,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,yBAAKC,UAAU,iCAAf,kBAEJ,kBAACF,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAAC0B,EAAA,EAAD,CAAOC,UAAQ,EAAC1B,UAAU,eACtB,+BACI,4BACI,0CACA,sCAGR,sCACKvF,SADL,IACKA,IADL,UACKA,GAAMkH,wBADX,aACK,EAAwB3G,KAAI,SAAC4G,EAAGjL,GAAJ,OACzB,wBAAIkL,IAAKlL,GACL,4BAAKiL,EAAEE,YACP,4BAAKzD,IAAOuD,EAAExD,MAAM2D,IAAIpL,EAAG,QAAQ2H,OAAO,wBAM9D,kBAACwB,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAU,qDACnB,kBAACgC,EAAA,EAAD,CAAQC,MAAM,iBAAiBjC,UAAU,kBAAkBrG,GAAG,qBAA9D,iBACA,kBAAC,EAAD,CAAUc,KAAI,OAAEA,SAAF,IAAEA,QAAF,EAAEA,GAAMyH,cACtB,6BACI,yBAAKlC,UAAU,mBAAf,yBACA,yBAAKA,UAAU,oBACX,kBAACmC,EAAA,EAAD,CACIF,MAAgF,cAA1D,OAAf3G,SAAe,IAAfA,IAAA,UAAAA,GAAiBtC,QAAO,SAAAwC,GAAG,MAAmB,UAAfA,EAAI5B,UAAoBwI,aAAvD,eAA8DxI,QAC/D,UAC0E,cAA1D,OAAf0B,SAAe,IAAfA,IAAA,UAAAA,GAAiBtC,QAAO,SAAAwC,GAAG,MAAmB,UAAfA,EAAI5B,UAAoBwI,aAAvD,eAA8DxI,QAAwB,SACT,aAA1D,OAAf0B,SAAe,IAAfA,IAAA,WAAAA,GAAiBtC,QAAO,SAAAwC,GAAG,MAAmB,UAAfA,EAAI5B,UAAoBwI,aAAvD,iBAA8DxI,QAAuB,UAClF,YACdoG,UAAU,oCACVqC,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBAAM3J,GAAe4J,QAAQC,eAAe,CAAEC,SAAU,aARrE,WAUKxK,EAAiB,OAACoD,SAAD,IAACA,IAAD,WAACA,GAAiBtC,QAAO,SAAAwC,GAAG,MAAmB,UAAfA,EAAI5B,UAAoBwI,aAAxD,cAAC,GAA8DxI,eAVrF,UAUgG,gBAS5H,kBAACkG,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACI,EAAA,EAAD,CAAMH,UAAU,aACZ,kBAACI,EAAA,EAAD,KACI,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAU,QACnB,kBAACgC,EAAA,EAAD,CAAQC,MAAK,UAA0B,gBAAf,OAAN9F,SAAM,IAANA,QAAA,EAAAA,GAAQ7B,UAA4B,iBAAmB,oBAAsB0F,UAAU,kBAAkBuC,QAAS,kBAAM7E,GAAoB,gBAA9J,cACmB,iBAAlBlF,GAAS2C,MAA2B,CAAC,QAAS,YAAYwH,UAAwB,OAAfrH,SAAe,IAAfA,QAAA,EAAAA,GAAiB1E,QAAS,EAAI0E,IAA+B,OAAfA,SAAe,IAAfA,QAAA,EAAAA,GAAiB1E,QAAS,GAAGgD,OAAS,UAAY,kBAACoI,EAAA,EAAD,CAAQC,MAAK,UAA0B,iBAAf,OAAN9F,SAAM,IAANA,QAAA,EAAAA,GAAQ7B,UAA6B,iBAAmB,oBAAsB0F,UAAU,YAAYuC,QAAS,kBAAM7E,GAAoB,iBAAzJ,gBAEnJ,gBAApBvB,GAAO7B,UACJ,kBAACwF,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACF,EAAA,EAAD,CAAKG,UAAU,QACX,kBAACF,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,6BACjC,kBAAC6C,EAAA,EAAD,sBAEJ,kBAAC/C,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,qDAArC,OACK7D,SADL,IACKA,IADL,WACKA,GAAQL,eADb,mBACK,GAAiBiC,eADtB,cACK,GAA0BK,OAGnC,kBAACyB,EAAA,EAAD,CAAKG,UAAU,QACX,kBAACF,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,6BACjC,kBAAC6C,EAAA,EAAD,sBAEJ,kBAAC/C,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,qDACjC,kBAACU,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WACvB,kBAACW,EAAA,EAAD,CAAgBvB,UAAU,gCAA1B,OACK7D,SADL,IACKA,IADL,WACKA,GAAQL,eADb,mBACK,GAAiBiC,eADtB,cACK,GAA0BQ,UAD/B,MAGA,kBAAC,IAAD,CAAgBuE,KAAK,OAAOC,KAAK,QAAQ1I,MAAK,OAAE8B,SAAF,IAAEA,IAAF,WAAEA,GAAQL,eAAV,mBAAE,GAAiBiC,eAAnB,cAAE,GAA0BS,QAASwE,SAAUpE,GAA4BqE,YAAY,kBAChI,SAACC,GAAD,OAAgB,kBAACC,EAAA,EAAUD,UAMhD,kBAACrD,EAAA,EAAD,CAAKG,UAAU,QACX,kBAACF,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,6BACjC,kBAAC6C,EAAA,EAAD,mBAEJ,kBAAC/C,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,UAArC,OACK7D,SADL,IACKA,IADL,WACKA,GAAQL,eADb,mBACK,GAAiB+B,iBADtB,cACK,GAA4B7C,KAAI,SAACoI,EAAKzM,GAAN,aAC7B,yBAAKkL,IAAKlL,GAAV,IAAeyM,EAAIlI,MAAY,OAANiB,SAAM,IAANA,IAAA,UAAAA,GAAQL,eAAR,eAAiB+B,UAAUjH,UAAWD,EAAI,EAAI,GAAK,WAIxF,kBAACkJ,EAAA,EAAD,CAAKG,UAAU,QACX,kBAACF,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,6BACjC,kBAAC6C,EAAA,EAAD,8BAEJ,kBAAC/C,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,KACnB,kBAAC,IAAD,CACIS,aAAW,EACXC,SAAO,EACPL,YAAY,2BACZ5I,MAAK,OAAE8B,SAAF,IAAEA,IAAF,WAAEA,GAAQL,eAAV,cAAE,GAAiBgC,oBACxByF,iBAAkB,SAACC,GAAD,MC3YnD,wJACDC,KAAKC,OD0Y6EF,GC1Y/DG,gBD2YeX,SAAUvE,GACVmF,iBAAkB,SAACnJ,GAAD,OAAU,yBAAK4H,MAAO,CAAEwB,QAAS,OAAQC,WAAY,WAAY,0BAAMzB,MAAO,CAAE0B,WAAY,OAAQC,SAAU,OAAQC,cAAe,OAASjE,UAAU,cAAcvF,EAAKyJ,SAC7LC,iBAAkB,SAACX,GAAD,OAAgB,wDAClCY,WAAY,CAAEC,kBAAmB,kBAAM,MAAMC,mBAAoB,kBAAM,YAM3F,kBAACxE,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAAC,SAAD,CACI1G,YAAaA,GACbkL,YAAa,CAAEC,OAAQ,SACvBC,oBAAqB,SAACpL,GAAD,OAAiBC,GAAeD,IACrDqL,qBAAsB,SAACrL,GAAD,OAvQ3B,SAACA,GACxBgD,IAAU,SAAAuB,GAAK,kCAAUA,GAAV,IAAiB7B,KAAM4I,IAAYtL,QAsQiBuL,CAAmBvL,OAGlE,kBAACyG,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAU,QAAvB,OACK7D,SADL,IACKA,IADL,WACKA,GAAQF,aADb,cACK,GAAejB,KAAI,SAAC6B,EAAMlG,GAAP,iBAChB,kBAAC,WAAD,CAAUkL,IAAKlL,GACX,yBAAKqJ,UAAU,4CACN,OAAJnD,QAAI,IAAJA,GAAA,UAAAA,EAAMA,YAAN,eAAY3B,OAAQ,kBAAC,IAAD,CAAiBsG,KAAK,QAAQS,MAAM,UAAUjC,UAAU,OAAOuC,QAAS,kBAAMjD,GAAiBzC,EAAKsC,UAAUkD,MAAO,CAAEC,OAAQ,aADxJ,qBAC0KzF,QAD1K,IAC0KA,GAD1K,UAC0KA,EAAMA,YADhL,aAC0K,EAAY3B,YADtL,QAC8L2B,EAAKgI,UAEnM,yBAAK7E,UAAU,cAI3B,kBAACF,EAAA,EAAD,CAAKC,GAAG,MACJ,2BAAO+C,KAAK,OAAOgC,IAAKhM,GAAYuJ,MAAO,CAAEwB,QAAS,QAAUb,SAAU,SAACtE,GAAD,OAAOM,GAAiBN,MAElG,kBAACsD,EAAA,EAAD,CAAQC,MAAM,mBAAmBjC,UAAU,aAAauC,QAAS,kBAAMzJ,GAAW0J,QAAQuC,UAA1F,IAAoG,kBAAC,IAAD,CAAiBvD,KAAK,WAA1H,eACA,kBAACQ,EAAA,EAAD,CAAQC,MAAM,iBAAiBjC,UAAU,cAAcuC,QAAS,kBAAMzD,GAAkB,UAAUkG,SAAUvH,IAAeA,GAAe,oCAAE,kBAACwH,EAAA,EAAD,CAAShD,MAAM,QAAQ/C,KAAK,OAA9B,eAAsD,QAC3K,gBAApB/C,GAAO7B,UACJ,kBAAC0H,EAAA,EAAD,CAAQC,MAAM,YAAYjC,UAAU,8BAA8BuC,QAAS,kBAAMzD,GAAkB,SAASkG,SAAUvH,IAAeA,GAAe,oCAAE,kBAACwH,EAAA,EAAD,CAAShD,MAAM,QAAQ/C,KAAK,OAA9B,eAAsD,cAOlO,kBAACY,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,KACZ,yBAAKF,UAAU,mBAAf,YACA,yBAAKA,UAAU,QACX,kBAAC,IAAD,CACIkF,QAAS,CAAC,CAAE7K,MAAO,cAAe6J,MAAO,eAAiB,CAAE7J,MAAO,aAAc6J,MAAO,eACxF7J,MAAOrB,GAAOsB,SACd+I,aAAW,EACXL,SAAU,SAACtE,GAAD,OAAOgB,GAA2BhB,IAC5CuE,YAAY,uBACZmB,WAAY,CAAEC,kBAAmB,kBAAM,MAAMC,mBAAoB,kBAAM,WAInF,kBAACxE,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,KACZ,yBAAKF,UAAU,mBAAf,aACA,yBAAKA,UAAU,QACX,kBAAC,IAAD,CACIkF,QAxOd,CACV,CAAEhB,MAAO,mBAAoB7J,MAAO,kBACpC,CAAE6J,MAAO,mBAAoB7J,MAAO,kBAuOZA,MAAOrB,GAAOoB,aACd4I,SAAU,SAACtE,GAAD,OAAOiB,GAAuBjB,IACxCuE,YAAY,wBACZmB,WAAY,CAAEC,kBAAmB,kBAAM,MAAMC,mBAAoB,kBAAM,WAInF,kBAACxE,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAIF,UAAU,uBAC1B,yBAAKA,UAAU,mBAAf,QACA,yBAAKA,UAAU,QACX,kBAACmD,EAAA,EAAD,CAAOL,KAAK,OAAOG,YAAY,YAAY5I,MAAOrB,GAAOuB,eAAgByI,SAAUpD,OAG3F,kBAACE,EAAA,EAAD,CAAKC,GAAG,MAEAnF,GAGI,kBAACuF,EAAA,EAAD,CAAMH,UAAU,aACZ,kBAACI,EAAA,EAAD,CAAUJ,UAAU,qBAChB,yBACIqC,MAAO,CACH8C,SAAU,WACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,EAEN1B,QAAS,OACT2B,eAAgB,SAChB1B,WAAY,WAGhB,kBAACmB,EAAA,EAAD,CAAS5C,MAAO,CAAEoD,MAAO,GAAIjB,OAAQ,SAKjD,6BACK/J,GAAKc,gBAAgB3E,QAAU,GAC5B,kBAACuJ,EAAA,EAAD,CAAMH,UAAU,aACZ,kBAACI,EAAA,EAAD,CAAUJ,UAAU,qBAChB,yBAAKqC,MAAO,CAAEoD,MAAO,OAAQjB,OAAQ,SAAWxE,UAAU,+DAA1D,qBAIXvF,GAAKc,gBAAgBvC,QAAO,SAAAwC,GAAG,MAAmB,UAAfA,EAAI5B,UAAoB6B,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE/B,GAAKgC,EAAEhC,MAAIqB,KAAI,SAAC0K,EAAU/O,GAAX,+CACxF,kBAACwJ,EAAA,EAAD,CAAMH,UAAU,YAAY6B,IAAKlL,GAC7B,kBAACyJ,EAAA,EAAD,CAAUJ,UAAU,qBAChB,yBAAKA,UAAU,oBAAoBqC,MAAO,CAAEgD,MAAO,KAC/C,kBAAClD,EAAA,EAAD,CAAOnC,UAAU,oCAAoCiC,MAAK,UAA2B,aAAtByD,EAASpL,SAA0B,SAAkC,eAAtBoL,EAASpL,SAA4B,UAAY,YAAeoL,EAASpL,WAE3L,yBAAK0F,UAAU,oBAAoBqC,MAAO,CAAE+C,IAAK,GAAIC,MAAO,KACjC,gBAAtBK,EAASpL,UACN,kBAAC6H,EAAA,EAAD,CACIF,MAA2B,aAApByD,EAAS9L,OACV,UACqB,aAApB8L,EAAS9L,OAAwB,SACT,YAApB8L,EAAS9L,OAAuB,UAC7B,YACdoG,UAAU,oCACVqC,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBAAM3J,GAAe4J,QAAQC,eAAe,CAAEC,SAAU,aARrE,UAUKxK,EAAkBwN,EAAS9L,eAVhC,QAU2C,UAInD,yBAAKoG,UAAU,iCAAf,OAAgD0F,QAAhD,IAAgDA,GAAhD,UAAgDA,EAAUC,iBAA1D,aAAgD,EAAqBzK,MACrE,yBAAK8E,UAAU,mBAAmB3B,IAAOuH,IAAIF,EAASG,WAAWC,QAAQxH,OAAO,uBACzD,gBAAtBoH,EAASpL,UACN,6BACI,kBAACuF,EAAA,EAAD,CAAKG,UAAU,QACX,kBAACF,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,6BACjC,kBAAC6C,EAAA,EAAD,sBAEJ,kBAAC/C,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,qDAArC,OACK0F,QADL,IACKA,GADL,UACKA,EAAU5J,eADf,iBACK,EAAmBiC,eADxB,aACK,EAA4BK,OAGrC,kBAACyB,EAAA,EAAD,CAAKG,UAAU,QACX,kBAACF,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,6BACjC,kBAAC6C,EAAA,EAAD,sBAEJ,kBAAC/C,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,qDAArC,OACK0F,QADL,IACKA,GADL,UACKA,EAAU5J,eADf,iBACK,EAAmBiC,eADxB,aACK,EAA4BQ,UADjC,aAC+CmH,QAD/C,IAC+CA,GAD/C,UAC+CA,EAAU5J,eADzD,iBAC+C,EAAmBiC,eADlE,aAC+C,EAA4BS,UAG/E,kBAACqB,EAAA,EAAD,CAAKG,UAAU,QACX,kBAACF,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,6BACjC,kBAAC6C,EAAA,EAAD,mBAEJ,kBAAC/C,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,UAArC,OACK0F,QADL,IACKA,GADL,UACKA,EAAU5J,eADf,iBACK,EAAmB+B,iBADxB,aACK,EAA8B7C,KAAI,SAACoI,EAAKzM,GAAN,aAC/B,yBAAKkL,IAAKlL,GAAV,IAAeyM,EAAIlI,KAAK,0BAAM8E,UAAU,mBAAhB,IAAoCoD,EAAIjI,KAAxC,MAA8D,OAARuK,QAAQ,IAARA,GAAA,UAAAA,EAAU5J,eAAV,eAAmB+B,UAAUjH,UAAWD,EAAI,EAAI,GAAK,UAI/I,kBAACkJ,EAAA,EAAD,CAAKG,UAAU,QACX,kBAACF,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,IAAI5C,UAAU,6BACjC,kBAAC6C,EAAA,EAAD,8BAEJ,kBAAC/C,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAI0C,GAAG,KAAvB,OACK8C,QADL,IACKA,GADL,UACKA,EAAU5J,eADf,aACK,EAAmBgC,oBAAoB9C,KAAI,SAAA6C,GAAS,OAAKA,EAAUqG,YAKpF,yBAAKlE,UAAU,sBAAsB+F,YAAWL,EAAS3J,OACzD,yBAAKiE,UAAU,QAAf,OACK0F,QADL,IACKA,GADL,UACKA,EAAUzJ,aADf,aACK,EAAiBjB,KAAI,SAAC6B,EAAMlG,GAAP,OAClB,kBAAC,WAAD,CAAUkL,IAAKlL,GACX,yBAAKqJ,UAAU,+BACX,uBAAGQ,KAAM3D,EAAKmJ,QAASnH,OAAO,SAAS4B,IAAI,sBAAsBT,UAAU,YAAYqC,MAAO,CAAE4D,eAAgB,SAAWpJ,EAAKgI,WAEpI,yBAAK7E,UAAU,cAYN,YAApB0F,EAAS9L,QAA0C,iBAAlBpB,GAAS2C,MACvC,yBAAK6E,UAAU,mCACX,kBAACgC,EAAA,EAAD,CAAQC,MAAM,UAAUM,QAAS,kBAAMvI,GAAe,CAAEL,GAAI+L,EAAS/L,GAAIC,OAAQ,WAAYC,cAAe,GAAIC,MAAM,MAAtH,aACA,kBAACkI,EAAA,EAAD,CAAQC,MAAM,UAAUjC,UAAU,OAAOuC,QAAS,kBAAMvI,GAAe,CAAEL,GAAI+L,EAAS/L,GAAIC,OAAQ,WAAYC,cAAe,GAAIC,MAAM,MAAvI,WACA,kBAACkI,EAAA,EAAD,CAAQC,MAAM,aAAd,cAGP,UAAAyD,EAAS5J,eAAT,mBAAkBoK,eAAlB,eAA2BtP,QAAS,GACjC,yBAAKoJ,UAAU,QAAf,UACK0F,EAAS5J,eADd,iBACK,EAAkBoK,eADvB,aACK,EAA2BlL,KAAI,SAACvB,EAAO0M,GAAR,OAC5B,kBAAChG,EAAA,EAAD,CAAMH,UAAU,OAAO6B,IAAKsE,GACxB,kBAAC/F,EAAA,EAAD,CAAUJ,UAAU,OAChB,yBAAKA,UAAU,iCAAiCvG,EAAMkM,UAAUzK,MAChE,yBAAK8E,UAAU,mBAAmB3B,IAAO5E,EAAMoM,WAAWvH,OAAO,uBACjE,6BAAM7E,EAAMD,eAMhC,yBAAKwG,UAAS,WAAK,UAAA0F,EAAS5J,eAAT,mBAAkBoK,eAAlB,eAA2BtP,QAAS,GAAK,SACxD,kBAAC,IAAD,CACIwP,KAAK,IACLlL,KAAK,UAAUvB,GAAG,UAClB0I,MAAO,CAAEgE,aAAc,QACvBrG,UAAU,eACViD,YAAY,qBACZ5I,MAAOqL,EAAS/L,KAAOF,GAAMF,WAAaE,GAAMD,QAAU,GAC1DwJ,SAAU,SAACtE,GAAD,OAAOhF,GAAS,CAAEH,WAAYmM,EAAS/L,GAAIH,QAASkF,EAAEG,OAAOxE,SACvEiM,WAAY,SAAC5H,GACK,UAAVA,EAAEmD,MACFnD,EAAEG,OAAO0H,OA9cjEzJ,IAAQS,KAAR,qBAA2B7E,GAAWwB,OAAOC,UAA7C,mBAAyEV,IACpEuD,MAAK,SAAAC,GACFC,IAAMC,QAAQ,sBACdzD,GAAS,CACLH,WAAY,GACZC,QAAS,KAEbmB,QAEHyC,OAAM,SAAAC,GACHH,IAAMxC,MAAM,8BA+cJ,yBAAKoK,IAAKlM,KACV,kBAAC4N,EAAA,EAAD,CAAOC,OAAQ1M,GAAYD,KAAM4M,UAAQ,EAACC,OAAQ,kBAAM3M,GAAe,CAAEL,GAAI,EAAGC,OAAQ,GAAIC,cAAe,GAAIC,MAAM,MACjH,kBAAC8M,EAAA,EAAD,CAAW5G,UAAU,OACjB,kBAACH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,yBAAKC,UAAU,QACa,aAAvBjG,GAAYH,OACP,iEACA,uDAed,kBAACkG,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAU,mCACnB,kBAACgC,EAAA,EAAD,CAAQC,MAAM,YAAYjC,UAAU,OAAOuC,QAAS,kBAAMvI,GAAe,CAAEL,GAAI,EAAGC,OAAQ,GAAIC,cAAe,GAAIC,MAAM,MAAvH,UACA,kBAACkI,EAAA,EAAD,CAAQC,MAAM,UAAUjC,UAAU,kBAAkBgF,SAAUvH,GAAc8E,QAAS,kBAAMxD,GAAwBhF,GAAYJ,GAAII,GAAYH,OAAQG,GAAYF,iBAAiBE,GAAYH,iBAYvN,SAAC,GAAc,IAAD,MAAXa,EAAW,EAAXA,KACVoM,EAAWC,MAAM,GAAGC,OAE1B,OACI,kBAACC,EAAA,EAAD,CAAqBC,QAAQ,SAASC,UAAU,SAASrI,OAAO,oBAAoBsI,gBAAgB,qBAChG,kBAACC,EAAA,EAAD,KACI,kBAACvH,EAAA,EAAD,CAAKG,UAAU,OACX,kBAACF,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKC,UAAU,oBAAf,kBAEJ,kBAACF,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACsH,EAAA,EAAD,CAAUC,SAAO,EAACjN,OAAO,iBAACI,QAAD,IAACA,GAAD,UAACA,EAAM8M,gBAAP,aAAC,EAAgB3Q,cAAjB,QAA2B,GAAK,EAAI,KACzD,yBAAKoJ,UAAU,yBAAf,2BAAyDvF,QAAzD,IAAyDA,GAAzD,UAAyDA,EAAM8M,gBAA/D,aAAyD,EAAgB3Q,OAAzE,QAGR,kBAACkJ,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAU,QACnB,kBAACH,EAAA,EAAD,KACKgH,EAAS7L,KAAI,SAAC6B,EAAMlG,GAAP,iBACV,kBAACmJ,EAAA,EAAD,CAAKC,GAAG,KAAK8B,IAAKlL,GACd,uBAAG6J,KAAI,iBAAE/F,QAAF,IAAEA,GAAF,UAAEA,EAAM8M,SAAS5Q,UAAjB,aAAE,EAAmBqP,eAArB,QAAgC,GAAInH,OAAO,SAAS4B,IAAI,sBAAsBT,UAAU,aAC1FrJ,EAAI,EADT,YACc8D,QADd,IACcA,GADd,UACcA,EAAM8M,SAAS5Q,UAD7B,aACc,EAAmBkO,gBAMjD,kBAAC/E,EAAA,EAAD,CAAKC,GAAG,MACJ,yBAAKC,UAAU,cAAf","file":"static/js/17.d09b5128.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'indonesia', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'rb',\n        million: 'jt',\n        billion: 'M',\n        trillion: 'T'\n    },\n    ordinal: function (number) {\n        return number === 1 ? 'er' : 'ème';\n    },\n    currency: {\n        symbol: 'IDR'\n    }\n});\nnumeral.locale('indonesia')\n\nexport function convertToRupiah(angka) {\n    var rupiah = '';\n    var angkarev = angka.toString().split('').reverse().join('');\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';\n\n    return rupiah.split('', rupiah.length - 1).reverse().join('');\n}\n\nexport function convertNumberCurrencies(n) {\n    const ranges = [\n        { divider: 1e18, suffix: 'E' },\n        { divider: 1e15, suffix: 'P' },\n        { divider: 1e12, suffix: 'T' },\n        { divider: 1e9, suffix: 'G' },\n        { divider: 1e6, suffix: 'M' },\n        { divider: 1e3, suffix: 'k' }\n    ];\n\n    for (var i = 0; i < ranges.length; i++) {\n        if (n >= ranges[i].divider) {\n            return (n / ranges[i].divider).toString() + ranges[i].suffix;\n        }\n    }\n    return n.toString();\n}\n\nexport function formatDate(date) {\n    let d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (d.toString() === 'Invalid Date') {\n        return null;\n    }\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function dataURIToBlob(dataURI) {\n    const splitDataURI = dataURI.split(',')\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\n\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type: mimeString })\n}\n\nexport function matchWildcard(str, wildcard) {\n    var escapeRegex = (str) => str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n    return new RegExp(\"^\" + wildcard.split(\"*\").map(escapeRegex).join(\".*\") + \"$\").test(str);\n}\n\nexport function convertNumber(numb, format = '0.0a') {\n    return numeral(numb).format(format)\n}\n","import React, { Fragment, useCallback, useMemo, useRef, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, ModalBody, Modal, Badge, Input, InputGroup, InputGroupAddon, InputGroupText, Spinner, Table, Label, UncontrolledPopover, PopoverBody, Progress } from \"reactstrap\";\nimport { useFormik } from \"formik\";\nimport Datepicker from \"react-datepicker\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport moment from \"moment\";\nimport { convertToRupiah } from \"../../../../utils/formatter\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { EditorState, ContentState, convertFromHTML } from 'draft-js';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport draftToHtml from 'draftjs-to-html';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport Select from \"react-select\";\nimport CreatableSelect from 'react-select/creatable'\nimport { toast } from \"react-toastify\";\nimport request from \"../../../../utils/request\";\nimport htmlParser from \"html-react-parser\";\nimport { validateEmail } from './shared';\nimport ReactInputMask from \"react-input-mask\";\nimport { useAuthUser } from \"../../../../store\";\nimport { useFilterProjectContext } from \"../ProjectContext\";\n\nconst statusDeliverable = {\n    draft: 'Draft',\n    pending: 'For Review',\n    rejected: 'To Revise',\n    approved: 'Approved',\n}\n\nexport default () => {\n    const authUser = useAuthUser();\n    const matchRoute = useRouteMatch();\n    const deliverableRef = useRef();\n    const uploadFile = useRef(null)\n    const [filter, setFilter] = useFilterProjectContext()\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\n    const [reply, setReply] = useState({\n        idActivity: '',\n        comment: '',\n    })\n    const [modalVerify, setModalVerify] = useState({ id: 0, status: '', statusMessage: '', open: false });\n    const { data: getData, error, mutate } = useSWR(() => `v1/project/${matchRoute.params.projectId}/activity?&sort=${filter.sortActivity.value}${filter.category ? `&category=${filter.category.value}` : ''}${filter.searchActivity ? `&search=${filter.searchActivity}` : ''}`);\n    const loading = !getData || error\n    const data = useMemo(() => {\n        return getData?.data?.data ?? [];\n    }, [getData]);\n\n    const attendancesOptions = useMemo(() => {\n        const attendances = data?.professional?.map(pro => ({ name: pro.name, id: pro.id, role: 'professional' })) ?? [];\n        return attendances.concat([{ name: data?.client?.name, id: data?.client?.id, role: 'client' }]);\n    }, [data])\n\n    const deliverableData = useMemo(() => {\n        return data?.activityDetails?.filter(act => act.category === 'deliverable').sort((a, b) => a.id - b.id) ?? null\n    }, [data])\n\n    const { values, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: {\n            idActivity: 0,\n            category: 'discussion',\n            content: {},\n            text: '',\n            isDraft: 'false',\n            files: [],\n        },\n        // validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors, setValues }) => {\n            setSubmitting(true)\n            let formData = new FormData()\n            if (values.idActivity) {\n                formData.append('idActivity', values.idActivity)\n            }\n            formData.append('category', values.category)\n            formData.append('content', JSON.stringify(values.content))\n            formData.append('text', values.text)\n            formData.append('isDraft', values.isDraft)\n            if (values.files.length > 0) {\n                values.files.filter(f => !f.id).map((file, i) => {\n                    return formData.append('file' + (i + 1), file.file, file.file.name)\n                })\n            }\n\n            if (values.idActivity) {\n                request.put(`v1/project/${matchRoute.params.projectId}/activity`, formData)\n                    .then(res => {\n                        toast.success('Create Discussion Successfully')\n                        setValues({\n                            idActivity: 0,\n                            category: 'discussion',\n                            content: {},\n                            text: '',\n                            isDraft: 'false',\n                            files: [],\n                        })\n                        setEditorState(EditorState.createEmpty())\n                        mutate()\n                    })\n                    .catch(err => {\n                        toast.error('Create Discussion Failed.');\n                    })\n                    .finally(() => {\n                        setSubmitting(false)\n                    })\n            } else {\n                request.post(`v1/project/${matchRoute.params.projectId}/activity`, formData)\n                    .then(res => {\n                        toast.success('Create Discussion Successfully')\n                        setValues({\n                            idActivity: 0,\n                            category: 'discussion',\n                            content: {},\n                            text: '',\n                            isDraft: 'false',\n                            files: [],\n                        })\n                        setEditorState(EditorState.createEmpty())\n                        mutate()\n                    })\n                    .catch(err => {\n                        toast.error('Create Discussion Failed.');\n                    })\n                    .finally(() => {\n                        setSubmitting(false)\n                    })\n            }\n        }\n    })\n\n    const handleClickCategory = useCallback((category) => {\n        if (category === 'discussion') {\n            setValues((state) => ({ ...state, category }))\n        } else {\n            if (deliverableData.length > 0 && deliverableData[deliverableData.length - 1].status === 'draft') {\n                setValues({ idActivity: deliverableData[deliverableData.length - 1].id, category, content: { attendees: attendancesOptions, additionalAttendees: deliverableData[deliverableData.length - 1].content?.additionalAttendees, meeting: deliverableData[deliverableData.length - 1].content?.meeting }, text: deliverableData[deliverableData.length - 1].text, isDraft: 'true', files: deliverableData[deliverableData.length - 1].files })\n                setEditorState(EditorState.createWithContent(\n                    ContentState.createFromBlockArray(\n                        convertFromHTML(deliverableData[deliverableData.length - 1].text)\n                    )\n                ))\n            } else {\n                setValues((state) => ({ ...state, idActivity: 0, category, content: { attendees: attendancesOptions, additionalAttendees: [], meeting: { date: moment().format('DD MMMM YYYY'), startTime: moment().format('HH:mm'), endTime: '' } } }))\n            }\n        }\n    }, [setValues, attendancesOptions, deliverableData])\n\n    const handleChangeAttendance = useCallback((e) => {\n        setValues(old => ({ ...old, content: { ...old.content, additionalAttendees: e ?? [] } }))\n    }, [setValues])\n\n    const handleChangeMeetingEndTime = useCallback((e) => {\n        const { value } = e.target;\n        setValues(old => ({ ...old, content: { ...old.content, meeting: { ...old.content.meeting, endTime: value } } }))\n    }, [setValues])\n\n    const handleEditorChange = (editorState) => {\n        setValues(state => ({ ...state, text: draftToHtml(editorState) }))\n    }\n\n    const handlePostReply = () => {\n        request.post(`v1/project/${matchRoute.params.projectId}/activity-reply`, reply)\n            .then(res => {\n                toast.success('Reply Successfully')\n                setReply({\n                    idActivity: '',\n                    comment: '',\n                })\n                mutate()\n            })\n            .catch(err => {\n                toast.error('Reply Failed');\n            })\n    }\n\n    const handleClickSubmit = useCallback(async (e) => {\n        await setValues(old => ({ ...old, isDraft: e }))\n        handleSubmit()\n    }, [setValues, handleSubmit])\n\n    const handleVerifyDeliverable = useCallback((id, status, statusMessage) => {\n        request.put(`v1/project/${matchRoute.params.projectId}/activity-status`, {\n            idActivity: id,\n            status,\n            statusMessage\n        })\n            .then(res => {\n                toast.success('Verify Deliverable Successfully')\n                mutate()\n            })\n            .catch(err => {\n                toast.error('Verify Deliverable Failed.');\n            })\n            .finally(() => {\n                setModalVerify({ id: 0, status: '', statusMessage: '', open: false })\n            })\n    }, [matchRoute.params.projectId, mutate])\n\n    const handleUploadFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setValues(old => ({ ...old, files: [...old.files, { preview: URL.createObjectURL(files[0]), file: files[0] }] }))\n    }, [setValues])\n\n    const handleDeleteFile = useCallback((preview) => {\n        setValues(old => ({ ...old, files: old.files.filter(file => file.preview !== preview) }))\n    }, [setValues])\n\n    const handleChangeMeetingDate = useCallback((e) => {\n        request.put(`v1/project/${matchRoute.params.projectId}/activity-meeting`, {\n            meetingDetails: {\n                link: data.meetingDetails.link,\n                date: moment(e)\n            }\n        })\n            .then(res => {\n                // toast.success('Create Discussion Successfully')\n                mutate()\n            })\n        // .catch(err => {\n        //     toast.error('Create Discussion Failed.');\n        // })\n    }, [data, matchRoute.params.projectId, mutate])\n\n    const handleChangeFilterCategory = useCallback((e) => {\n        setFilter(state => ({ ...state, category: e ?? '' }));\n    }, [setFilter])\n\n    const sorts = [\n        { label: 'Newest to Oldest', value: 'createdAt_DESC' },\n        { label: 'Oldest to Newest', value: 'createdAt_ASC' },\n    ]\n\n    const handleChangeFilterSort = useCallback((e) => {\n        setFilter(state => ({ ...state, sortActivity: e ?? '' }));\n    }, [setFilter])\n\n    const handleChangeFilterSearch = useCallback((e) => {\n        const { value } = e.target;\n        setFilter(state => ({ ...state, searchActivity: value }));\n    }, [setFilter])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <div className=\"font-xl font-weight-bold mb-4\">{data.projectName}</div>\n            </Col>\n            <Col xs=\"12\" md=\"4\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div><span className=\"text-muted\">Client</span> {data?.client?.name}</div>\n                                <div><span className=\"text-muted\">Consultant</span> {data?.professional?.length ? data?.professional[0]?.name : ''}</div>\n                                <div><span className=\"text-muted\">Contract value</span> IDR {convertToRupiah(data?.contractValue ?? 0)}</div>\n                                <div><span className=\"text-muted\">Starting Date</span> {moment(data?.stratingDate).format('DD MMMM YYYY')}</div>\n                                <div><span className=\"text-muted\">Closing Date</span> {moment(data?.closingDate).format('DD MMMM YYYY')}</div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div className=\"font-lg font-weight-bold mb-3\">Meeting</div>\n                                <div className=\"text-muted\">Meeting Link <a href={data?.meetingDetails?.link ?? ''} target=\"_blank\" rel=\"noopener noreferrer\" className=\"font-weight-bold ml-1\">Click here</a> </div>\n                                <div className=\"mt-2\">\n                                    <div className=\"text-muted mb-1\">Meeting Date</div>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\" className=\"w-100\">\n                                            <Datepicker\n                                                required\n                                                name=\"startDate\"\n                                                selected={new Date(data?.meetingDetails?.date ?? moment())}\n                                                dateFormat=\"dd MMMM yyyy hh:mm\"\n                                                minDate={new Date()}\n                                                placeholderText=\"Select a date\"\n                                                className=\"form-control\"\n                                                showTimeInput\n                                                autoComplete=\"off\"\n                                                onSelect={handleChangeMeetingDate}\n                                                onChangeRaw={(e) => e.preventDefault()}\n                                            />\n                                            <InputGroupText>\n                                                <FontAwesomeIcon icon=\"calendar-alt\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\" md=\"8\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div className=\"font-lg font-weight-bold mb-3\">Key Milestone</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Table bordered className=\"text-center\">\n                                    <thead>\n                                        <tr>\n                                            <th>Activities</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {data?.milestoneDetails?.map((v, i) =>\n                                            <tr key={i}>\n                                                <td>{v.activities}</td>\n                                                <td>{moment(v.date).add(i, 'days').format('DD MMMM YYYY')}</td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-between align-items-center\">\n                                <Button color=\"pinion-primary\" className=\"mr-2 text-light\" id=\"popover-file-list\">Project Files</Button>\n                                <FileList data={data?.fileDetails} />\n                                <div>\n                                    <div className=\"mb-1 text-muted\">Status of deliverable</div>\n                                    <div className=\"mb-3 text-center\">\n                                        <Badge\n                                            color={deliverableData?.filter(act => act.status !== 'draft').pop()?.status === 'approved'\n                                                ? 'success'\n                                                : (deliverableData?.filter(act => act.status !== 'draft').pop()?.status === 'rejected' ? 'danger'\n                                                    : (deliverableData?.filter(act => act.status !== 'draft').pop()?.status === 'pending' ? 'warning'\n                                                        : 'secondary'))}\n                                            className=\"font-lg text-light text-uppercase\"\n                                            style={{ cursor: \"pointer\" }}\n                                            onClick={() => deliverableRef.current.scrollIntoView({ behavior: \"smooth\" })}\n                                        >\n                                            {statusDeliverable[deliverableData?.filter(act => act.status !== 'draft').pop()?.status] ?? 'Draft'}\n                                        </Badge>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <Button color={`${values?.category === 'discussion' ? 'pinion-primary' : 'pinion-secondary'}`} className=\"text-light mr-3\" onClick={() => handleClickCategory('discussion')}>Discussion</Button>\n                                {authUser.role === 'professional' && ['draft', 'rejected'].includes(deliverableData?.length > 0 ? deliverableData[deliverableData?.length - 1].status : 'draft') && <Button color={`${values?.category === 'deliverable' ? 'pinion-primary' : 'pinion-secondary'}`} className=\"text-dark\" onClick={() => handleClickCategory('deliverable')}>Deliverable</Button>}\n                            </Col>\n                            {values.category === 'deliverable' &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Meeting Date</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                            {values?.content?.meeting?.date}\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Meeting Time</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                            <InputGroup>\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <InputGroupText className=\"bg-transparent border-0 pl-0\">\n                                                        {values?.content?.meeting?.startTime} -\n                                                    </InputGroupText>\n                                                    <ReactInputMask type=\"text\" mask=\"99:99\" value={values?.content?.meeting?.endTime} onChange={handleChangeMeetingEndTime} placeholder=\"Example 08:00\">\n                                                        {(inputProps) => <Input {...inputProps} />}\n                                                    </ReactInputMask>\n                                                </InputGroupAddon>\n                                            </InputGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Attendees</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex\">\n                                            {values?.content?.attendees?.map((att, i) => (\n                                                <div key={i}> {att.name}{values?.content?.attendees.length === i + 1 ? '' : \", \"}</div>\n                                            ))}\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Additional attendees</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <CreatableSelect\n                                                isClearable\n                                                isMulti\n                                                placeholder=\"Input attendees email...\"\n                                                value={values?.content?.additionalAttendees}\n                                                isValidNewOption={(inputValue) => validateEmail(inputValue)}\n                                                onChange={handleChangeAttendance}\n                                                formatGroupLabel={(data) => <div style={{ display: 'flex', alignItems: 'center' }}><span style={{ fontWeight: 'bold', fontSize: '10px', letterSpacing: '1px' }} className=\"text-muted\">{data.label}</span></div>}\n                                                noOptionsMessage={(inputValue) => <span>Input attendees email</span>}\n                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                            <Col xs=\"12\">\n                                <Editor\n                                    editorState={editorState}\n                                    editorStyle={{ height: '300px' }}\n                                    onEditorStateChange={(editorState) => setEditorState(editorState)}\n                                    onContentStateChange={(editorState) => handleEditorChange(editorState)}\n                                />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-3\">\n                                {values?.files?.map((file, i) => (\n                                    <Fragment key={i}>\n                                        <div className=\"rounded border border-dark d-inline p-1\">\n                                            {file?.file?.name && <FontAwesomeIcon icon=\"times\" color=\"#f86c6b\" className=\"mr-1\" onClick={() => handleDeleteFile(file.preview)} style={{ cursor: \"pointer\" }} />} {file?.file?.name ?? file.fileName}\n                                        </div>\n                                        <div className=\"mb-3\"></div>\n                                    </Fragment>\n                                ))}\n                            </Col>\n                            <Col xs=\"12\">\n                                <input type='file' ref={uploadFile} style={{ display: 'none' }} onChange={(e) => handleUploadFile(e)} />\n                                {/* accept=\"image/*,video/mp4,video/x-m4v,video/*,application/*\" */}\n                                <Button color=\"pinion-secondary\" className=\"text-light\" onClick={() => uploadFile.current.click()}> <FontAwesomeIcon icon=\"upload\" /> Attachment</Button>\n                                <Button color=\"pinion-primary\" className=\"float-right\" onClick={() => handleClickSubmit('false')} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Post\"}</Button>\n                                {values.category === 'deliverable' &&\n                                    <Button color=\"secondary\" className=\"float-right mr-2 text-light\" onClick={() => handleClickSubmit('true')} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Draft\"}</Button>\n                                }\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Row>\n                    <Col xs=\"12\" md=\"3\">\n                        <div className=\"mb-1 text-muted\">Category</div>\n                        <div className=\"mb-3\">\n                            <Select\n                                options={[{ value: 'deliverable', label: 'Deliverable' }, { value: 'discussion', label: 'Discussion' }]}\n                                value={filter.category}\n                                isClearable\n                                onChange={(e) => handleChangeFilterCategory(e)}\n                                placeholder=\"Choose a category...\"\n                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                            />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                        <div className=\"mb-1 text-muted\">Date Sort</div>\n                        <div className=\"mb-3\">\n                            <Select\n                                options={sorts}\n                                value={filter.sortActivity}\n                                onChange={(e) => handleChangeFilterSort(e)}\n                                placeholder=\"Choose a date sort...\"\n                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                            />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\" className=\"justify-content-end\">\n                        <div className=\"mb-1 text-muted\">&nbsp;</div>\n                        <div className=\"mb-3\">\n                            <Input type=\"text\" placeholder=\"Search...\" value={filter.searchActivity} onChange={handleChangeFilterSearch} />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\">\n                        {\n                            loading\n                                ?\n\n                                <Card className=\"shadow-sm\">\n                                    <CardBody className=\"position-relative\">\n                                        <div\n                                            style={{\n                                                position: \"absolute\",\n                                                top: 0,\n                                                right: 0,\n                                                bottom: 0,\n                                                left: 0,\n                                                // background: \"rgba(255,255,255, 0.5)\",\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                            }}\n                                        >\n                                            <Spinner style={{ width: 48, height: 48 }} />\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                                :\n                                <div>\n                                    {data.activityDetails.length <= 0 &&\n                                        <Card className=\"shadow-sm\">\n                                            <CardBody className=\"position-relative\">\n                                                <div style={{ width: '100%', height: '500px' }} className=\"d-flex align-items-center justify-content-center text-muted\"> No Activities </div>\n                                            </CardBody>\n                                        </Card>\n                                    }\n                                    {data.activityDetails.filter(act => act.status !== 'draft').sort((a, b) => a.id - b.id).map((activity, i) => (\n                                        <Card className=\"shadow-sm\" key={i}>\n                                            <CardBody className=\"position-relative\">\n                                                <div className=\"position-absolute\" style={{ right: 20 }}>\n                                                    <Badge className=\"font-lg text-uppercase text-light\" color={`${activity.category === 'document' ? 'danger' : (activity.category === 'discussion' ? 'warning' : 'primary')}`}>{activity.category}</Badge>\n                                                </div>\n                                                <div className=\"position-absolute\" style={{ top: 55, right: 20 }}>\n                                                    {activity.category === 'deliverable' &&\n                                                        <Badge\n                                                            color={activity.status === 'approved'\n                                                                ? 'success'\n                                                                : (activity.status === 'rejected' ? 'danger'\n                                                                    : (activity.status === 'pending' ? 'warning'\n                                                                        : 'secondary'))}\n                                                            className=\"font-sm text-light text-uppercase\"\n                                                            style={{ cursor: \"pointer\" }}\n                                                            onClick={() => deliverableRef.current.scrollIntoView({ behavior: \"smooth\" })}\n                                                        >\n                                                            {statusDeliverable[activity.status] ?? 'Draft'}\n                                                        </Badge>\n                                                    }\n                                                </div>\n                                                <div className=\"font-lg font-weight-bold mb-1\">{activity?.createdBy?.name}</div>\n                                                <div className=\"text-muted mb-3\">{moment.utc(activity.createdAt).local().format('DD MMMM YYYY hh:mm')}</div>\n                                                {activity.category === 'deliverable' &&\n                                                    <div>\n                                                        <Row className=\"my-1\">\n                                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                                <Label>Meeting Date</Label>\n                                                            </Col>\n                                                            <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                                                {activity?.content?.meeting?.date}\n                                                            </Col>\n                                                        </Row>\n                                                        <Row className=\"my-1\">\n                                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                                <Label>Meeting Time</Label>\n                                                            </Col>\n                                                            <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                                                {activity?.content?.meeting?.startTime} - {activity?.content?.meeting?.endTime}\n                                                            </Col>\n                                                        </Row>\n                                                        <Row className=\"my-1\">\n                                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                                <Label>Attendees</Label>\n                                                            </Col>\n                                                            <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex\">\n                                                                {activity?.content?.attendees?.map((att, i) => (\n                                                                    <div key={i}> {att.name}<span className=\"text-capitalize\">({att.role})</span>{activity?.content?.attendees.length === i + 1 ? '' : ','}</div>\n                                                                ))}\n                                                            </Col>\n                                                        </Row>\n                                                        <Row className=\"my-1\">\n                                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                                <Label>Additional attendees</Label>\n                                                            </Col>\n                                                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                                {activity?.content?.additionalAttendees.map(attendees => (attendees.label))}\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                }\n                                                <div className=\"mb-3 activity-text\">{htmlParser(activity.text)}</div>\n                                                <div className=\"mb-4\">\n                                                    {activity?.files?.map((file, i) => (\n                                                        <Fragment key={i}>\n                                                            <div className=\"rounded border d-inline p-1\">\n                                                                <a href={file.fileUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-dark\" style={{ textDecoration: \"none\" }}>{file.fileName}</a>\n                                                            </div>\n                                                            <div className=\"mb-3\"></div>\n                                                        </Fragment>\n                                                    ))}\n                                                </div>\n                                                {/* {activity.status === 'rejected' &&\n                                        <Card className=\"border-danger\">\n                                            <CardBody>\n                                                <div className=\"font-weight-bold\">Feedback</div>\n                                                <div>{activity.statusMessage ? activity.statusMessage : '-'}</div>\n                                            </CardBody>\n                                        </Card>\n                                    } */}\n                                                {activity.status === 'pending' && authUser.role !== 'professional' &&\n                                                    <div className=\"mb-3 d-flex justify-content-end\">\n                                                        <Button color=\"warning\" onClick={() => setModalVerify({ id: activity.id, status: 'rejected', statusMessage: '', open: true })}>To Revise</Button>\n                                                        <Button color=\"success\" className=\"mx-2\" onClick={() => setModalVerify({ id: activity.id, status: 'approved', statusMessage: '', open: true })}>Approve</Button>\n                                                        <Button color=\"secondary\">Download</Button>\n                                                    </div>\n                                                }\n                                                {activity.content?.replies?.length > 0 &&\n                                                    <div className=\"pl-5\">\n                                                        {activity.content?.replies?.map((reply, ir) => (\n                                                            <Card className=\"my-1\" key={ir}>\n                                                                <CardBody className=\"p-3\">\n                                                                    <div className=\"font-lg font-weight-bold mb-1\">{reply.createdBy.name}</div>\n                                                                    <div className=\"text-muted mb-3\">{moment(reply.createdAt).format('DD MMMM YYYY hh:mm')}</div>\n                                                                    <div>{reply.comment}</div>\n                                                                </CardBody>\n                                                            </Card>\n                                                        ))}\n                                                    </div>\n                                                }\n                                                <div className={`${activity.content?.replies?.length > 0 && 'pl-5'}`}>\n                                                    <TextareaAutosize\n                                                        rows=\"3\"\n                                                        name=\"comment\" id=\"comment\"\n                                                        style={{ borderRadius: \"10px\" }}\n                                                        className=\"form-control\"\n                                                        placeholder=\"Type your reply...\"\n                                                        value={activity.id === reply.idActivity ? reply.comment : ''}\n                                                        onChange={(e) => setReply({ idActivity: activity.id, comment: e.target.value })}\n                                                        onKeyPress={(e) => {\n                                                            if (e.key === 'Enter') {\n                                                                e.target.blur()\n                                                                handlePostReply()\n                                                            }\n                                                        }}\n                                                    />\n                                                </div>\n                                            </CardBody>\n                                        </Card>\n                                    ))}\n                                </div>\n                        }\n                        <div ref={deliverableRef}></div>\n                        <Modal isOpen={modalVerify.open} centered toggle={() => setModalVerify({ id: 0, status: '', statusMessage: '', open: false })}>\n                            <ModalBody className=\"p-5\">\n                                <Row>\n                                    <Col xs=\"12\">\n                                        <div className=\"mb-2\">\n                                            {modalVerify.status === 'approved'\n                                                ? \"You are about to submit your deliverable for approval process.\"\n                                                : \"Are you sure you want to 'Revise' this deliverable\"\n                                            }\n                                        </div>\n                                    </Col>\n                                    {/* {modalVerify.status === 'rejected' &&\n                                        <Col xs=\"12\">\n                                            <TextareaAutosize\n                                                minRows={3}\n                                                style={{ borderRadius: \"10px\" }}\n                                                className=\"form-control\"\n                                                placeholder=\"Type your message...\"\n                                                onChange={(e) => setModalVerify(state => ({ ...state, statusMessage: e.target.value }))}\n                                            />\n                                        </Col>\n                                    } */}\n                                    <Col xs=\"12\" className=\"d-flex justify-content-end mt-5\">\n                                        <Button color=\"secondary\" className=\"mr-2\" onClick={() => setModalVerify({ id: 0, status: '', statusMessage: '', open: false })}>Cancel</Button>\n                                        <Button color=\"primary\" className=\"text-capitalize\" disabled={isSubmitting} onClick={() => handleVerifyDeliverable(modalVerify.id, modalVerify.status, modalVerify.statusMessage)}>{modalVerify.status}</Button>\n                                    </Col>\n                                </Row>\n                            </ModalBody>\n                        </Modal>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nconst FileList = ({ data }) => {\n    const maxFiles = Array(9).fill();\n\n    return (\n        <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target=\"popover-file-list\" popperClassName=\"popover-file-list\">\n            <PopoverBody>\n                <Row className=\"p-2\">\n                    <Col xs=\"8\">\n                        <div className=\"font-weight-bold\">Project Files</div>\n                    </Col>\n                    <Col xs=\"4\">\n                        <Progress striped value={(data?.fileList?.length ?? 0) / 9 * 100}>\n                            <div className=\"text-dark text-center\">Storage Capacity {data?.fileList?.length}/9</div>\n                        </Progress>\n                    </Col>\n                    <Col xs=\"12\" className=\"my-3\">\n                        <Row>\n                            {maxFiles.map((file, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <a href={data?.fileList[i]?.fileUrl ?? ''} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-dark\">\n                                        {i + 1}. {data?.fileList[i]?.fileName}\n                                    </a>\n                                </Col>\n                            ))}\n                        </Row>\n                    </Col>\n                    <Col xs=\"12\">\n                        <div className=\"text-muted\">Your project storage is limited at maximum 9 files or XX MB</div>\n                    </Col>\n                </Row>\n            </PopoverBody>\n        </UncontrolledPopover>\n    )\n}\n","export const iconClassByOptionType = {\n    'personnel': 'icon-user text-success',\n    'unit'     : 'icon-organization text-info',\n    'job'      : 'icon-briefcase text-pink',\n    'email'    : 'icon-envelope text-muted',\n    'all'      : 'icon-people text-dark',\n};\n\nexport function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n"],"sourceRoot":""}