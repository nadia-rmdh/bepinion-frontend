{"version":3,"sources":["views/Menu/Clients/ClientWrapper.js"],"names":["ClientDashboard","React","lazy","ClientDetail","translate","withRouter","location","match","user","useAuthUser","professional","path","exact","component","client","routes","role","map","route","key","from","to"],"mappings":"yGAAA,4DAOMA,EAAkBC,IAAMC,MAAK,kBAAM,8DACnCC,EAAeF,IAAMC,MAAK,kBAAM,kCAwCvBE,8BAAUC,aAtCzB,YAA4C,EAAnBC,SAAoB,IAAVC,EAAS,EAATA,MACzBC,EAAOC,cACPC,EAAe,CACjB,CACIC,KAAMJ,EAAMI,KAAO,aACnBC,OAAO,EACPC,UAAWV,IAIbW,EAAS,CACX,CACIH,KAAMJ,EAAMI,KAAO,aACnBC,OAAO,EACPC,UAAWb,GAEf,CACIW,KAAMJ,EAAMI,KAAO,aACnBC,OAAO,EACPC,UAAWV,IAIbY,EAAuB,WAAdP,EAAKQ,KAAoBF,EAASJ,EACjD,OAEI,kBAAC,IAAD,KACKK,EAAOE,KAAI,SAACC,GAAD,OACR,kBAAC,IAAD,eAAWC,IAAKD,EAAMP,MAAUO,OAEnCH,EAAO,IACJ,kBAAC,IAAD,CAAUH,OAAK,EAACQ,KAAMb,EAAMI,KAAMU,GAAIN,EAAO,GAAGJ","file":"static/js/19.cafe88f0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { translate } from \"react-switch-lang\";\nimport AuthRoute from '../../../containers/DefaultLayout/AuthRoute'\nimport { useAuthUser } from \"../../../store\";\n// import FilterClientProvider from \"./ClientContext\";\n\nconst ClientDashboard = React.lazy(() => import(\"./ClientDashboard\"));\nconst ClientDetail = React.lazy(() => import(\"./ClientDetail\"));\n\nfunction ClientWrapper({ location, match }) {\n    const user = useAuthUser();\n    const professional = [\n        {\n            path: match.path + \"/:ClientId\",\n            exact: true,\n            component: ClientDetail,\n        },\n    ];\n\n    const client = [\n        {\n            path: match.path + \"/dashboard\",\n            exact: true,\n            component: ClientDashboard,\n        },\n        {\n            path: match.path + \"/:ClientId\",\n            exact: true,\n            component: ClientDetail,\n        },\n    ];\n\n    const routes = user.role === 'client' ? client : professional\n    return (\n        // <FilterClientProvider>\n        <Switch>\n            {routes.map((route) => (\n                <AuthRoute key={route.path} {...route} />\n            ))}\n            {routes[0] && (\n                <Redirect exact from={match.path} to={routes[0].path} />\n            )}\n        </Switch>\n        // </FilterClientProvider>\n    );\n}\n\nexport default translate(withRouter(ClientWrapper));\n"],"sourceRoot":""}