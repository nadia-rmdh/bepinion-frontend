{"version":3,"sources":["utils/formatter.js","views/Menu/Clients/ClientDashboard.js"],"names":["convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","convertNumberCurrencies","n","ranges","divider","suffix","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","localizer","momentLocalizer","moment","ProjectStatus","data","mutate","useState","modalReopen","setModalReopen","filter","setFilter","handleChangeFilter","useCallback","e","target","value","checked","state","d","filteredData","useMemo","filtered","includes","projectStatus","className","xs","md","lg","addonType","type","id","onChange","hover","responsive","map","p","key","to","idProject","projectName","professionalList","idProfessionalUserMeta","firstName","lastName","activityStatus","completeDate","format","replace","color","size","block","onClick","colspan","isOpen","centered","toggle","request","put","isReopen","then","res","toast","success","catch","err","error","finally","ProjectStatistics","style","whiteSpace","fontSize","width","height","posted","onGoing","close","MyCalendar","events","popup","defaultDate","Date","messages","previous","next","defaultView","views","position","top","right","bottom","left","background","display","justifyContent","alignItems","Trends","dataSkills","labels","skillList","skill","str","name","datasets","label","backgroundColor","borderWidth","dataSectors","sectorList","sector","minHeight","totalDurationCloseProject","parseInt","totalDuration","toFixed","options","maintainAspectRatio","legend","tooltips","mode","responsiveAnimationDuration","intersect","onHover","event","chartElement","cursor","Finance","fontWeight","totalAR","averageAR","estimateAR","ClientDashboard","user","useAuthUser","useSWR","getData","loading","registrantInformation","projectList","projectStatistics","calenderDetails","trendDetails","financeStatistics"],"mappings":"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","file":"static/js/4.533ae8b7.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'indonesia', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'rb',\n        million: 'jt',\n        billion: 'M',\n        trillion: 'T'\n    },\n    ordinal: function (number) {\n        return number === 1 ? 'er' : 'ème';\n    },\n    currency: {\n        symbol: 'IDR'\n    }\n});\nnumeral.locale('indonesia')\n\nexport function convertToRupiah(angka) {\n    var rupiah = '';\n    var angkarev = angka?.toString().split('').reverse().join('');\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';\n\n    return rupiah.split('', rupiah.length - 1).reverse().join('');\n}\n\nexport function convertNumberCurrencies(n) {\n    const ranges = [\n        { divider: 1e18, suffix: 'E' },\n        { divider: 1e15, suffix: 'P' },\n        { divider: 1e12, suffix: 'T' },\n        { divider: 1e9, suffix: 'G' },\n        { divider: 1e6, suffix: 'M' },\n        { divider: 1e3, suffix: 'k' }\n    ];\n\n    for (var i = 0; i < ranges.length; i++) {\n        if (n >= ranges[i].divider) {\n            return (n / ranges[i].divider).toString() + ranges[i].suffix;\n        }\n    }\n    return n.toString();\n}\n\nexport function formatDate(date) {\n    let d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (d.toString() === 'Invalid Date') {\n        return null;\n    }\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function dataURIToBlob(dataURI) {\n    const splitDataURI = dataURI.split(',')\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\n\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type: mimeString })\n}\n\nexport function matchWildcard(str, wildcard) {\n    var escapeRegex = (str) => str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n    return new RegExp(\"^\" + wildcard.split(\"*\").map(escapeRegex).join(\".*\") + \"$\").test(str);\n}\n\nexport function convertNumber(numb, format = '0.0a') {\n    return numeral(numb).format(format)\n}\n","import React, { useCallback, useMemo, useState } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport { Col, Row, Card, CardBody, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Table, Badge, Progress, Input, Button, Spinner, Modal, ModalBody } from 'reactstrap'\nimport moment from 'moment'\nimport { Bar } from 'react-chartjs-2';\nimport { Link } from 'react-router-dom';\nimport { useAuthUser } from '../../../store';\nimport useSWR from 'swr';\nimport { toast } from 'react-toastify';\nimport request from \"../../../utils/request\";\nimport { convertNumberCurrencies } from '../../../utils/formatter';\n\nconst localizer = momentLocalizer(moment);\nfunction ClientDashboard() {\n    const user = useAuthUser()\n    const { data: getData, error, mutate } = useSWR(() => `v1/user/me/dashboard`);\n    const loading = !getData || error\n    const data = useMemo(() => {\n        return getData?.data?.data ?? [];\n    }, [getData]);\n\n    if (loading) {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                    background: \"rgba(255,255,255, 0.5)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Spinner style={{ width: 48, height: 48 }} />\n            </div>\n        )\n    }\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\" className=\"d-flex justify-content-between\">\n                                <h2 className=\"font-weight-bold mb-4\">{user.name} <small className=\"text-muted\">{user.registrantInformation?.firstName} {user.registrantInformation?.lastName}</small></h2>\n                                <div>\n                                    <Link to='/project/create'>\n                                        <Button color=\"pinion-primary\">\n                                            Create Project\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatus data={data?.projectList} mutate={mutate} />\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatistics data={data?.projectStatistics} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"5\">\n                                <MyCalendar events={data?.calenderDetails} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"7\">\n                                <Trends data={data?.trendDetails} />\n                            </Col>\n                            <Col xs=\"12\">\n                                <Finance data={data?.financeStatistics} />\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nconst ProjectStatus = ({ data, mutate }) => {\n    const [modalReopen, setModalReopen] = useState(null);\n    const [filter, setFilter] = useState([]);\n\n    const handleChangeFilter = useCallback((e) => {\n        const { value, checked } = e.target;\n        if (checked) {\n            setFilter(state => ([...state, value]))\n        } else {\n            setFilter(state => state.filter(d => d !== value))\n        }\n    }, [setFilter]);\n\n    const filteredData = useMemo(() => {\n        const filtered = filter.length > 0 ? data?.filter(d => filter.includes(d.projectStatus)) : data;\n        return filtered ?? [];\n    }, [data, filter])\n\n    const handleReopen = () => {\n        request.put(`v1/project/${modalReopen}/reopen`, {\n            isReopen: true\n        })\n            .then(res => {\n                toast.success('Reopen Successfully')\n                mutate()\n            })\n            .catch(err => {\n                toast.error('Reopen Failed');\n            })\n            .finally(() => setModalReopen(!modalReopen))\n    }\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Status</h4>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"open\" value=\"open\" checked={filter.includes('open')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Open\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"under_review\" value=\"under_review\" checked={filter.includes('under_review')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Under Review\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"expired\" value=\"expired\" checked={filter.includes('expired')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Expired\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"tnc_review\" value=\"tnc_review\" checked={filter.includes('tnc_review')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                T&C Review\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"on_going\" value=\"on_going\" checked={filter.includes('on_going')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                On going\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"deliverable_approved\" value=\"deliverable_approved\" checked={filter.includes('deliverable_approved')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Approved\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"close\" value=\"close\" checked={filter.includes('close')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Closed\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"12\" className=\"my-1\">\n                        <Table hover responsive className=\"text-center\">\n                            <thead>\n                                <tr>\n                                    <th>Project Name</th>\n                                    <th>Professional Name</th>\n                                    <th>Completion Date</th>\n                                    <th>Deliverable Status</th>\n                                    <th>Project Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {filteredData.length > 0\n                                    ? filteredData.map((p, i) =>\n                                        <tr key={i}>\n                                            <td className=\"text-left\">\n                                                <Link to={`${p.projectStatus === 'on_going' ? `/project/${p.idProject}/wall` : (p.projectStatus === 'close'\n                                                    ? `/rate/${p.idProject}`\n                                                    : `/project/${p.idProject}/professionals`)}`}>\n                                                    {p.projectName}\n                                                </Link>\n                                            </td>\n                                            <td>\n                                                {p?.professionalList?.length > 0 ?\n                                                    <Link to={`/professional/${p.professionalList[0].idProfessionalUserMeta}`}>\n                                                        {p.professionalList[0].firstName} {p.professionalList[0].lastName}\n                                                    </Link>\n                                                    : '-'\n                                                }\n                                            </td>\n                                            <td className=\"text-uppercase\">{p?.activityStatus ?? '-'}</td>\n                                            <td>{moment(p?.completeDate ?? '').format('DD-MM-YYYY')}</td>\n                                            <td className=\"text-uppercase\">\n                                                {p.projectStatus.replace('_', ' ') === 'tnc review' ? 'T&C REVIEW' : p.projectStatus.replace('_', ' ')}\n                                                {\n                                                    p.projectStatus === 'expired'\n                                                        ? <Button color=\"pinion-primary\" size=\"sm\" block className=\"text-white mt-2\" onClick={() => setModalReopen(p.idProject)}>Reopen</Button>\n                                                        : null\n                                                }\n                                            </td>\n                                        </tr>\n                                    )\n                                    : <tr>\n                                        <td colspan=\"5\" className=\"text-center text-muted\">No Data</td>\n                                    </tr>\n                                }\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n                <Modal isOpen={modalReopen} centered toggle={() => setModalReopen(!modalReopen)}>\n                    <ModalBody className=\"p-5\">\n                        <Row>\n                            <Col xs=\"12\">\n                                <div className=\"mb-2\">\n                                    Are you sure you want to reopen this project?\n                                </div>\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                <Button color=\"secondary\" className=\"mr-2\" onClick={() => setModalReopen(!modalReopen)}>Cancel</Button>\n                                <Button color=\"primary\" className=\"text-capitalize\" onClick={handleReopen}>Reopen</Button>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                </Modal>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst ProjectStatistics = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Statistics</h4>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex my-1 justify-content-center text-center\">\n                        <Row>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of projects in tender</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.posted}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of active projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.onGoing}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of completed projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.close}</Badge></div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst MyCalendar = ({ events }) => {\n\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ height: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">My Calendar</h4>\n                        {events\n                            ? <Calendar\n                                popup={true}\n                                localizer={localizer}\n                                defaultDate={new Date()}\n                                messages={{\n                                    // today: t(\"hariini\"),\n                                    previous: <i className=\"fa fa-angle-left\"></i>,\n                                    next: <i className=\"fa fa-angle-right\"></i>,\n                                    // month: t(\"bulanan\"),\n                                    // week: t(\"mingguan\"),\n                                    // day: t(\"harian\"),\n                                }}\n                                defaultView=\"month\"\n                                views={[\"month\", \"week\", \"day\", 'agenda']}\n                                events={events}\n                                style={{ height: \"50vh\" }}\n                            // onSelectEvent={event => this.modalDetailEvent(event)}\n                            // onRangeChange={this.onRangeChange}\n                            // eventPropGetter={(this.eventStyleGetter)}\n                            />\n                            : <div\n                                style={{\n                                    position: \"absolute\",\n                                    top: 0,\n                                    right: 0,\n                                    bottom: 0,\n                                    left: 0,\n                                    background: \"rgba(255,255,255, 0.5)\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                <Spinner style={{ width: 48, height: 48 }} />\n                            </div>\n                        }\n                    </Col>\n                    {/* <Col xs=\"12\" className=\"my-2\">\n                        <h4 className=\"mt-3\">My Activites</h4>\n                        <Calendar\n                            popup={true}\n                            localizer={localizer}\n                            defaultDate={new Date()}\n                            messages={{\n                                today: t(\"hariini\"),\n                                previous: <i className=\"fa fa-angle-left\"></i>,\n                                next: <i className=\"fa fa-angle-right\"></i>,\n                                month: t(\"bulanan\"),\n                                week: t(\"mingguan\"),\n                                day: t(\"harian\"),\n                            }}\n                            defaultView=\"agenda\"\n                            views={['agenda']}\n                            events={events}\n                            style={{ minHeight: \"50vh\" }}\n                        // onSelectEvent={event => this.modalDetailEvent(event)}\n                        // onRangeChange={this.onRangeChange}\n                        // eventPropGetter={(this.eventStyleGetter)}\n                        />\n                    </Col> */}\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Trends = ({ data }) => {\n    const color = [\n        'rgba(255, 99, 132, 0.7)',\n        'rgba(54, 162, 235, 0.7)',\n        'rgba(255, 206, 86, 0.7)',\n        'rgba(75, 192, 192, 0.7)',\n        'rgba(153, 102, 255, 0.7)',\n        'rgba(255, 159, 64, 0.7)',\n    ];\n\n    const dataSkills = {\n        labels: data.skillList.map(skill => {\n            const str = skill.name.split(' ');\n            const first = str[0].substr(0, 3);\n            const sec = str.length > 1 ? str[1].substr(0, 5) : '';\n            const third = str.length > 2 ? str[2].substr(0, 6) : '';\n\n            return first + '. ' + sec + '. ' + third\n        }),\n        datasets: [\n            {\n                label: 'Skills',\n                data: data.skillList.map(skill => skill.value),\n                backgroundColor: data.skillList.map((skill, i) => color[i % data.skillList.length]),\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    const dataSectors = {\n        labels: data.sectorList.map(sector => {\n            const str = sector.name.split(' ');\n            const first = str[0].substr(0, 3);\n            const sec = str.length > 1 ? str[1].substr(0, 5) : '';\n            const third = str.length > 2 ? str[2].substr(0, 6) : '';\n\n            return first + '. ' + sec + '. ' + third\n        }),\n        datasets: [\n            {\n                label: 'Sectors',\n                data: data.sectorList.map(sector => sector.value),\n                backgroundColor: data.sectorList.map((sector, i) => color[i % data.sectorList.length]),\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ minHeight: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">Trends</h4>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row>\n                            <Col xs=\"12\" className=\"px-0\">\n                                <h6>Average Time per Project</h6>\n                                <div style={{ fontSize: '30pt' }}>{data.totalDurationCloseProject ? parseInt(data.totalDuration / data.totalDurationCloseProject).toFixed(2) : 0} hrs</div>\n                                <small className=\"text-muted\">Total {data.totalDuration} hours</small>\n                            </Col>\n                            <Col xs=\"12\" md=\"12\" className=\"mt-2\">\n                                <div>Skills</div>\n                                <div>\n                                    <Bar data={dataSkills} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={200} width={700} />\n                                </div>\n                            </Col>\n                            <Col xs=\"12\" md=\"12\" className=\"mt-2\">\n                                <div>Sectors</div>\n                                <div>\n                                    <Bar data={dataSectors} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={200} />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Finance = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Finance</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Total AP</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{convertNumberCurrencies(data?.totalAR ?? 0)}</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Average AP per project</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{convertNumberCurrencies(data?.averageAR ?? 0)}</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Estimated AP based on Tender</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{convertNumberCurrencies(data?.estimateAR ?? 0)}</div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\n// eslint-disable-next-line\nconst Projects = ({ data, activities }) => {\n\n    const dataStats = {\n        labels: ['Project 1', 'Project 2', 'Project 3', 'Project 4', 'Project 5', 'Project 6'],\n        datasets: [\n            {\n                label: 'Projects',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Projects</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <Row className=\"my-2\">\n                            <Col xs=\"5\">\n                                <div>Overall</div>\n                            </Col>\n                            <Col xs=\"7\">\n                                <Progress color='#555' value={60}>\n                                    <b style={{ color: \"#555\" }}>{60}%</b>\n                                </Progress>\n                            </Col>\n                        </Row>\n                        {data.map((d, i) => (\n                            <Row key={i} className=\"my-2\">\n                                <Col xs=\"5\">\n                                    <div>{d.projectName}</div>\n                                </Col>\n                                <Col xs=\"7\">\n                                    <Progress color='#555' value={d.progress}>\n                                        <b style={{ color: \"#555\" }}>{d.progress}%</b>\n                                    </Progress>\n                                </Col>\n                            </Row>\n                        ))}\n                    </Col>\n                    <Col xs=\"12\" lg=\"8\">\n                        <div>\n                            <Bar data={dataStats} options={{\n                                maintainAspectRatio: false,\n                                legend: false,\n                                tooltips: {\n                                    mode: \"label\",\n                                },\n                                responsive: true,\n                                responsiveAnimationDuration: 2000,\n                                hover: {\n                                    intersect: true,\n                                    mode: \"point\",\n                                },\n                                onHover: (event, chartElement) => {\n                                    event.target.style.cursor = chartElement[0]\n                                        ? \"pointer\"\n                                        : \"default\";\n                                },\n                            }} height={250} />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" className=\"mt-3\">\n                        <Row>\n                            <Col xs=\"12\" lg=\"4\">\n                                <Row>\n                                    <Col xs=\"6\" className=\"d-flex align-items-center\">\n                                        <div>Show for upcoming</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <Input min={0} max={100} type=\"number\" step=\"1\" />\n                                            <InputGroupAddon addonType=\"append\">days</InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-3\">\n                                    <Col xs=\"6\">\n                                        <div>Category Filter</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Deliverable\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                A/R & A/P\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Meeting\n                                            </div>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\" lg=\"8\">\n                                <Table hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Project</th>\n                                            <th>Category</th>\n                                            <th>Action</th>\n                                            <th>Due Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {activities.map((p, i) =>\n                                            <tr key={i}>\n                                                <td>{p.projectName}</td>\n                                                <td>{p.category}</td>\n                                                <td>{p.action}</td>\n                                                <td>{p.dueDate}</td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default ClientDashboard"],"sourceRoot":""}