{"version":3,"sources":["components/DefaultImageUser/HexProfileColor.js","components/DefaultImageUser/DefaultImageUser.js","assets/illustrations/image-error.png","hooks/useDataEducationDegrees.js","hooks/useDataEducationFields.js","components/SelectYear.js","hooks/useDataSchools.js","hooks/useDataCountries.js","utils/request.js","polyfill.js","actions/auth.js","components/OfflineIndicator.js","utils/language/index.js","containers/DefaultLayout/DefaultHeader.js","containers/DefaultLayout/Menu.js","containers/DefaultLayout/Layout.js","utils/language/moment-locales.js","views/Auth/Login/Login.js","views/LandingPage/Navbar.js","views/LandingPage/PageLayout.js","views/LandingPage/Home.js","views/LandingPage/FAQ.js","views/LandingPage/ContactUs.js","views/LandingPage/About.js","views/Auth/Register/Components/Navigation.js","views/Auth/Register/Forms/RegistrantForm.js","views/Auth/Register/Forms/EducationForm.js","views/Auth/Register/Forms/WorkExprerienceForm.js","views/Auth/Register/Forms/ProjectExperienceForm.js","views/Auth/Register/Forms/SkillSectorForm.js","views/Auth/Register/Forms/DocumentVerificationForm.js","views/Auth/Register/Forms/CompanyInformationForm.js","views/Auth/Register/Forms/RegistrantCompanyForm.js","views/Auth/Register/Register.js","App.js","index.js","hooks/useDataSectors.js","containers/DefaultLayout/AuthRoute.js","hooks/useDataProvinces.js","hooks/useDataSkills.js","actions/api.js","actions/ui.js","store.js","middlewares/app.js","middlewares/core.js","reducer.js"],"names":["color","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","DefaultImageUser","text","size","className","toString","initial","split","background","toLowerCase","style","backgroundColor","width","height","module","exports","useState","data","setData","loading","setLoading","useEffect","request","get","then","res","finally","SelectYear","start","end","Date","getFullYear","name","id","value","onChanged","styles","selected","setSelected","options","useMemo","yearArr","year","push","label","placeholder","onChange","components","DropdownIndicator","IndicatorSeparator","toast","configure","Axios","create","baseURL","process","interceptors","use","config","session","localStorage","getItem","headers","err","Promise","reject","response","status","error","message","autoClose","store","dispatch","type","LOGOUT","prototype","fn","onFinally","callback","resolve","this","result","reason","LOGIN","GET_ME","SET_USER","login","user","payload","logout","getMe","setUser","OfflineIndicator","state","closed","toggleIndicator","setState","props","cursor","onClick","Component","translate","languageChangedListeners","init","setDefaultTranslations","EN","ID","setDefaultLanguage","currentLang","setLanguage","lang","rslSetLanguage","setItem","forEach","listener","call","getLanguage","rslGetLanguage","onLanguageChanged","DefaultHeader","changeLanguage","preventDefault","handleSetLanguage","modalLang","window","location","reload","changePass","modalData","modalChangeLang","changeProfile","history","handleChangeCurrent","currentPass","target","handleChangeConfirm","confirmPass","handleChangeNew","newPass","handleChangeLang","cekSubmitData","submitData","dataObject","current","new","post","Authorization","catch","JSON","stringify","onSelectFlag","countryCode","moment","key","langUtils","changePage","url","replace","fileSelectedHandler","event","selectedFile","files","fileUploadHandler","token","newCompany","oldCompany","companyList","isTour","forbiddenCompany","forbiddenUser","forbiddenInvoice","modalMobile","isMobile","img","onerror","border","Navbar","light","top","Nav","navbar","Collapse","isOpen","NavItem","pathname","to","role","firstName","Modal","toggle","ModalBody","Button","Row","FormGroup","Label","htmlFor","Input","connect","withRouter","ProfessionalDashboard","lazy","ClientDashboard","ProjectWrapper","ClientWrapper","ProfessionalWrapper","Profile","menuProfessional","menuClient","component","DefaultLayout","generateRoutes","Menu","map","idx","AuthRoute","path","exact","Switch","router","Redirect","fixed","Container","fallback","position","right","bottom","left","display","justifyContent","alignItems","Spinner","from","reduxState","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","Login","console","log","closeLocalError","handleChange","update","email","trim","password","handleLogin","loginProcess","showPassword","test","Col","md","onSubmit","borderRadius","autoFocus","inputMode","autoComplete","disabled","isLoading","ModalLogin","memo","handleToggle","ModalHeader","ModalRegister","showClientType","setShowClientType","xs","search","hash","textDecoration","block","useLocation","openDrawer","setOpenDrawer","modalLogin","setModalLogin","modalRegister","setModalRegister","toggleLogin","toggleRegister","closeDrawer","getNavItemClass","pos","NavbarBrand","href","NavbarToggler","PageLayout","windowOnScroll","scrollY","document","getElementsByTagName","classList","contains","add","remove","addEventListener","removeEventListener","children","defaultTypes","footer","FAQ","Contact","ref","About","NavigationDot","pageName","useCallback","pageIcon","dots","totalSteps","relations","targetId","targetAnchor","sourceAnchor","strokeColor","strokeWidth","endMarker","currentStep","icon","Stats","firstStep","goToStep","lastStep","nextStep","previousStep","step","getLocalStorage","registrationForm","parse","useFormik","initialValues","registrantForm","lastName","gender","dateOfBirth","idType","idNumber","npwpNumber","address","province","phone","sector","validationSchema","optional","Yup","required","shape","oneOf","values","setSubmitting","setErrors","onSubmitForm","touched","errors","setValues","handleSubmit","registrantData","setRegistrantData","contactData","setContactData","RegistrantInformationForm","getSector","useDataSectors","sectors","handleChangeFirstName","old","handleChangeLastName","handleChangeSector","handleChangeGender","checked","handleChangeDateOfBirth","handleChangeIdType","handleChangeIdNumber","handleChangeNpwpNumber","Card","CardBody","lg","for","InputGroup","InputGroupAddon","addonType","InputGroupText","CustomInput","initialSettings","singleDatePicker","showDropdowns","startDate","maxDate","autoApply","onApply","padding","format","ContactInformationForm","getProvince","useDataProvinces","handleChangeProvince","handleChangeAddress","handleChangePhone","handleChangeEmail","minRows","getDegree","useDataEducationDegrees","degree","getSchool","useDataSchools","school","getEduField","useDataEducationFields","eduField","education","graduationYear","of","educationData","setEducationData","handleChangeDegree","edu","handleChangeSchool","handleChangeEducation","handleChangeGraduationYear","handleAddEducationData","length","handleDeleteEducationData","filter","provinces","employementTypes","getSkills","useDataSkills","skills","job","company","employementType","endDate","endDatePresent","workExperienceData","setWorkExperienceData","work","handleChangeEmployementType","handleChangeLocation","handleChangeJob","handleChangeCompany","handleChangeStartDate","handleChangeEndDate","handleChangePresent","handleChangeSkills","handleAddWorkExperienceData","handleDeleteWorkExperienceData","showMonthYearPicker","showFullMonthYearPicker","showFourColumnMonthYearPicker","dateFormat","placeholderText","wrapperClassName","minDate","closeMenuOnSelect","isClearable","isMulti","hasProjectExperience","setHasProjectExperience","getCountries","useDataCountries","countries","projectName","client","projectRole","country","description","projectExperienceData","setProjectExperienceData","project","handleChangeCountry","handleChangeProjectName","handleChangeClient","handleChangeProjectRole","handleChangeDescription","handleAddprojectExperienceData","handleDeleteprojectExperienceData","colorSkills","min","max","skillSectorData","setSkillSectorData","colourStyles","multiValue","multiValueLabel","opt","dataOptions","find","Math","floor","random","isOptionDisabled","option","npwpFile","useRef","regIdFile","photoFile","passwordConfirmation","setShowPassword","npwp","regId","photo","confirmed","privacy","file","onFinishRegistration","verificationData","setVerificationData","onErrorImage","src","noImage","onChangeNpwpFile","preview","URL","createObjectURL","onChangeRegIdFile","onChangePhotoFile","onChangePassword","onChangePasswordConfirmation","onChangeConfirmation","onChangePrivacy","alt","objectFit","onError","accept","click","whiteSpace","businessName","companySize","aboutUs","companyInformationData","setCompanyInformationData","CompanyInformationForm","handleChangeBusinessName","handleChangecompanySize","handleChangeAboutUs","jobTitle","handleChangeJobTitle","validationForm","instance","registrationData","goToNamedStep","educationForm","workExperienceForm","projectExperienceForm","skillSectorForm","verificationForm","companyInformationForm","useHistory","URLSearchParams","modalSubmitForm","setModalSubmitForm","setInstance","formData","FormData","append","idSchool","idEducationDegree","idEducationField","idProvince","idSector","companyName","employmentType","isStillPresent","idSkill","idCountry","clientName","success","setRegistrationData","isSubmitting","handleFinishRegistration","isHashEnabled","nav","transitions","enterRight","enterLeft","exitRight","exitLeft","intro","RegistrantForm","hashKey","stepName","EducationForm","WorkExprerienceForm","ProjectExperienceForm","SkillSectorForm","DocumentVerificationForm","RegistrantCompanyForm","centered","App","Home","Layout","library","fab","fas","far","setValidationLocale","validationLocaleDefault","momentLocaleDefinition","momentLocales","locale","rootElement","getElementById","ReactDOM","render","fetcher","isLoggedIn","shouldAuthenticate","includes","searchParams","set","apiError","setLoader","applyMiddleware","next","action","meta","method","apiRequestLogin","removeItem","createStore","createStoreWithMiddleware","useAuthUser","useSelector"],"mappings":"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","file":"static/js/main.3f3a113b.chunk.js","sourcesContent":["export const color = {\n    a : \"#f2c85b\",\n    b : \"#fba465\",\n    c : \"#ee3e38\",\n    d : \"#53ccec\",\n    e : \"#1974d3\",\n    f : \"#000181\",\n    g : \"#9db300\",\n    h : \"#fccf14\",\n    i : \"#ffe169\",\n    j : \"#1d1e4e\",\n    k : \"#a155b9\",\n    l : \"#ff9001\",\n    m : \"#ff4200\",\n    n : \"#5e2390\",\n    o : \"#6b0d88\",\n    p : \"#ffb900\",\n    q : \"#f5ac4e\",\n    r : \"#940700\",\n    s : \"#fc9e5b\",\n    t : \"#41c8e5\",\n    u : \"#9a75fc\",\n    v : \"#bf3612\",\n    w : \"#f24f09\",\n    x : \"#f2c070\",\n    y : \"#5073d9\",\n    z : \"#044855\"\n}","import React from 'react'\nimport { color } from \"./HexProfileColor\"\n\nexport const DefaultImageUser = ({ text, size, className }) => {\n    const toString = text + '';\n    const initial = toString?.split('')[0];\n    const background = color[initial.toLowerCase()];\n    return (\n        <div className={`d-flex justify-content-center align-items-center px-0 text-light ${className}`}>\n            <div className={`mx-auto round-100 border-0 text-center d-flex justify-content-center align-items-center`} style={{ backgroundColor: background, width: size, height: size }}>\n                <strong className=\"text-uppercase\">{initial}</strong>\n            </div>\n        </div>\n    )\n}","module.exports = __webpack_public_path__ + \"static/media/image-error.1379dc23.png\";","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/education-degrees')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/education-fields')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import React, { useMemo, useState } from 'react';\nimport Select from 'react-select';\n\nconst SelectYear = ({ start = 1900, end = (new Date().getFullYear()) + 1, name, id, value, onChanged, styles }) => {\n    const [selected, setSelected] = useState(value ? { 'value': value, 'label': value } : '')\n\n    const options = useMemo(() => {\n        const yearArr = []\n        for (let year = start; year <= end; year++) {\n            yearArr.push({ value: year, label: year })\n        }\n\n        return yearArr\n    }, [start, end])\n\n    const handleChange = (data) => {\n        onChanged({ 'value': data.value, 'label': data.label });\n        setSelected({ 'value': data.value, 'label': data.label })\n    }\n    return (\n        <Select\n            placeholder=\"Choose year...\"\n            name={name} id={id}\n            value={selected}\n            options={options}\n            onChange={(e) => handleChange(e)}\n            styles={styles}\n            components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n        />\n    );\n}\n\nexport default SelectYear;\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/schools')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/countries')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import Axios from 'axios';\nimport store from '../store'\nimport { LOGOUT } from '../actions/auth'\nimport { toast } from 'react-toastify'\n\ntoast.configure();\n\nconst request = Axios.create({\n    baseURL: process.env.REACT_APP_DOMAIN,\n\n})\n\nrequest.interceptors.request.use((config) => {\n    // const { token: session } = store.getState();\n    const session = localStorage.getItem('session')\n    if (session) {\n        if (!config.headers) {\n            config.headers = {};\n        }\n        config.headers[\"Authorization\"] = `Bearer ${session}`;\n\n    }\n\n    return config;\n}, err => Promise.reject(err))\n\nrequest.interceptors.response.use(response => {\n    return response;\n}, err => {\n    if (err.response && err.response.status >= 500) {\n        toast.error(err.message, { autoClose: 2000 });\n    }\n\n    if (err.response && err.response.status === 401) {\n        store.dispatch({ type: LOGOUT });\n    }\n\n    return Promise.reject(err);\n})\n\nexport const requestDownload = (url, filename = 'download') => {\n    return request.get(url, { responseType: 'arraybuffer' })\n        .then(res => {\n            const type = res.headers['content-type']\n            const blob = new Blob([res.data], { type, encoding: 'UTF-8' })\n            let name = filename\n            const disposition = res.headers['content-disposition']\n            if (disposition && disposition.indexOf('inline') !== -1) {\n                const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n                const matches = filenameRegex.exec(disposition);\n                if (matches != null && matches[1]) {\n                    name = matches[1].replace(/['\"]/g, '');\n                }\n            }\n\n            const URL = window.URL || window.webkitURL\n            const downloadUrl = URL.createObjectURL(blob)\n            let newWindow = null;\n\n            const iOS = window.navigator.platform && /iPad|iPhone|iPod/.test(window.navigator.platform)\n            if (iOS) {\n                const reader = new FileReader();\n                reader.onload = function (e) {\n                    newWindow = window.open(reader.result);\n                    newWindow.onload = function () {\n                        newWindow.document.getElementsByTagName('html')[0]\n                            .appendChild(document.createElement('head'))\n                            .appendChild(document.createElement('title'))\n                            .appendChild(document.createTextNode(name));\n                    }\n                    setTimeout(() => {\n                        newWindow.document.title = name;\n                    }, 100)\n                }\n                reader.readAsDataURL(blob);\n            } else {\n                const link = document.createElement('a')\n                link.href = downloadUrl\n                link.download = name;\n                link.click();\n                setTimeout(() => {\n                    link.remove();\n                }, 1500);\n            }\n\n            return Promise.resolve(true);\n        });\n}\n\nexport default request;\n","// Old browsers does not support (Promise).finally function\n(function () {\n  // eslint-disable-next-line\n  Promise.prototype.finally = Promise.prototype.finally || {\n    finally (fn) {\n      const onFinally = callback => Promise.resolve(fn()).then(callback);\n      return this.then(\n        result => onFinally(() => result),\n        reason => onFinally(() => Promise.reject(reason))\n      );\n    }\n  }.finally;\n})();\n\n/*\n* required polyfills\n*/\n// import \"core-js\";\n// import 'core-js/features/set/map';\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\n// import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\n// import 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\n// import 'core-js/es6/set'\n// import 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n// (function () {\n\n//   if ( typeof window.CustomEvent === \"function\" ) return false\n\n//   function CustomEvent ( event, params ) {\n//     params = params || { bubbles: false, cancelable: false, detail: undefined }\n//     var evt = document.createEvent( 'CustomEvent' )\n//     evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n//     return evt\n//   }\n\n//   CustomEvent.prototype = window.Event.prototype\n\n//   window.CustomEvent = CustomEvent\n// })();\n\n","export const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GET_ME = \"GET_ME\";\nexport const SET_USER = \"SET_USER\";\n\nexport const login = user => {\n    return {\n        type: LOGIN,\n        payload: user\n    };\n};\n\nexport const logout = () => {\n    return {\n        type: LOGOUT\n    };\n};\n\nexport const getMe = () => ({ type: GET_ME });\n\nexport const setUser = (user) => {\n    return {\n        type: SET_USER,\n        payload: user\n    };\n};\n","import React, { Component } from 'react';\nimport { Offline } from 'react-detect-offline';\nimport { translate } from 'react-switch-lang';\n\nclass OfflineIndicator extends Component {\n\tstate = {\n\t\tclosed: false,\n\t}\n\n\ttoggleIndicator = () => {\n\t\tthis.setState({ closed: !this.state.closed })\n\t}\n\n\trender() {\n\t\tconst { t } = this.props;\n\t\treturn (\n\t\t\t<Offline>\n\t\t\t\t{\n\t\t\t\t\tthis.state.closed ?\n\t\t\t\t\t\t<div style={{ height: 6, width: '100%', cursor: 'pointer' }} className=\"fixed-top bg-danger\" onClick={this.toggleIndicator}></div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div className=\"fixed-top d-flex p-2 justify-content-center bg-danger align-items-center\">\n\t\t\t\t\t\t\t<span className=\"ml-auto\"><b>Opps! &nbsp;</b>\n\t\t\t\t\t\t\t\t{t('Apptidakterhubunginternet')}</span>\n\t\t\t\t\t\t\t<button className=\"btn btn-link text-light btn-sm ml-auto text-nowrap\" onClick={this.toggleIndicator}><i className=\"fa fa-times mr-1\"></i>{t('tutup')}</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Offline>\n\t\t);\n\t}\n}\n\nexport default translate(OfflineIndicator);\n","import EN from './en.json'\nimport ID from './id.json'\nimport {\n    setLanguage as rslSetLanguage,\n    getLanguage as rslGetLanguage,\n    setDefaultTranslations,\n    setDefaultLanguage,\n} from 'react-switch-lang';\n\nexport default {\n    languageChangedListeners: [],\n\n    init() {\n        setDefaultTranslations({ EN, ID });\n        setDefaultLanguage('ID');\n        const currentLang = localStorage.getItem('language') || 'ID';\n        if (currentLang) {\n            this.setLanguage(currentLang)\n        }\n    },\n\n    setLanguage (lang) {\n        rslSetLanguage(lang);\n        localStorage.setItem('language', lang);\n        this.languageChangedListeners.forEach(listener => {\n            listener.call(this, this.getLanguage());\n        })\n    },\n\n    getLanguage () {\n        return rslGetLanguage()\n    },\n\n    onLanguageChanged (listener) {\n        this.languageChangedListeners.push(listener);\n    }\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport { Row, Button, Modal, ModalBody, FormGroup, Label, Input, Nav, NavItem, Collapse, Navbar } from \"reactstrap\";\nimport { AppNavbarBrand } from \"@coreui/react\";\nimport { connect } from \"react-redux\";\nimport { getMe, logout, setUser } from \"../../actions/auth\";\nimport Axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { translate } from \"react-switch-lang\";\nimport langUtils from \"../../utils/language/index\";\nimport * as moment from \"moment\";\nimport { DefaultImageUser } from \"../../components/DefaultImageUser/DefaultImageUser\";\nimport { Link } from \"react-router-dom\";\n\nclass DefaultHeader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: props.user,\n      session: props.token,\n      modalData: false,\n      currentPass: \"\",\n      confirmPass: \"\",\n      modalLang: false,\n      newPass: \"\",\n      newCompany: null,\n      oldCompany: null,\n      companyList: [],\n      isTour: false,\n      forbiddenCompany: false,\n      forbiddenUser: false,\n      forbiddenInvoice: false,\n      modalMobile: false,\n      isMobile: false\n    };\n  }\n  changeLanguage = (id) => (e) => {\n    e.preventDefault();\n    this.handleSetLanguage(id);\n    this.setState({\n      modalLang: !this.state.modalLang,\n    });\n    window.location.reload();\n  };\n  changePass = () => {\n    this.setState({\n      modalData: !this.state.modalData,\n    });\n  };\n  modalChangeLang = () => {\n    this.setState({\n      modalLang: !this.state.modalLang,\n    });\n  };\n  changeProfile = () => {\n    const { history } = this.props;\n    history.push(\"/profile\");\n    // window.location.replace(\"/profile/user\");\n  };\n  handleChangeCurrent = (e) => {\n    this.setState({\n      currentPass: e.target.value,\n    });\n  };\n  handleChangeConfirm = (e) => {\n    this.setState({\n      confirmPass: e.target.value,\n    });\n  };\n  handleChangeNew = (e) => {\n    this.setState({\n      newPass: e.target.value,\n    });\n  };\n  handleChangeLang = (e) => {\n    this.setState({\n      modalLang: e.target.value,\n    });\n  };\n  cekSubmitData = (e) => {\n    const { t } = this.props;\n    if (this.state.newPass !== this.state.confirmPass) {\n      toast.error(t(\"konfirmasipasssalah\"), { autoClose: 3000 });\n    } else {\n      this.submitData();\n    }\n  };\n  submitData = (e) => {\n    const dataObject = {\n      current: this.state.currentPass,\n      new: this.state.newPass,\n    };\n    Axios.post(\n      process.env.REACT_APP_DOMAIN + \"/api/auth/changepassword\",\n      dataObject,\n      { headers: { Authorization: `Bearer ${this.state.session}` } }\n    )\n      .then((res) => {\n        this.setState({\n          modalData: false,\n          currentPass: \"\",\n          confirmPass: \"\",\n          newPass: \"\",\n        });\n        this.props.logout();\n      })\n      .catch((error) => {\n        toast.error(JSON.stringify(error.response.data.message), {\n          autoClose: 3000,\n        });\n      });\n  };\n\n  onSelectFlag = (countryCode) => {\n    this.handleSetLanguage(countryCode);\n    moment.locale('en');\n  };\n  handleSetLanguage = (key) => {\n    langUtils.setLanguage(key);\n  };\n\n  onAvatarError(e) {\n    const img = e.target;\n    img.onerror = null;\n    // img.src = \"/assets/img/avatars/avatar-dummy.png\";\n    img.style.border = null;\n  }\n  changePage = (url) => {\n    window.location.replace(url);\n  };\n\n  fileSelectedHandler = (event) => {\n    this.setState({\n      selectedFile: event.target.files[0]\n    }, () => this.fileUploadHandler());\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n\n      <Navbar\n        color=\"white\"\n        className=\"navbar-expand-md fixed-top navbar-landigpage\"\n        light\n      >\n        <div className=\"container\">\n          <AppNavbarBrand\n            style={{\n              // position: \"initial\",\n              top: \"unset\",\n              // left: 0,\n              // marginLeft: 10,\n              cursor: \"pointer\"\n            }}\n            onClick={() => this.changePage(\"/dashboard\")}\n          // full={{ src: logo, width: 90, alt: \"Idea Collaboration Logo\" }}\n          // minimized={{ src: icon, width: 30, alt: \"Idea Collaboration Icon\" }}\n          >\n            P-Platform\n          </AppNavbarBrand>\n          <Nav navbar>\n            <div className=\"d-flex\">\n              <Collapse isOpen={!true} navbar className=\"mr-5\">\n                <Nav navbar>\n                  <NavItem\n                    className={`mx-3 ${this.props.location.pathname === '/dashboard' ? 'active-navbar' : ''}`}\n                  >\n                    <Link className=\"custom-nav\" to=\"/dashboard\">\n                      {t('Dashboard')}\n                    </Link>\n                  </NavItem>\n                  {this.state.user.role === 'professional' ?\n                    <NavItem\n                      className={`mx-3 ${this.props.location.pathname === '/project' ? 'active-navbar' : ''}`}\n                    >\n                      <Link className=\"custom-nav\" to=\"/project\">\n                        {t(\"Find Project\")}\n                      </Link>\n                    </NavItem>\n                    :\n                    <NavItem\n                      className={`mx-3 ${this.props.location.pathname === '/professional' ? 'active-navbar' : ''}`}\n                    >\n                      <Link className=\"custom-nav\" to=\"/professional\">\n                        {t(\"Find Professional\")}\n                      </Link>\n                    </NavItem>\n                  }\n                  <NavItem\n                    className={`mx-3 ${this.props.location.pathname === '/help' ? 'active-navbar' : ''}`}\n                  >\n                    <Link className=\"custom-nav\" to=\"/help\">\n                      {t(\"Help\")}\n                    </Link>\n                  </NavItem>\n                </Nav>\n              </Collapse>\n            </div>\n            <div className=\"d-none d-lg-block round-100 ml-auto text-center border-0\" onClick={() => this.setState({ modalMobile: !this.state.modalMobile, isMobile: false })} style={{ cursor: \"pointer\" }}>\n              {/* <img src={this.state.user.detail.photo} alt=\"profile\" width={35} height={35} style={{ objectFit: 'cover' }} onError={(e) => this.onAvatarError(e)} className=\"rounded-circle border\" /> */}\n              <DefaultImageUser text={this.state.user.firstName} />\n            </div>\n            <div className=\"d-lg-none round-100 ml-auto text-center border-0\" onClick={() => this.setState({ modalMobile: !this.state.modalMobile, isMobile: true })} style={{ cursor: \"pointer\" }}>\n              {/* <img src={this.state.user.detail.photo} alt=\"profile\" width={35} height={35} style={{ objectFit: 'cover' }} onError={(e) => this.onAvatarError(e)} className=\"rounded-circle border\" /> */}\n              <DefaultImageUser text={this.state.user.firstName} />\n            </div>\n          </Nav>\n\n          <Modal className={this.state.isMobile ? 'bottom-small' : 'right'} isOpen={this.state.modalMobile} toggle={() => this.setState({ modalMobile: false })}>\n            <ModalBody className=\"d-flex flex-column justify-content-center\">\n              <DefaultImageUser text={this.state.user.firstName} size={75} className=\"mb-3\" />\n              <Button onClick={this.changeProfile} className=\"border-0 bg-transparent py-2 my-2 text-netis-primary\">\n                <h5>Profil</h5>\n              </Button>\n              <Button onClick={this.changePass} className=\"border-0 bg-transparent py-2 my-2 text-netis-primary\">\n                <h5>Ganti Password</h5>\n              </Button>\n              <Button onClick={this.props.logout} className=\"border-0 bg-transparent py-2 my-2 text-danger\">\n                <h5>Logout</h5>\n              </Button>\n            </ModalBody>\n          </Modal>\n\n          {/*Change Pass*/}\n          <Modal isOpen={this.state.modalData} toggle={this.modalData}>\n            <ModalBody>\n              <h5 className=\"content-sub-title mb-4\">{t(\"gantipassword\")}</h5>\n\n              <Row>\n                <div className=\"col-md-12\">\n                  <FormGroup>\n                    <Label htmlFor=\"current\" className=\"input-label\">\n                      {t(\"passwordlama\")}\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"current\"\n                      id=\"current\"\n                      onChange={this.handleChangeCurrent}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label htmlFor=\"new\" className=\"input-label\">\n                      {t(\"passwordbaru\")}\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"new\"\n                      id=\"new\"\n                      onChange={this.handleChangeNew}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label htmlFor=\"confirm\" className=\"input-label\">\n                      {t(\"konfirmasipasswordbaru\")}\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"confirm\"\n                      id=\"confirm\"\n                      onChange={this.handleChangeConfirm}\n                    />\n                  </FormGroup>\n                </div>\n              </Row>\n              <Row>\n                <div className=\"col-8 d-flex justify-content-end\"></div>\n                <div className=\"col-4 d-flex justify-content-end\">\n                  <Button\n                    className=\"mr-2\"\n                    color=\"white\"\n                    onClick={this.changePass}\n                  >\n                    {t(\"batal\")}\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    color=\"netis-color\"\n                    onClick={this.cekSubmitData}\n                  >\n                    {t(\"simpan\")}\n                  </Button>\n                </div>\n              </Row>\n            </ModalBody>\n          </Modal>\n        </div >\n      </Navbar>\n    );\n  }\n}\n\nDefaultHeader.propTypes = {\n  t: PropTypes.func.isRequired,\n};\nconst mapStateToProps = ({ user, token }) => ({\n  user,\n  token,\n});\nexport default connect(mapStateToProps, { logout, setUser, getMe })(\n  withRouter(translate(DefaultHeader))\n);\n","import { lazy } from \"react\";\n\nconst ProfessionalDashboard = lazy(() =>\n  import(\"../../views/Menu/Professionals/ProfessionalDashboard\")\n)\n\nconst ClientDashboard = lazy(() =>\n  import(\"../../views/Menu/Clients/ClientDashboard\")\n)\n\nconst ProjectWrapper = lazy(() =>\n  import(\"../../views/Menu/Projects/ProjectWrapper\")\n)\nconst ClientWrapper = lazy(() =>\n  import(\"../../views/Menu/Clients/ClientWrapper\")\n)\nconst ProfessionalWrapper = lazy(() =>\n  import(\"../../views/Menu/Professionals/ProfessionalWrapper\")\n)\nconst Profile = lazy(() =>\n  import(\"../../views/Menu/Profile/Profile\")\n)\n\nexport default (user) => user.role === 'professional' ? menuProfessional() : menuClient();\n\nconst menuProfessional = () => [\n  {\n    url: \"/dashboard\",\n    component: ProfessionalDashboard,\n  },\n  {\n    url: \"/project\",\n    component: ProjectWrapper,\n  },\n  {\n    url: \"/client\",\n    component: ClientWrapper,\n  },\n  {\n    url: \"/profile\",\n    component: Profile\n  },\n]\n\nconst menuClient = () => [\n  {\n    url: \"/dashboard\",\n    component: ClientDashboard,\n  },\n  {\n    url: \"/professional\",\n    component: ProfessionalWrapper,\n  },\n  {\n    url: \"/project\",\n    component: ProjectWrapper,\n  },\n  {\n    url: \"/profile\",\n    component: Profile\n  },\n]","import React, { Component, Suspense } from 'react';\nimport * as router from 'react-router-dom';\nimport {\n    // AppSidebar, AppSidebarFooter, AppSidebarForm, AppSidebarHeader,\n    // AppSidebarNav2 as AppSidebarNav,\n    AppHeader\n} from '@coreui/react';\nimport { translate } from 'react-switch-lang';\nimport DefaultHeader from './DefaultHeader';\nimport { Container, Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport AuthRoute from './AuthRoute';\nimport Menu from './Menu';\n\nclass DefaultLayout extends Component {\n    generateRoutes = () => {\n        return Menu(this.props.user).map((props, idx) => (\n            <AuthRoute\n                key={idx}\n                path={props.url}\n                exact={!!props.exact}\n                component={props.component}\n                {...props}\n            />\n        ));\n    }\n    render() {\n        const { Switch, Redirect } = router;\n        return (\n            <div className=\"app\">\n                <AppHeader fixed><DefaultHeader /></AppHeader>\n                <div className=\"app-body\">\n                    <main className=\"main\">\n                        <Container className=\"mt-5\">\n                            <Suspense\n                                fallback={<div\n                                    style={{\n                                        position: \"absolute\",\n                                        top: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        left: 0,\n                                        background: \"rgba(255,255,255, 0.5)\",\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\",\n                                    }}\n                                >\n                                    <Spinner style={{ width: 48, height: 48 }} />\n                                </div>}\n                            >\n                                <Switch>\n                                    <Redirect exact from=\"/home\" to=\"/dashboard\" />\n                                    {this.generateRoutes()}\n                                </Switch>\n                            </Suspense>\n                        </Container>\n                    </main>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (reduxState) => ({ user: reduxState.user })\n\nexport default connect(mapStateToProps)(translate(DefaultLayout));\n","import 'moment/locale/id';\n\nexport default {\n    id: {\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lalu',\n            s: 'beberapa detik',\n            ss: '%d detik',\n            m: '1 menit',\n            mm: '%d menit',\n            h: '1 jam',\n            hh: '%d jam',\n            d: '1 hari',\n            dd: '%d hari',\n            M: '1 bulan',\n            MM: '%d bulan',\n            y: '1 tahun',\n            yy: '%d tahun',\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Col,\n  // Container,\n  Input,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../../actions/auth\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Link } from \"react-router-dom\";\nimport { translate } from \"react-switch-lang\";\nimport langUtils from \"../../../utils/language/index\";\n\ntoast.configure();\nclass Login extends Component {\n  constructor(props) {\n    console.log(props)\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: null,\n      update: \"0\",\n      loading: false,\n      showPassword: false,\n    };\n  }\n\n  closeLocalError = () => {\n    this.setState({ error: null });\n  };\n  handleChange = (e) => {\n    this.setState({\n      update: \"0\",\n      email: `${e.target.name === \"email\" ? e.target.value.trim() : this.state.email\n        }`,\n      password: `${e.target.name === \"password\" ? e.target.value : this.state.password\n        }`,\n    });\n  };\n  async loginProcess() {\n    var email = this.state.email;\n    var password = this.state.password;\n    // eslint-disable-next-line\n    const regexMatch = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n    if (!regexMatch) {\n      toast.error('Masukkan email dengan benar')\n      return;\n    }\n    await this.props.login({ email, password });\n    this.setState({\n      update: \"1\",\n      loading: true,\n    });\n  }\n  handleLogin = (e) => {\n    e.preventDefault();\n    this.setState({\n      loading: true,\n    });\n    this.loginProcess();\n    this.setState({\n      loading: false,\n    });\n  };\n  onSelectFlag = (countryCode) => {\n    this.handleSetLanguage(countryCode);\n  };\n  handleSetLanguage = (key) => {\n    langUtils.setLanguage(key);\n  };\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"d-flex justify-content-center align-items-center login-form\">\n        <Row>\n          <Col md=\"12\">\n            <form onSubmit={this.handleLogin} className=\"my-auto input-form\">\n              <div className=\"login-form-card\">\n                <div className=\"form-group mt-2 mb-3 position-relative d-flex align-items-center\">\n                  <Input style={{ borderRadius: \"8px\" }} type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" autoFocus inputMode=\"email\" autoComplete=\"username\" onChange={this.handleChange} />\n                  <i className=\"fa fa-envelope icon-inside-left text-netis-primary\" />\n                </div>\n                <div className=\"form-group mb-3 position-relative d-flex align-items-center\">\n                  <Input style={{ borderRadius: \"8px\" }} type={this.state.showPassword ? 'text' : 'password'} id=\"password\" name=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" onChange={this.handleChange} />\n                  <i className=\"fa fa-lock icon-inside-left text-netis-primary\" />\n                  <i className={`fa fa-eye-slash icon-see-password ${!this.state.showPassword && `text-secondary`}`}\n                    onClick={() => this.setState({ showPassword: !this.state.showPassword })}\n                  />\n                </div>\n                {/* <div className=\"text-left\">\n                  <Link to=\"/forgot\" style={{ color: '#dc3f46' }}>{t('Lupa Kata Sandi')} ? </Link>\n                </div> */}\n                <Button\n                  className=\"login-submit\"\n                  disabled={this.props.isLoading || !this.state.email || !this.state.password}\n                  style={{ borderRadius: \"8px\" }}\n                >\n                  {this.props.isLoading ? (\n                    <>\n                      <Spinner color=\"light\" size=\"sm\" /> Loading\n                    </>\n                  ) : (\n                    \"Masuk\"\n                  )}\n                </Button>\n              </div>\n            </form>\n            <h6 className=\"mt-2\" style={{ color: '#616161' }}>\n              Belum memiliki akun? Silahkan <Link to=\"/register\" style={{ color: \"#18568B\" }}><i>{t(\"Daftar\")}</i></Link>\n            </h6>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  error: state.error,\n  isLoading: state.isLoading,\n});\n\nexport default connect(mapStateToProps, { login })(translate(Login));\n","import React, { memo, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Navbar, NavbarBrand, NavbarToggler, NavItem, Nav, Collapse, Modal, Container, ModalBody, ModalHeader, Row, Col, Button } from \"reactstrap\";\n// import langUtils from \"../../utils/language/index\";\nimport { translate, t } from \"react-switch-lang\";\nimport Login from '../Auth/Login/Login';\n// import * as moment from \"moment\";\n\nfunction NavbarLandingPage() {\n  const location = useLocation()\n  const [openDrawer, setOpenDrawer] = useState(false)\n  const [modalLogin, setModalLogin] = useState(false)\n  const [modalRegister, setModalRegister] = useState(false)\n\n  const toggleLogin = () => {\n    setModalLogin(!modalLogin)\n  }\n\n  const toggleRegister = () => {\n    setModalRegister(!modalRegister)\n  }\n\n  const toggleNavbar = () => {\n    setOpenDrawer(true)\n  }\n\n  const closeDrawer = () => {\n    setOpenDrawer(false)\n  }\n\n  const getNavItemClass = (pos) =>\n    pos === 'home' ? \"mr-3 active\" : \"mr-3\";\n\n  return (\n    <>\n      <Navbar\n        color=\"white\"\n        className=\"navbar-expand-md fixed-top navbar-landigpage\"\n        light\n      >\n        <Container>\n          <NavbarBrand href=\"/\" className=\"mr-auto\">\n            P-Platform\n          </NavbarBrand>\n          <div className=\"ml-auto d-flex\">\n            <Collapse isOpen={!true} navbar>\n              <Nav navbar>\n                <NavItem\n                  className={location.pathname === '/about' ? 'active-navbar' : ''}\n                >\n                  <Link className=\"custom-nav\" to=\"/about\">\n                    {t('About')}\n                  </Link>\n                </NavItem>\n                <NavItem\n                  className={location.pathname === '/faq' ? 'active-navbar' : ''}\n                >\n                  <Link className=\"custom-nav\" to=\"/faq\">\n                    {t(\"FAQ\")}\n                  </Link>\n                </NavItem>\n                <NavItem\n                  className={location.pathname === '/contact' ? 'active-navbar' : ''}\n                >\n                  <Link className=\"custom-nav\" to=\"/contact\">\n                    {t(\"Contact\")}\n                  </Link>\n                </NavItem>\n                <NavItem className=\"nav-button\">\n                  <div\n                    className=\"btn button-landing px-2\"\n                    onClick={() => toggleRegister()}\n                    style={{ color: \"#fff\", cursor: \"pointer\" }}\n                  >\n                    {t(\"Register\")}\n                  </div>\n                </NavItem>\n                <NavItem className=\"nav-button\">\n                  <div\n                    className=\"btn button-landing px-2\"\n                    style={{ color: \"#fff\", cursor: \"pointer\" }}\n                    onClick={() => toggleLogin()}\n                  >\n                    {t(\"Login\")}\n                  </div>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n          <NavbarToggler onClick={toggleNavbar} className=\"\" />\n        </Container>\n      </Navbar>\n      <Modal\n        isOpen={openDrawer}\n        toggle={closeDrawer}\n        className={\"modal-drawer\"}\n      >\n        <div className=\"drawer container\">\n          <div className=\"drawer-header pb-2\">\n            <NavbarToggler\n              onClick={closeDrawer}\n              className=\"close-drawer ml-auto\"\n            />\n          </div>\n          <div className=\"text-center d-flex flex-column justify-content-center\">\n            <ul>\n              <li\n                className={`nav-item ${getNavItemClass(\"about\")}`}\n                onClick={() => {\n                  closeDrawer();\n                }}\n              >\n                <Link to=\"/about\" className=\"nav-link m-0 py-2\">\n                  {t('About')}\n                </Link>\n              </li>\n              <li\n                className={`nav-item ${getNavItemClass(\"faq\")}`}\n                onClick={() => {\n                  closeDrawer();\n                }}\n              >\n                <Link to=\"/faq\" className=\"nav-link m-0 py-2\">\n                  {t('FAQ')}\n                </Link>\n              </li>\n              <li\n                className={`nav-item ${getNavItemClass(\"contact\")}`}\n                onClick={() => {\n                  closeDrawer();\n                }}\n              >\n                <Link to=\"/contact\" className=\"nav-link m-0 py-2\">\n                  {t('Contact')}\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  className=\"btn button-landing px-2 py-2\"\n                  to=\"/login\"\n                  style={{ color: \"#fff\" }}\n                >\n                  Login\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className=\"btn button-landing px-2 py-2\"\n                  to=\"/login\"\n                  style={{ color: \"#fff\" }}\n                >\n                  Register\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </Modal>\n      <ModalLogin isOpen={modalLogin} toggle={(e) => toggleLogin(e)} />\n      <ModalRegister isOpen={modalRegister} toggle={(e) => toggleRegister(e)} />\n    </>\n  )\n}\n\nexport const ModalLogin = memo(({ isOpen, toggle }) => {\n\n  const handleToggle = () => {\n    toggle(false)\n  }\n  return (\n    <Modal isOpen={isOpen} toggle={() => handleToggle()}>\n      <ModalHeader toggle={() => handleToggle()}>Login</ModalHeader>\n      <ModalBody>\n        <Login />\n      </ModalBody>\n    </Modal>\n  )\n})\n\nexport const ModalRegister = memo(({ isOpen, toggle }) => {\n  const [showClientType, setShowClientType] = useState(false)\n  const handleToggle = () => {\n    toggle(false)\n  }\n  return (\n    <Modal isOpen={isOpen} toggle={() => handleToggle()}>\n      <ModalHeader toggle={() => handleToggle()}>Register</ModalHeader>\n      <ModalBody className=\"p-3\">\n        <Row className=\"text-center\">\n          <Col xs=\"12\">\n            Register as\n          </Col>\n          <Col xs=\"12\" className=\"mb-3\">\n            <Link\n              to={{\n                pathname: \"/register\",\n                search: `?form=professional`,\n                hash: 'registrantInformation'\n              }}\n              style={{ color: \"#fff\", textDecoration: 'none' }}\n              onClick={() => {\n                handleToggle()\n                localStorage.setItem(\"registrationForm\", 'professional');\n              }}\n            >\n              <Button color=\"primary\" block>Professional</Button>\n            </Link>\n          </Col>\n          <Col xs=\"12\">\n            <Row>\n              <Col xs=\"12\" className=\"mb-3\">\n                <Button color=\"warning\" block onClick={() => setShowClientType(!showClientType)}>Client</Button>\n              </Col>\n              {showClientType &&\n                <>\n                  <Col xs=\"6\">\n                    <Link\n                      to={{\n                        pathname: \"/register\",\n                        search: `?form=business`,\n                        hash: 'companyInformation'\n                      }}\n                      style={{ color: \"#fff\", textDecoration: 'none' }}\n                      onClick={() => {\n                        handleToggle()\n                        localStorage.setItem(\"registrationForm\", 'business');\n                      }}\n                    >\n                      <Button color=\"info\" block>Business Entity</Button>\n                    </Link>\n                  </Col>\n                  <Col xs=\"6\">\n                    <Link\n                      to={{\n                        pathname: \"/register\",\n                        search: `?form=individual`,\n                        hash: 'registrantInformation'\n                      }}\n                      style={{ color: \"#fff\", textDecoration: 'none' }}\n                      onClick={() => {\n                        handleToggle()\n                        localStorage.setItem(\"registrationForm\", 'individual');\n                      }}\n                    >\n                      <Button color=\"secondary\" block>Individual</Button>\n                    </Link>\n                  </Col>\n                </>\n              }\n            </Row>\n          </Col>\n        </Row>\n      </ModalBody>\n    </Modal>\n  )\n})\n\nexport default translate(NavbarLandingPage)\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport NavbarLandingPage from './Navbar'\n// import Footer from './Footer'\n\nfunction PageLayout(props) {\n\n  const windowOnScroll = () => {\n    if (window.scrollY > 0) {\n      if (\n        !document.getElementsByTagName(\"nav\")[0].classList.contains(\"shadow-sm\")\n      ) {\n        document.getElementsByTagName(\"nav\")[0].classList.add(\"shadow-sm\");\n      }\n    } else {\n      if (\n        document.getElementsByTagName(\"nav\")[0].classList.contains(\"shadow-sm\")\n      ) {\n        document.getElementsByTagName(\"nav\")[0].classList.remove(\"shadow-sm\");\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", windowOnScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", windowOnScroll);\n\n    }\n  })\n\n  return (\n    <div className=\"container\">\n      <NavbarLandingPage />\n      <div className=\"wrapper-landing-page\">\n        {props.children}\n      </div>\n      {/* {props.footer === false ? null : <Footer />} */}\n    </div>\n  );\n}\nPageLayout.propTypes = {\n  children: PropTypes.node,\n  footer: PropTypes.bool,\n};\nPageLayout.defaultTypes = {\n  footer: true,\n};\nexport default PageLayout;\n","import React from 'react';\nimport { translate } from \"react-switch-lang\";\nimport PageLayout from './PageLayout';\n\n\nfunction LandingPage() {\n  return (\n    <PageLayout>\n      Home\n    </PageLayout>\n  )\n}\n\nexport default translate(LandingPage)\n","import React from 'react'\nimport PageLayout from './PageLayout'\n\nfunction FAQ() {\n\n  return (\n    <PageLayout>\n      FAQ\n    </PageLayout>\n  )\n}\n\nexport default FAQ\n","import React from 'react'\nimport PageLayout from './PageLayout'\n\nfunction Contact(props, ref) {\n  return (\n    <PageLayout>\n      Contact\n    </PageLayout>\n  )\n}\n\nexport default Contact\n","import React from 'react'\nimport PageLayout from './PageLayout'\n\nfunction About() {\n\n  return (\n    <PageLayout>\n      About\n    </PageLayout>\n  )\n}\n\nexport default About\n","import React, { useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button, Col, Row } from 'reactstrap';\nimport { ArcherContainer, ArcherElement } from 'react-archer'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport const NavigationDot = (props) => {\n    const pageName = useCallback((i) => {\n        if (props.role === 'professional') {\n            if (i === 1) return 'Registrant Information'\n            if (i === 2) return 'Education'\n            if (i === 3) return 'Work Experience'\n            if (i === 4) return 'Project Experience'\n            if (i === 5) return 'Skill'\n            if (i === 6) return 'Document Verification'\n        }\n        if (props.role === 'business') {\n            if (i === 1) return 'Company Information'\n            if (i === 2) return 'Registrant Information'\n            if (i === 3) return 'Document Verification'\n        }\n        if (props.role === 'individual') {\n            if (i === 1) return 'Registrant Information'\n            if (i === 2) return 'Document Verification'\n        }\n    }, [props.role])\n\n    const pageIcon = useCallback((i) => {\n        if (props.role === 'professional') {\n            if (i === 1) return 'user'\n            if (i === 2) return 'university'\n            if (i === 3) return 'building'\n            if (i === 4) return 'laptop-house'\n            if (i === 5) return 'briefcase'\n            if (i === 6) return 'book'\n        }\n        if (props.role === 'business') {\n            if (i === 1) return 'building'\n            if (i === 2) return 'user'\n            if (i === 3) return 'book'\n        }\n        if (props.role === 'individual') {\n            if (i === 1) return 'user'\n            if (i === 2) return 'book'\n        }\n    }, [props.role])\n\n    const dots = [];\n    for (let i = 1; i <= props.totalSteps; i += 1) {\n        dots.push(i);\n    }\n\n    return (\n        <div className=\"register-nav mb-4\">\n            <div className={`mb-3 mb-md-3 mx-auto`} style={{ width: '80%' }}>\n                <ArcherContainer>\n                    <Row>\n                        {dots.map((p, i) => (\n                            <Col className=\"text-center\" key={i}>\n                                <ArcherElement\n                                    id={`step-${i}`}\n                                    relations={i + 1 !== props.totalSteps ? [\n                                        {\n                                            targetId: `step-${i + 1}`,\n                                            targetAnchor: 'middle',\n                                            sourceAnchor: 'middle',\n                                            style: { strokeColor: '#f7b190', strokeWidth: 5, endMarker: false },\n                                        },\n                                    ] : []}\n                                >\n                                    <div\n                                        className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                        style={{ backgroundColor: props.currentStep === i + 1 ? '#f7b190' : '#fff', border: 'solid 1px #f7b190', width: '60px', height: '60px' }}\n                                    // onClick={() => props.goToStep(i + 1)}\n                                    >\n                                        <FontAwesomeIcon icon={pageIcon(i + 1)} color={`${props.currentStep === i + 1 ? '#fff' : '#f7b190'}`} size=\"2x\" />\n                                    </div>\n                                </ArcherElement>\n                                <span className=\"mt-2\">\n                                    <br />\n                                    {pageName(i + 1)}\n                                </span>\n                            </Col>\n                        ))}\n                    </Row>\n                </ArcherContainer>\n            </div>\n        </div>\n    );\n};\n\nexport const NavigationPage = (props) => {\n    const location = useLocation();\n    return (\n        <div className={`d-flex ${(location.hash !== '#registrantInformation' || location.hash === '#companyInformation') && location.hash !== '#documentVerification' ? 'justify-content-between' : (location.hash === '#registrantInformation' || location.hash === '#companyInformation' ? 'justify-content-end' : '')}`}>\n            {(location.hash !== '#registrantInformation' || location.hash === '#companyInformation') && <Button color=\"primary\" onClick={props.SW.previousStep}>Previous</Button>}\n            {location.hash !== '#documentVerification' && <Button color=\"primary\" onClick={props.SW.nextStep}>Next</Button>}\n        </div>\n    )\n};\n\nexport const Stats = ({\n    currentStep,\n    firstStep,\n    goToStep,\n    lastStep,\n    nextStep,\n    previousStep,\n    totalSteps,\n    step,\n}) => (\n    <div className={`d-flex ${step > 1 ? 'justify-content-between' : (step === 1 ? 'justify-content-end' : '')}`}>\n        {step > 1 &&\n            <Button color=\"primary\" type=\"submit\" onClick={previousStep}>Back</Button>\n        }\n        {step < totalSteps && step !== totalSteps &&\n            <Button color=\"primary\" type=\"submit\" onClick={nextStep}>Next</Button>\n        }\n        {step === totalSteps &&\n            <Button color=\"primary\" type=\"submit\" onClick={nextStep}>Finish</Button>\n        }\n    </div>\n);","import React, { useCallback, useMemo } from \"react\"\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { Card, CardBody, Row, Col, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport Select from 'react-select';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport moment from \"moment\";\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\n\n\nexport default (props) => {\n    let getLocalStorage;\n    if (props.registrationForm === 'professional') getLocalStorage = JSON.parse(localStorage.getItem('registrationProfessional'))\n    if (props.registrationForm === 'business') getLocalStorage = JSON.parse(localStorage.getItem('registrationBusiness'))\n    if (props.registrationForm === 'individual') getLocalStorage = JSON.parse(localStorage.getItem('registrationIndividual'))\n\n    const ValidationFormSchema = () => {\n        let optional;\n        if (props.registrationForm === 'individual') optional = { sector: Yup.string().required().label('Sector') }\n        return Yup.object().shape({\n            ...optional,\n            firstName: Yup.string().required().label('First Name'),\n            lastName: Yup.string().required().label('Last Name'),\n            gender: Yup.string().required().oneOf(['L', 'P']).label('Gender'),\n            dateOfBirth: Yup.string().required().label('Date of Birth'),\n            idType: Yup.string().required().label('ID Type'),\n            idNumber: Yup.string().required().label('ID Number'),\n            npwpNumber: Yup.string().required().label('NPWP Number'),\n            address: Yup.string().required().label('Address'),\n            province: Yup.string().required().label('Province'),\n            phone: Yup.string().required().label('Phone'),\n            email: Yup.string().required().email().label('Email'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit } = useFormik({\n        initialValues: {\n            firstName: getLocalStorage?.registrantForm?.firstName ?? '',\n            lastName: getLocalStorage?.registrantForm?.lastName ?? '',\n            gender: getLocalStorage?.registrantForm?.gender ?? '',\n            dateOfBirth: getLocalStorage?.registrantForm?.dateOfBirth ? moment(getLocalStorage?.registrantForm?.dateOfBirth) : '',\n            idType: { label: 'KTP', value: 'ktp' },\n            idNumber: getLocalStorage?.registrantForm?.idNumber ?? '',\n            npwpNumber: getLocalStorage?.registrantForm?.npwpNumber ?? '',\n            address: getLocalStorage?.registrantForm?.address ?? '',\n            province: getLocalStorage?.registrantForm?.province ?? '',\n            phone: getLocalStorage?.registrantForm?.phone ?? '',\n            email: getLocalStorage?.registrantForm?.email ?? '',\n            sector: '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><RegistrantInformationForm registrantData={values} setRegistrantData={setValues} touched={touched} errors={errors} {...props} /></Col>\n            <Col xs=\"12\"><ContactInformationForm contactData={values} setContactData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n\nexport const RegistrantInformationForm = ({ registrantData, setRegistrantData, touched, errors, registrationForm }) => {\n    const idType = [\n        { label: 'KTP', value: 'ktp' },\n    ]\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeFirstName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, firstName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeLastName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, lastName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeSector = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, sector: e }))\n    }, [setRegistrantData])\n\n    const handleChangeGender = useCallback((e) => {\n        const { value, checked } = e.target;\n        setRegistrantData(old => ({ ...old, gender: checked ? value : '' }))\n    }, [setRegistrantData])\n\n    const handleChangeDateOfBirth = useCallback((value) => {\n        setRegistrantData(old => ({ ...old, dateOfBirth: value }))\n    }, [setRegistrantData])\n\n    const handleChangeIdType = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, idType: e }))\n    }, [setRegistrantData])\n\n    const handleChangeIdNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, idNumber: value }))\n    }, [setRegistrantData])\n\n    const handleChangeNpwpNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, npwpNumber: value }))\n    }, [setRegistrantData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"firstName\">First Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={registrantData.firstName} onChange={(e) => handleChangeFirstName(e)} placeholder=\"First Name Field...\" />\n                                {touched.firstName && errors.firstName && <small className=\"text-danger\">{errors.firstName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"lastName\">Last Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={registrantData.lastName} onChange={(e) => handleChangeLastName(e)} placeholder=\"Last Name Field...\" />\n                                {touched.lastName && errors.lastName && <small className=\"text-danger\">{errors.lastName}</small>}\n                            </Col>\n                        </Row>\n                        {registrationForm === 'individual' &&\n                            <Row className=\"my-3\">\n                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                    <Label for=\"sector\">Sector</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                    <Select\n                                        options={sectors}\n                                        placeholder=\"Choose a socter...\"\n                                        value={registrantData.sector}\n                                        onChange={(e) => handleChangeSector(e)}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    />\n                                    {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                                </Col>\n                            </Row>\n                        }\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"gender\">Gender</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"male\" value=\"L\" checked={registrantData.gender === \"L\" ? true : false} onChange={(e) => handleChangeGender(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"male\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Male\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"female\" value=\"P\" checked={registrantData.gender === \"P\" ? true : false} onChange={(e) => handleChangeGender(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"female\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Female\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.gender && errors.gender && <small className=\"text-danger\">{errors.gender}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"dateOfBirth\">Date of Birth</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <DateRangePicker\n                                    initialSettings={{\n                                        singleDatePicker: true,\n                                        showDropdowns: true,\n                                        startDate: new Date(),\n                                        maxDate: new Date(),\n                                        autoApply: true,\n                                    }}\n                                    onApply={(e, p) => handleChangeDateOfBirth(p.startDate)}\n                                >\n                                    <div id=\"reportrange\" style={{ background: '#fff', cursor: 'pointer', padding: '5px 10px', border: '1px solid #ccc', width: '100%' }}>\n                                        <i className=\"fa fa-calendar mr-2\"></i><span>{registrantData.dateOfBirth ? registrantData.dateOfBirth.format('DD/MM/YYYY') : 'DD/MMMM/YYYY'}</span> <i className=\"fa fa-caret-down float-right\"></i>\n                                    </div>\n                                </DateRangePicker>\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idType\">ID Type</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={idType}\n                                    placeholder=\"Choose id type...\"\n                                    value={registrantData.idType}\n                                    onChange={(e) => handleChangeIdType(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.idType && errors.idType && <small className=\"text-danger\">{errors.idType}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idNumber\">ID Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"idNumber\" id=\"idNumber\" value={registrantData.idNumber} onChange={(e) => handleChangeIdNumber(e)} placeholder=\"ID Number Field...\" />\n                                {touched.idNumber && errors.idNumber && <small className=\"text-danger\">{errors.idNumber}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"npwpNumber\">NPWP Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"npwpNumber\" id=\"npwpNumber\" value={registrantData.npwpNumber} onChange={(e) => handleChangeNpwpNumber(e)} placeholder=\"NPWP Number Field...\" />\n                                {touched.npwpNumber && errors.npwpNumber && <small className=\"text-danger\">{errors.npwpNumber}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card >\n    );\n}\n\nexport const ContactInformationForm = ({ contactData, setContactData, touched, errors }) => {\n    const { data: getProvince } = useDataProvinces();\n    const province = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n    const handleChangeProvince = useCallback((e) => {\n        setContactData(old => ({ ...old, province: e }))\n    }, [setContactData])\n\n    const handleChangeAddress = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, address: value }))\n    }, [setContactData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, phone: value }))\n    }, [setContactData])\n\n    const handleChangeEmail = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, email: value }))\n    }, [setContactData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">CONTACT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"address\">Address</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"address\"\n                                    id=\"address\"\n                                    className=\"form-control\"\n                                    placeholder=\"Address Field...\"\n                                    value={contactData.address}\n                                    onChange={(e) => handleChangeAddress(e)}\n                                />\n                                {touched.address && errors.address && <small className=\"text-danger\">{errors.address}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"province\">Province</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={province}\n                                    placeholder=\"Choose province...\"\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={contactData.province}\n                                    onChange={(e) => handleChangeProvince(e)}\n                                />\n                                {touched.province && errors.province && <small className=\"text-danger\">{errors.province}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" value={contactData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Phone Field...\" />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"email\">Email</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={contactData.email} onChange={(e) => handleChangeEmail(e)} placeholder=\"Email Field...\" />\n                                {touched.email && errors.email && <small className=\"text-danger\">{errors.email}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label } from \"reactstrap\";\nimport Select from 'react-select';\nimport SelectYear from \"../../../../components/SelectYear\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataEducationDegrees from \"../../../../hooks/useDataEducationDegrees\";\nimport useDataEducationFields from \"../../../../hooks/useDataEducationFields\";\nimport useDataSchools from \"../../../../hooks/useDataSchools\";\n\nexport default (props) => {\n    const { data: getDegree } = useDataEducationDegrees();\n    const degree = useMemo(() => getDegree.map(p => ({ label: p.name, value: p.id })), [getDegree])\n\n    const { data: getSchool } = useDataSchools();\n    const school = useMemo(() => getSchool.map(p => ({ label: p.name, value: p.id })), [getSchool])\n\n    const { data: getEduField } = useDataEducationFields();\n    const eduField = useMemo(() => getEduField.map(p => ({ label: p.name, value: p.id })), [getEduField])\n\n    const ValidationFormSchema = () => {\n        return Yup.array().of(\n            Yup.object().shape({\n                degree: Yup.string().required().label('Degree'),\n                school: Yup.string().required().label('School'),\n                education: Yup.string().required().label('Education'),\n                graduationYear: Yup.string().required().label('Graduation Year'),\n            })\n        )\n    }\n\n    const { values: educationData, touched, errors, setValues: setEducationData, handleSubmit } = useFormik({\n        initialValues: [\n            {\n                id: 1,\n                degree: '',\n                school: '',\n                education: '',\n                graduationYear: '',\n            }\n        ],\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeDegree = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, degree: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeSchool = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, school: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeEducation = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, education: e }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeGraduationYear = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, graduationYear: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleAddEducationData = useCallback(() => {\n        setEducationData(old => ([...old, { id: old[old.length - 1].id + 1, degree: '', school: '', education: '', graduationYear: '' }]))\n    }, [setEducationData])\n\n    const handleDeleteEducationData = useCallback((i) => {\n        setEducationData(old => ([...old].filter(edu => edu.id !== i)))\n    }, [setEducationData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Education</div>\n                            </Col>\n                            {educationData.map((edu, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <Card className=\"shadow-sm\">\n                                        <CardBody>\n                                            {i > 0 &&\n                                                <Row className=\"my-3\">\n                                                    <Col xs=\"12\">\n                                                        <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteEducationData(edu.id)}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                    </Col>\n                                                </Row>\n                                            }\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"degree\">Degree</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={degree}\n                                                        placeholder=\"Choose degree...\"\n                                                        onChange={(e) => handleChangeDegree(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.degree}\n                                                    />\n                                                    {touched[i]?.degree && errors[i]?.degree && <small className=\"text-danger\">{errors[i]?.degree}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"school\">School</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={school}\n                                                        placeholder=\"Choose school...\"\n                                                        onChange={(e) => handleChangeSchool(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.school}\n                                                    />\n                                                    {touched[i]?.school && errors[i]?.school && <small className=\"text-danger\">{errors[i]?.school}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"education\">Education</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={eduField}\n                                                        placeholder=\"Choose Education Field...\"\n                                                        onChange={(e) => handleChangeEducation(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.education}\n                                                    />\n                                                    {touched[i]?.education && errors[i]?.education && <small className=\"text-danger\">{errors[i]?.education}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"graduationYear\">Graduation year</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <SelectYear name=\"graduationYear\" id=\"graduationYear\" value={edu.graduationYear} onChanged={(e) => handleChangeGraduationYear(e, edu.id)} />\n                                                    {touched[i]?.graduationYear && errors[i]?.graduationYear && <small className=\"text-danger\">{errors[i]?.graduationYear}</small>}\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ))}\n                            <Col xs=\"12\">\n                                <Button color=\"success\" className=\"float-right\" onClick={handleAddEducationData}>Add Education</Button>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Datepicker from \"react-datepicker\";\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\n\nexport default (props) => {\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const { data: getProvince } = useDataProvinces();\n    const provinces = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const employementTypes = [\n        { label: 'Self employed', value: 'self_employed' },\n        { label: 'Employee', value: 'employee' },\n        { label: 'Public servant', value: 'public_servant' },\n        { label: 'Retiree', value: 'retiree' },\n        { label: 'Unemployed', value: 'unemployed' },\n    ]\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const ValidationFormSchema = () => {\n        return Yup.array().of(\n            Yup.object().shape({\n                job: Yup.string().required().label('Job'),\n                company: Yup.string().required().label('Company Name'),\n                sector: Yup.string().required().label('Sector'),\n                employementType: Yup.string().required().label('Employement Type'),\n                location: Yup.string().required().label('Location'),\n                startDate: Yup.string().required().label('Start Date'),\n                endDate: Yup.string().required().label('End Date'),\n                skills: Yup.string().required().label('Skills'),\n            })\n        )\n    }\n\n    const { values: workExperienceData, touched, errors, setValues: setWorkExperienceData, handleSubmit } = useFormik({\n        initialValues: [\n            {\n                id: 1,\n                job: '',\n                company: '',\n                sector: '',\n                employementType: '',\n                location: '',\n                startDate: '',\n                endDate: '',\n                endDatePresent: '',\n                skills: [],\n            }\n        ],\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeSector = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, sector: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeEmployementType = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, employementType: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeLocation = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, location: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeJob = useCallback((e, i) => {\n        const { value } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, job: value }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeCompany = useCallback((e, i) => {\n        const { value } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, company: value }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeStartDate = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, startDate: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeEndDate = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, endDate: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangePresent = useCallback((e, i) => {\n        const { value, checked } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, endDatePresent: checked ? value : '' }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeSkills = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, skills: e ?? [] }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleAddWorkExperienceData = useCallback(() => {\n        setWorkExperienceData(old => ([...old, { id: old[old.length - 1].id + 1, job: '', company: '', sector: '', employementType: '', location: '', startDate: '', endDate: '', endDatePresent: '', skills: [], }]))\n    }, [setWorkExperienceData])\n\n    const handleDeleteWorkExperienceData = useCallback((i) => {\n        setWorkExperienceData(old => ([...old].filter(work => work.id !== i)))\n    }, [setWorkExperienceData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Work Experience</div>\n                            </Col>\n                            {workExperienceData.map((work, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <Card className=\"shadow-sm\">\n                                        <CardBody>\n                                            {i > 0 &&\n                                                <Row className=\"my-3\">\n                                                    <Col xs=\"12\">\n                                                        <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteWorkExperienceData(work.id)}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                    </Col>\n                                                </Row>\n                                            }\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"job\">Job Title</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"text\" name=\"job\" id=\"job\" value={work.job} onChange={(e) => handleChangeJob(e, work.id)} placeholder=\"Job Title Field...\" />\n                                                    {touched[i]?.job && errors[i]?.job && <small className=\"text-danger\">{errors[i]?.job}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"job\">Company Name</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"text\" name=\"company\" id=\"company\" value={work.company} onChange={(e) => handleChangeCompany(e, work.id)} placeholder=\"Company Name Field...\" />\n                                                    {touched[i]?.company && errors[i]?.company && <small className=\"text-danger\">{errors[i]?.company}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"sector\">Sector</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={sectors}\n                                                        placeholder=\"Choose sector...\"\n                                                        onChange={(e) => handleChangeSector(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.sector}\n                                                    />\n                                                    {touched[i]?.sector && errors[i]?.sector && <small className=\"text-danger\">{errors[i]?.sector}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"employementType\">Employment Type</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={employementTypes}\n                                                        placeholder=\"Choose Employment Type...\"\n                                                        onChange={(e) => handleChangeEmployementType(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.employementType}\n                                                    />\n                                                    {touched[i]?.employementType && errors[i]?.employementType && <small className=\"text-danger\">{errors[i]?.employementType}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"location\">Location</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={provinces}\n                                                        placeholder=\"Choose Location...\"\n                                                        onChange={(e) => handleChangeLocation(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.location}\n                                                    />\n                                                    {touched[i]?.location && errors[i]?.location && <small className=\"text-danger\">{errors[i]?.location}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"startDate\">Start Date</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Datepicker\n                                                        required\n                                                        name=\"startDate\"\n                                                        selected={work.startDate}\n                                                        onChange={(e) => handleChangeStartDate(e, work.id)}\n                                                        showMonthYearPicker\n                                                        showFullMonthYearPicker\n                                                        showFourColumnMonthYearPicker\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMMM yyyy\"\n                                                        maxDate={new Date()}\n                                                        placeholderText=\"Select a date\"\n                                                        wrapperClassName=\"form-control\"\n                                                    />\n                                                    {touched[i]?.startDate && errors[i]?.startDate && <small className=\"text-danger\">{errors[i]?.startDate}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"endDate\">End Date</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Row>\n                                                        <Col xs=\"6\" md=\"4\" lg=\"5\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"endDate\"\n                                                                selected={work.endDate}\n                                                                onChange={(e) => handleChangeEndDate(e, work.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                minDate={work.startDate}\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                wrapperClassName=\"form-control\"\n                                                            />\n                                                        </Col>\n                                                        <Col xs=\"6\" md=\"4\" lg=\"4\">\n                                                            <InputGroup>\n                                                                <InputGroupAddon addonType=\"prepend\">\n                                                                    <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                                        <CustomInput type=\"checkbox\" id={`present-${work.id}`} value=\"present\" checked={work.endDatePresent} onChange={(e) => handleChangePresent(e, work.id)} />\n                                                                    </InputGroupText>\n                                                                </InputGroupAddon>\n                                                                <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                                    Present\n                                                                </div>\n                                                            </InputGroup>\n                                                        </Col>\n                                                        <Col xs=\"12\">\n                                                            {touched[i]?.endDate && errors[i]?.endDate && <small className=\"text-danger\">{errors[i]?.endDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"skill\">Skill</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        closeMenuOnSelect={false}\n                                                        options={skills}\n                                                        isClearable\n                                                        isMulti\n                                                        placeholder=\"Choose some skills...\"\n                                                        onChange={(e) => handleChangeSkills(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.skills} />\n                                                    {touched[i]?.skills && errors[i]?.skills && <small className=\"text-danger\">{errors[i]?.skills}</small>}\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ))}\n                            <Col xs=\"12\">\n                                <Button color=\"success\" className=\"float-right\" onClick={handleAddWorkExperienceData}>Add Work Experience</Button>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Datepicker from \"react-datepicker\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\nimport useDataCountries from \"../../../../hooks/useDataCountries\";\n\nexport default (props) => {\n    const [hasProjectExperience, setHasProjectExperience] = useState(false);\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const { data: getProvince } = useDataProvinces();\n    const provinces = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const { data: getCountries } = useDataCountries();\n    const countries = useMemo(() => getCountries.map(p => ({ label: p.name, value: p.id })), [getCountries])\n\n    const ValidationFormSchema = () => {\n        if (!hasProjectExperience) return Yup.array().of(\n            Yup.object().shape({\n                projectName: Yup.string().label('Project Name'),\n            })\n        )\n        return Yup.array().of(\n            Yup.object().shape({\n                projectName: Yup.string().required().label('Project Name'),\n                client: Yup.string().required().label('Client Name'),\n                projectRole: Yup.string().required().label('Project Role'),\n                sector: Yup.string().required().label('Sector'),\n                province: Yup.string().required().label('province'),\n                startDate: Yup.string().required().label('Start Date'),\n                endDate: Yup.string().required().label('End Date'),\n                description: Yup.string().required().label('Description'),\n                skills: Yup.string().required().label('Skills'),\n            })\n        )\n    }\n\n    const { values: projectExperienceData, touched, errors, setValues: setProjectExperienceData, handleSubmit } = useFormik({\n        initialValues: [\n            {\n                id: 1,\n                projectName: '',\n                client: '',\n                projectRole: '',\n                sector: '',\n                province: '',\n                country: '',\n                startDate: '',\n                endDate: '',\n                description: '',\n                skills: [],\n            }\n        ],\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeSector = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, sector: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProvince = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, province: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeCountry = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, country: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProjectName = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, projectName: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeClient = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, client: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProjectRole = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, projectRole: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeStartDate = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, startDate: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeEndDate = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, endDate: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeDescription = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, description: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeSkills = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, skills: e ?? [] }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleAddprojectExperienceData = useCallback(() => {\n        setProjectExperienceData(old => ([...old, { id: old[old.length - 1].id + 1, projectName: '', client: '', projectRole: '', sector: '', province: '', startDate: '', endDate: '', description: '', skills: [], }]))\n    }, [setProjectExperienceData])\n\n    const handleDeleteprojectExperienceData = useCallback((i) => {\n        setProjectExperienceData(old => ([...old].filter(project => project.id !== i)))\n    }, [setProjectExperienceData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">project Experience</div>\n                            </Col>\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <InputGroup>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                            <CustomInput type=\"checkbox\" id=\"hasProjectExperience\" value=\"hasProjectExperience\" checked={hasProjectExperience} onChange={(e) => setHasProjectExperience(e.target.checked)} />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Label for=\"hasProjectExperience\" className=\"d-flex bg-transparent p-1 align-items-center\">\n                                        Do you have project experience?\n                                    </Label>\n                                </InputGroup>\n                            </Col>\n                            {hasProjectExperience &&\n                                <>\n                                    {projectExperienceData.map((project, i) => (\n                                        <Col xs=\"12\" key={i}>\n                                            <Card className=\"shadow-sm\">\n                                                <CardBody>\n                                                    {i > 0 &&\n                                                        <Row className=\"my-3\">\n                                                            <Col xs=\"12\">\n                                                                <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteprojectExperienceData(project.id)}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                            </Col>\n                                                        </Row>\n                                                    }\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"projectName\">Project Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"projectName\" id=\"projectName\" value={project.projectName} onChange={(e) => handleChangeProjectName(e, project.id)} placeholder=\"Job Title Field...\" />\n                                                            {touched[i]?.projectName && errors[i]?.projectName && <small className=\"text-danger\">{errors[i]?.projectName}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"client\">Client Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"client\" id=\"client\" value={project.client} onChange={(e) => handleChangeClient(e, project.id)} placeholder=\"Client Name Field...\" />\n                                                            {touched[i]?.client && errors[i]?.client && <small className=\"text-danger\">{errors[i]?.client}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"projectRole\">Project Role</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"projectRole\" id=\"projectRole\" value={project.projectRole} onChange={(e) => handleChangeProjectRole(e, project.id)} placeholder=\"Project Role Field...\" />\n                                                            {touched[i]?.projectRole && errors[i]?.projectRole && <small className=\"text-danger\">{errors[i]?.projectRole}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"sector\">Sector</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={sectors}\n                                                                placeholder=\"Choose sector...\"\n                                                                onChange={(e) => handleChangeSector(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.sector}\n                                                            />\n                                                            {touched[i]?.sector && errors[i]?.sector && <small className=\"text-danger\">{errors[i]?.sector}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"province\">Province</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={provinces}\n                                                                placeholder=\"Choose a Province...\"\n                                                                onChange={(e) => handleChangeProvince(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.province}\n                                                            />\n                                                            {touched[i]?.province && errors[i]?.province && <small className=\"text-danger\">{errors[i]?.province}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"countries\">Country</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={countries}\n                                                                placeholder=\"Choose a Country...\"\n                                                                onChange={(e) => handleChangeCountry(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.countries}\n                                                            />\n                                                            {touched[i]?.countries && errors[i]?.countries && <small className=\"text-danger\">{errors[i]?.countries}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"startDate\">Start Date</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"startDate\"\n                                                                selected={project.startDate}\n                                                                onChange={(e) => handleChangeStartDate(e, project.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                wrapperClassName=\"form-control\"\n                                                            />\n                                                            {touched[i]?.startDate && errors[i]?.startDate && <small className=\"text-danger\">{errors[i]?.startDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"endDate\">End Date</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"endDate\"\n                                                                selected={project.endDate}\n                                                                onChange={(e) => handleChangeEndDate(e, project.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                minDate={project.startDate}\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                wrapperClassName=\"form-control\"\n                                                            />\n                                                            {touched[i]?.endDate && errors[i]?.endDate && <small className=\"text-danger\">{errors[i]?.endDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"description\">Description</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <TextareaAutosize\n                                                                minRows={3}\n                                                                name=\"description\"\n                                                                id=\"description\"\n                                                                className=\"form-control\"\n                                                                placeholder=\"Description Field...\"\n                                                                value={project.description}\n                                                                onChange={(e) => handleChangeDescription(e, project.id)}\n                                                            />\n                                                            {touched[i]?.description && errors[i]?.description && <small className=\"text-danger\">{errors[i]?.description}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"skill\">Skill</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                closeMenuOnSelect={false}\n                                                                options={skills}\n                                                                isClearable\n                                                                isMulti\n                                                                placeholder=\"Choose some skills...\"\n                                                                onChange={(e) => handleChangeSkills(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.skills} />\n                                                            {touched[i]?.skills && errors[i]?.skills && <small className=\"text-danger\">{errors[i]?.skills}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                    ))}\n                                    <Col xs=\"12\">\n                                        <Button color=\"success\" className=\"float-right\" onClick={handleAddprojectExperienceData}>Add project Experience</Button>\n                                    </Col>\n                                </>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row >\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport Select from 'react-select';\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\n\nconst colorSkills = [\n    '#1372BA',\n    '#5380a2',\n    '#8453a2',\n    '#53a276',\n    '#a25353',\n    '#bfb327',\n    '#2733bf',\n    '#27bf4f'\n]\n\nexport default (props) => {\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            sectors: Yup.array().min(1).max(3).label('Sector'),\n            skills: Yup.array().min(1).max(5).label('Skills'),\n        })\n    }\n\n    const { values: skillSectorData, touched, errors, setValues: setSkillSectorData, handleSubmit } = useFormik({\n        initialValues: {\n            sectors: [],\n            skills: [],\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n    const colourStyles = {\n        multiValue: (styles, { data }) => {\n            const color = data.color;\n            return {\n                ...styles,\n                backgroundColor: color,\n            };\n        },\n        multiValueLabel: (styles, { data }) => ({\n            ...styles,\n            color: '#fff',\n        }),\n    };\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => {\n        const opt = []\n        const dataSectors = getSector.map(p => ({ label: p.name, value: p.id }))\n        dataSectors.map((v) => {\n            const dataOptions = skillSectorData.sectors?.find(u => u.value === v.value);\n            if (!dataOptions) opt.push({ ...v, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })\n            return dataOptions;\n        })\n\n        return opt\n    }, [skillSectorData.sectors, getSector])\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => {\n        const opt = []\n        const dataSkills = getSkills.map(p => ({ label: p.name, value: p.id }))\n        dataSkills.map((v) => {\n            const dataOptions = skillSectorData.skills?.find(u => u.value === v.value);\n            if (!dataOptions) opt.push({ ...v, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })\n            return dataOptions;\n        })\n\n        return opt\n    }, [skillSectorData.skills, getSkills])\n\n    const handleChangeSector = useCallback((e) => {\n        setSkillSectorData(old => ({ ...old, sectors: e ?? [] }))\n    }, [setSkillSectorData])\n\n    const handleChangeSkills = useCallback((e) => {\n        setSkillSectorData(old => ({ ...old, skills: e ?? [] }))\n    }, [setSkillSectorData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">My Top 5 Skills</div>\n                            </Col>\n                            {/* <Col xs=\"12\">\n                                <Card className=\"shadow-sm\">\n                                    <CardBody>\n                                        {skillSectorData.skills.map((skill, i) => (\n                                            <Badge key={i} color={colorSkills[i]} className=\"text-uppercase font-sm mx-1 text-light\">{skill.label}</Badge>\n                                        ))}\n                                    </CardBody>\n                                </Card>\n                            </Col> */}\n                            <Col xs=\"12\">\n                                <Select\n                                    closeMenuOnSelect={false}\n                                    options={skills}\n                                    isClearable\n                                    isMulti\n                                    placeholder=\"Choose some skills...\"\n                                    onChange={(e) => handleChangeSkills(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={skillSectorData.skills}\n                                    styles={colourStyles}\n                                    isOptionDisabled={(option) => skillSectorData.skills.length >= 5}\n                                />\n                                {touched.skills && errors.skills && <small className=\"text-danger\">{errors.skills}</small>}\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">My top 3 Sectors</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\">\n                                        <Select\n                                            closeMenuOnSelect={false}\n                                            options={sectors}\n                                            isClearable\n                                            isMulti\n                                            placeholder=\"Choose some sectors...\"\n                                            onChange={(e) => handleChangeSector(e)}\n                                            components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                            value={skillSectorData.sectors}\n                                            styles={colourStyles}\n                                            isOptionDisabled={(option) => skillSectorData.sectors.length >= 3}\n                                        />\n                                        {touched.sectors && errors.sectors && <small className=\"text-danger\">{errors.sectors}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useRef, useState } from \"react\"\nimport { toast } from \"react-toastify\";\nimport { Card, CardBody, Row, Col, Button, Label, Input, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport noImage from '../../../../assets/illustrations/image-error.png'\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default (props) => {\n    const npwpFile = useRef(null)\n    const regIdFile = useRef(null)\n    const photoFile = useRef(null)\n    const [showPassword, setShowPassword] = useState({\n        password: false,\n        passwordConfirmation: false,\n    })\n\n    console.log(props.registrationForm)\n    const ValidationFormSchema = () => {\n        let file;\n        if (props.registrationForm === 'professional') file = { npwp: Yup.string().required().label('Npwp File'), regId: Yup.string().required().label('Registrant ID File'), photo: Yup.string().required().label('Photo Profile File') }\n        if (props.registrationForm === 'business') file = { npwp: Yup.string().required().label('Npwp File') }\n        if (props.registrationForm === 'individual') file = { npwp: Yup.string().required().label('Npwp File'), regId: Yup.string().required().label('Registrant ID File') }\n\n        return Yup.object().shape({\n            ...file,\n            password: Yup.string().required().label('Password'),\n            passwordConfirmation: Yup.string().required('Password Confirmation is a required field').oneOf([Yup.ref('password'), null], 'Passwords must match'),\n            confirmed: Yup.boolean().oneOf([true], \"You must accept the terms and conditions\"),\n            privacy: Yup.boolean().oneOf([true], \"You must accept the Pinion's User Agreement and Privacy Policy\"),\n        })\n    }\n\n    const { values: verificationData, touched, errors, setValues: setVerificationData, handleSubmit } = useFormik({\n        initialValues: {\n            npwp: '',\n            regId: '',\n            photo: '',\n            password: '',\n            passwordConfirmation: '',\n            confirmed: false,\n            privacy: false,\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.onFinishRegistration()\n        }\n    })\n\n    const onErrorImage = useCallback((e) => {\n        e.target.src = noImage;\n        e.target.onerror = null;\n    }, [])\n\n    const onChangeNpwpFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, npwp: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangeRegIdFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, regId: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangePhotoFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, photo: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangePassword = useCallback((e) => {\n        const { value } = e.target\n        setVerificationData(old => ({ ...old, password: value }))\n    }, [setVerificationData])\n\n    const onChangePasswordConfirmation = useCallback((e) => {\n        const { value } = e.target\n        setVerificationData(old => ({ ...old, passwordConfirmation: value }))\n    }, [setVerificationData])\n\n    const onChangeConfirmation = useCallback((e) => {\n        const { checked } = e.target\n        setVerificationData(old => ({ ...old, confirmed: checked }))\n    }, [setVerificationData])\n\n    const onChangePrivacy = useCallback((e) => {\n        const { checked } = e.target\n        setVerificationData(old => ({ ...old, privacy: checked }))\n    }, [setVerificationData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm verification-process-form\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Verification Process</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                        <Label>Registrant NPWP</Label>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                        <div style={{ width: '200px', height: '200px' }}>\n                                            {verificationData?.npwp?.preview && <img src={verificationData?.npwp?.preview} alt=\"npwp\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                            <input type='file' ref={npwpFile} style={{ display: 'none' }} onChange={(e) => onChangeNpwpFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                            <Button\n                                                className={`btn border-0 upload-file-button ${verificationData?.npwp?.preview && 'filled'}`}\n                                                onClick={() => npwpFile.current.click()}\n                                            >\n                                                <i className=\"fa fa-2x fa-camera\" />\n                                                <br />\n                                                <div className=\"text-center d-none d-md-block\">\n                                                    Upload\n                                                    <br />\n                                                    <small>Max. 5 MB</small>\n                                                </div>\n                                            </Button>\n                                        </div>\n                                        {touched.npwp && errors.npwp && <small className=\"text-danger\">{errors.npwp}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                            {(props.registrationForm === 'professional' || props.registrationForm === 'individual') &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Registrant ID</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <div style={{ width: '200px', height: '200px' }}>\n                                                {verificationData?.regId?.preview && <img src={verificationData?.regId?.preview} alt=\"regId\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                                <input type='file' ref={regIdFile} style={{ display: 'none' }} onChange={(e) => onChangeRegIdFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                                <Button\n                                                    className={`btn border-0 upload-file-button ${verificationData?.regId?.preview && 'filled'}`}\n                                                    onClick={() => regIdFile.current.click()}\n                                                >\n                                                    <i className=\"fa fa-2x fa-camera\" />\n                                                    <br />\n                                                    <div className=\"text-center d-none d-md-block\">\n                                                        Upload\n                                                        <br />\n                                                        <small>Max. 5 MB</small>\n                                                    </div>\n                                                </Button>\n                                            </div>\n                                            {touched.regId && errors.regId && <small className=\"text-danger\">{errors.regId}</small>}\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                            {props.registrationForm === 'professional' &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Photo Profile</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <div style={{ width: '200px', height: '200px' }}>\n                                                {verificationData?.photo?.preview && <img src={verificationData?.photo?.preview} alt=\"profile\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                                <input type='file' ref={photoFile} style={{ display: 'none' }} onChange={(e) => onChangePhotoFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                                <Button\n                                                    className={`btn border-0 upload-file-button ${verificationData?.photo?.preview && 'filled'}`}\n                                                    onClick={() => photoFile.current.click()}\n                                                >\n                                                    <i className=\"fa fa-2x fa-camera\" />\n                                                    <br />\n                                                    <div className=\"text-center d-none d-md-block\">\n                                                        Upload\n                                                        <br />\n                                                        <small>Max. 5 MB</small>\n                                                    </div>\n                                                </Button>\n                                            </div>\n                                            {touched.photo && errors.photo && <small className=\"text-danger\">{errors.photo}</small>}\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm verification-process-form\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Password</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                        <Label>Password</Label>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                        <InputGroup>\n                                            <Input type={showPassword.password ? 'text' : 'password'} name=\"password\" id=\"password\" value={verificationData.password} onChange={(e) => onChangePassword(e)} placeholder=\"******\" />\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent\">\n                                                    <FontAwesomeIcon icon={showPassword.password ? 'eye-slash' : 'eye'} onClick={() => setShowPassword(old => ({ ...old, password: !old.password }))} />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                        {touched.password && errors.password && <small className=\"text-danger\">{errors.password}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                        <Label>Password Confirmation</Label>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                        <InputGroup>\n                                            <Input type={showPassword.passwordConfirmation ? 'text' : 'password'} name=\"passwordConfirmation\" id=\"passwordConfirmation\" value={verificationData.passwordConfirmation} onChange={(e) => onChangePasswordConfirmation(e)} placeholder=\"******\" />\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent\">\n                                                    <FontAwesomeIcon icon={showPassword.passwordConfirmation ? 'eye-slash' : 'eye'} onClick={() => setShowPassword(old => ({ ...old, passwordConfirmation: !old.passwordConfirmation }))} />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                        {touched.passwordConfirmation && errors.passwordConfirmation && <small className=\"text-danger\">{errors.passwordConfirmation}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm verification-process-form\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">APPLICATION</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"confirmed\" checked={verificationData.confirmed} onChange={(e) => onChangeConfirmation(e)} />\n                                                </InputGroupText>\n                                                <Label for=\"confirmed\" className={`d-flex bg-transparent p-0 m-0 align-items-center ${touched.confirmed && errors.confirmed && 'text-danger'}`} style={{ whiteSpace: 'normal' }}>\n                                                    I have reviewed and confirmed that this data is correct\n                                                </Label>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"privacy\" checked={verificationData.privacy} onChange={(e) => onChangePrivacy(e)} />\n                                                </InputGroupText>\n                                                <Label for=\"privacy\" className={`d-flex bg-transparent p-0 m-0 align-items-center ${touched.privacy && errors.privacy && 'text-danger'}`} style={{ whiteSpace: 'normal' }}>\n                                                    I confirm that I have read, consent and agree to Pinion's User Agreement and Privacy Policy\n                                                </Label>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row >\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport Select from 'react-select';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\n\n\nexport default (props) => {\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            businessName: Yup.string().required().label('Business Name'),\n            sector: Yup.string().required().label('Sector'),\n            companySize: Yup.string().required().oneOf(['<10', '11-50', '50-100', '100-500', '>500']).label('Company Size'),\n            aboutUs: Yup.string().required().label('About Us'),\n            npwpNumber: Yup.string().required().label('NPWP Number'),\n            address: Yup.string().required().label('Address'),\n            province: Yup.string().required().label('Province'),\n            phone: Yup.string().required().label('Phone'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit } = useFormik({\n        initialValues: {\n            businessName: '',\n            sector: '',\n            companySize: '',\n            aboutUs: '',\n            npwpNumber: '',\n            address: '',\n            province: '',\n            phone: '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><CompanyInformationForm companyInformationData={values} setCompanyInformationData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><ContactInformationForm contactData={values} setContactData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n\nconst CompanyInformationForm = ({ companyInformationData, setCompanyInformationData, touched, errors }) => {\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeBusinessName = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, businessName: value }))\n    }, [setCompanyInformationData])\n\n    const handleChangecompanySize = useCallback((e) => {\n        const { value, checked } = e.target;\n        setCompanyInformationData(old => ({ ...old, companySize: checked ? value : '' }))\n    }, [setCompanyInformationData])\n\n    const handleChangeSector = useCallback((e) => {\n        setCompanyInformationData(old => ({ ...old, sector: e }))\n    }, [setCompanyInformationData])\n\n    const handleChangeNpwpNumber = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, npwpNumber: value }))\n    }, [setCompanyInformationData])\n\n    const handleChangeAboutUs = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, aboutUs: value }))\n    }, [setCompanyInformationData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"businessName\">Business Entity</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"businessName\" id=\"businessName\" value={companyInformationData.businessName} onChange={(e) => handleChangeBusinessName(e)} placeholder=\"Business Entity Field...\" />\n                                {touched.businessName && errors.businessName && <small className=\"text-danger\">{errors.businessName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"sector\">Sector</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={sectors}\n                                    placeholder=\"Choose a socter...\"\n                                    value={companyInformationData.sector}\n                                    onChange={(e) => handleChangeSector(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"companySize\">Company Size</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size1\" value=\"<10\" checked={companyInformationData.companySize === \"<10\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size1\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            {\"<10\"}\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size2\" value=\"11-50\" checked={companyInformationData.companySize === \"11-50\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size2\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            11-50\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size3\" value=\"50-100\" checked={companyInformationData.companySize === \"50-100\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size3\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            50-100\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size4\" value=\"100-500\" checked={companyInformationData.companySize === \"100-500\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size4\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            100-500\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size1\" value=\">500\" checked={companyInformationData.companySize === \">500\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size1\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            {\">500\"}\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.companySize && errors.companySize && <small className=\"text-danger\">{errors.companySize}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"aboutUs\">About Us</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"aboutUs\"\n                                    id=\"aboutUs\"\n                                    className=\"form-control\"\n                                    placeholder=\"About Us Field...\"\n                                    value={companyInformationData.aboutUs}\n                                    onChange={(e) => handleChangeAboutUs(e)}\n                                />\n                                {touched.aboutUs && errors.aboutUs && <small className=\"text-danger\">{errors.aboutUs}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"npwpNumber\">NPWP Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"npwpNumber\" id=\"npwpNumber\" value={companyInformationData.npwpNumber} onChange={(e) => handleChangeNpwpNumber(e)} placeholder=\"NPWP Number Field...\" />\n                                {touched.npwpNumber && errors.npwpNumber && <small className=\"text-danger\">{errors.npwpNumber}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nconst ContactInformationForm = ({ contactData, setContactData, touched, errors }) => {\n    const { data: getProvince } = useDataProvinces();\n    const province = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const handleChangeProvince = useCallback((e) => {\n        setContactData(old => ({ ...old, province: e }))\n    }, [setContactData])\n\n    const handleChangeAddress = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, address: value }))\n    }, [setContactData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, phone: value }))\n    }, [setContactData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">CONTACT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"address\">Address</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"address\"\n                                    id=\"address\"\n                                    className=\"form-control\"\n                                    placeholder=\"Address Field...\"\n                                    value={contactData.address}\n                                    onChange={(e) => handleChangeAddress(e)}\n                                />\n                                {touched.address && errors.address && <small className=\"text-danger\">{errors.address}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"province\">Province</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={province}\n                                    placeholder=\"Choose province...\"\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={contactData.province}\n                                    onChange={(e) => handleChangeProvince(e)}\n                                />\n                                {touched.province && errors.province && <small className=\"text-danger\">{errors.province}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" value={contactData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Phone Field...\" />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\"\nimport { Card, CardBody, Row, Col, Input, Label } from \"reactstrap\";\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport Select from 'react-select';\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\n\n\nexport default (props) => {\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            firstName: Yup.string().required().label('First Name'),\n            lastName: Yup.string().required().label('Last Name'),\n            email: Yup.string().required().email().label('Email'),\n            phone: Yup.string().required().label('Phone'),\n            idType: Yup.string().required().label('ID Type'),\n            idNumber: Yup.string().required().label('ID Number'),\n            jobTitle: Yup.string().required().label('Job Title'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit } = useFormik({\n        initialValues: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            phone: '',\n            idType: { label: 'KTP', value: 'ktp' },\n            idNumber: '',\n            jobTitle: '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><RegistrantInformationForm registrantData={values} setRegistrantData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n\nexport const RegistrantInformationForm = ({ registrantData, setRegistrantData, touched, errors }) => {\n    const idType = [\n        { label: 'KTP', value: 'ktp' },\n    ]\n\n    const handleChangeFirstName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, firstName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeLastName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, lastName: value }))\n    }, [setRegistrantData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, phone: value }))\n    }, [setRegistrantData])\n\n    const handleChangeEmail = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, email: value }))\n    }, [setRegistrantData])\n\n    const handleChangeIdType = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, idType: e }))\n    }, [setRegistrantData])\n\n    const handleChangeIdNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, idNumber: value }))\n    }, [setRegistrantData])\n\n    const handleChangeJobTitle = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, jobTitle: value }))\n    }, [setRegistrantData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"firstName\">First Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={registrantData.firstName} onChange={(e) => handleChangeFirstName(e)} placeholder=\"First Name Field...\" />\n                                {touched.firstName && errors.firstName && <small className=\"text-danger\">{errors.firstName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"lastName\">Last Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={registrantData.lastName} onChange={(e) => handleChangeLastName(e)} placeholder=\"Last Name Field...\" />\n                                {touched.lastName && errors.lastName && <small className=\"text-danger\">{errors.lastName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"email\">Email</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={registrantData.email} onChange={(e) => handleChangeEmail(e)} placeholder=\"Email Field...\" />\n                                {touched.email && errors.email && <small className=\"text-danger\">{errors.email}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" value={registrantData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Phone Field...\" />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idType\">ID Type</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={idType}\n                                    placeholder=\"Choose id type...\"\n                                    value={registrantData.idType}\n                                    onChange={(e) => handleChangeIdType(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.idType && errors.idType && <small className=\"text-danger\">{errors.idType}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idNumber\">ID Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"idNumber\" id=\"idNumber\" value={registrantData.idNumber} onChange={(e) => handleChangeIdNumber(e)} placeholder=\"ID Number Field...\" />\n                                {touched.idNumber && errors.idNumber && <small className=\"text-danger\">{errors.idNumber}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"jobTitle\">Job Title</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"jobTitle\" id=\"jobTitle\" value={registrantData.jobTitle} onChange={(e) => handleChangeJobTitle(e)} placeholder=\"Job Title Field...\" />\n                                {touched.jobTitle && errors.jobTitle && <small className=\"text-danger\">{errors.jobTitle}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card >\n    );\n}\n","import React, { useEffect, useState } from \"react\"\n// import Select from 'react-select';\nimport {\n  translate,\n} from 'react-switch-lang';\nimport PageLayout from \"../../LandingPage/PageLayout\";\nimport StepWizard from 'react-step-wizard';\nimport { NavigationDot } from \"./Components/Navigation\";\nimport RegistrantForm from \"./Forms/RegistrantForm\";\nimport EducationForm from \"./Forms/EducationForm\";\nimport WorkExprerienceForm from \"./Forms/WorkExprerienceForm\";\nimport ProjectExperienceForm from \"./Forms/ProjectExperienceForm\";\nimport SkillSectorForm from \"./Forms/SkillSectorForm\";\nimport DocumentVerificationForm from \"./Forms/DocumentVerificationForm\";\nimport { useFormik } from \"formik\";\nimport { Button, Col, Modal, ModalBody, Row, Spinner } from \"reactstrap\";\nimport CompanyInformationForm from \"./Forms/CompanyInformationForm\";\nimport RegistrantCompanyForm from \"./Forms/RegistrantCompanyForm\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport request from \"../../../utils/request\";\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\n\n\nfunction Register(props) {\n  const location = useLocation();\n  const history = useHistory();\n  const getSearchLocation = new URLSearchParams(location.search);\n  const registrationForm = getSearchLocation.get('form')\n  const [modalSubmitForm, setModalSubmitForm] = useState(false);\n  const [instance, setInstance] = useState(null);\n\n  const { values: registrationData, setValues: setRegistrationData, handleSubmit, isSubmitting } = useFormik({\n    initialValues: {\n      companyInformationForm: '',\n      registrantForm: '',\n      educationForm: '',\n      workExperienceForm: '',\n      projectExperienceForm: '',\n      skillSectorForm: '',\n      verificationForm: '',\n    },\n    // validationSchema: ValidationFormSchema,\n    onSubmit: (values, { setSubmitting, setErrors }) => {\n      setSubmitting(true)\n      if (!validationForm(instance, registrationForm, registrationData)) setModalSubmitForm(false)\n\n      let formData = new FormData()\n      formData.append('role', registrationForm === 'business' ? 'company' : registrationForm)\n      formData.append('email', values.registrantForm.email)\n      formData.append('password', values.verificationForm.password)\n      formData.append('firstName', values.registrantForm.firstName)\n      formData.append('lastName', values.registrantForm.lastName)\n      formData.append('phoneNumber', values.registrantForm.phone)\n      formData.append('identityType', values.registrantForm.idType.value)\n      formData.append('identityNumber', values.registrantForm.idNumber)\n\n      if (registrationForm === 'business') {\n        formData.append('clientIdSector', values.companyInformationForm.sector.value)\n        formData.append('companyName', values.companyInformationForm.businessName)\n        formData.append('companySize', values.companyInformationForm.companySize)\n        formData.append('about', values.companyInformationForm.aboutUs)\n        formData.append('npwp', values.companyInformationForm.npwpNumber)\n        formData.append('address', values.companyInformationForm.address)\n        formData.append('idProvince', values.companyInformationForm.province.value)\n        formData.append('companyPhoneNumber', values.companyInformationForm.phone)\n        formData.append('jobTitle', values.registrantForm.jobTitle)\n      } else {\n        formData.append('idProvince', values.registrantForm.province.value)\n        formData.append('address', values.registrantForm.address)\n        formData.append('dob', moment(values.registrantForm.dateOfBirth).format('YYYY-MM-DD'))\n        formData.append('gender', values.registrantForm.gender)\n        formData.append('npwp', values.registrantForm.npwpNumber)\n\n        if (registrationForm === 'individual') {\n          formData.append('clientIdSector', values.registrantForm.sector.value)\n        }\n\n        if (registrationForm === 'professional') {\n          formData.append('educations', JSON.stringify(values.educationForm.map(v => ({ idSchool: v.school.value, idEducationDegree: v.degree.value, idEducationField: v.education.value, graduationYear: v.graduationYear.value }))))\n          formData.append('workExperiences', JSON.stringify(values.workExperienceForm.map(v => ({ idProvince: v.location.value, idSector: v.sector.value, jobTitle: v.job, companyName: v.company, employmentType: v.employementType.value, startDate: moment(v.startDate).format('YYYY-MM-DD'), endDate: moment(v.endDate).format('YYYY-MM-DD'), isStillPresent: v.endDatePresent, skills: v.skills.map(s => ({ idSkill: s.value })) }))))\n          formData.append('projectExperiences', JSON.stringify(values.projectExperienceForm.map(v => ({ idProvince: v.province.value, idCountry: v.country.value, idSector: v.sector.value, clientName: v.client, projectName: v.projectName, projectRole: v.projectRole, description: v.description, startDate: moment(v.startDate).format('YYYY-MM-DD'), endDate: moment(v.endDate).format('YYYY-MM-DD'), skills: v.skills.map(s => ({ idSkill: s.value })) }))))\n          formData.append('skills', JSON.stringify(values.skillSectorForm.skills.map(v => ({ idSkill: v.value }))))\n          formData.append('sectors', JSON.stringify(values.skillSectorForm.sectors.map(v => ({ idSector: v.value }))))\n        }\n      }\n\n      if (values.verificationForm.photo) formData.append('avatar', values.verificationForm.photo.file, values.verificationForm.photo.file.name)\n      if (values.verificationForm.npwp) formData.append('npwp', values.verificationForm.npwp.file, values.verificationForm.npwp.file.name)\n      if (values.verificationForm.regId) formData.append('identity', values.verificationForm.regId.file, values.verificationForm.regId.file.name)\n      request.post(`v1/auth/signup`, formData)\n        .then(() => {\n          toast.success('Register success')\n          setModalSubmitForm(false)\n          history.push('/')\n        })\n        .catch((error) => toast.error(error.response.data.message))\n        .finally(() => setSubmitting(false))\n    }\n  })\n\n  useEffect(() => {\n    if (instance) {\n      validationForm(instance, registrationForm, registrationData)\n    }\n    // eslint-disable-next-line\n  }, [instance, registrationForm])\n\n  const handleFinishRegistration = () => {\n    setModalSubmitForm(!modalSubmitForm)\n  }\n\n  // useEffect(() => {\n  //   if (registrationForm === 'professional') localStorage.setItem(\"registrationProfessional\", JSON.stringify(registrationData))\n  //   if (registrationForm === 'business') localStorage.setItem(\"registrationBusiness\", JSON.stringify(registrationData))\n  //   if (registrationForm === 'individual') localStorage.setItem(\"registrationIndividual\", JSON.stringify(registrationData))\n  // }, [registrationData, registrationForm])\n\n  return (\n    <PageLayout>\n      <StepWizard\n        isHashEnabled\n        className=\"register-form\"\n        nav={<NavigationDot role={registrationForm} />}\n        instance={setInstance}\n        transitions={{\n          enterRight: ``,\n          enterLeft: ``,\n          exitRight: ``,\n          exitLeft: ``,\n          intro: ``,\n        }}\n      >\n        {registrationForm === 'professional' && <RegistrantForm step={1} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n        {registrationForm === 'professional' && <EducationForm step={2} registrationForm={registrationForm} hashKey=\"education\" stepName=\"education\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, educationForm: data }))} />}\n        {registrationForm === 'professional' && <WorkExprerienceForm step={3} registrationForm={registrationForm} hashKey=\"workExperience\" stepName=\"workExperience\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, workExperienceForm: data }))} />}\n        {registrationForm === 'professional' && <ProjectExperienceForm step={4} registrationForm={registrationForm} hashKey=\"projectExperience\" stepName=\"projectExperience\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, projectExperienceForm: data }))} />}\n        {registrationForm === 'professional' && <SkillSectorForm step={5} registrationForm={registrationForm} hashKey=\"skillSector\" stepName=\"skillSector\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, skillSectorForm: data }))} />}\n        {registrationForm === 'professional' && <DocumentVerificationForm step={6} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n\n        {registrationForm === 'business' && <CompanyInformationForm step={1} registrationForm={registrationForm} hashKey=\"companyInformation\" stepName=\"companyInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, companyInformationForm: data }))} />}\n        {registrationForm === 'business' && <RegistrantCompanyForm step={2} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n        {registrationForm === 'business' && <DocumentVerificationForm step={3} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n\n        {registrationForm === 'individual' && <RegistrantForm step={1} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n        {registrationForm === 'individual' && <DocumentVerificationForm step={2} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n      </StepWizard>\n      <Modal isOpen={modalSubmitForm} centered toggle={handleFinishRegistration}>\n        <ModalBody className=\"p-5\">\n          <Row>\n            <Col xs=\"12\" className=\"mb-5\">\n              Are you sure with your registration data?\n            </Col>\n            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n              <Button color=\"secondary\" className=\"mr-2\" onClick={handleFinishRegistration}>Cancel</Button>\n              <Button color=\"primary\" disabled={isSubmitting} onClick={handleSubmit}>\n                {isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : 'Submit'}\n              </Button>\n            </Col>\n          </Row>\n        </ModalBody>\n      </Modal>\n    </PageLayout>\n  );\n}\n\nconst validationForm = (instance, registrationForm, registrationData) => {\n  if (registrationForm === 'professional') {\n    if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n    if (!registrationData.educationForm) { instance.goToNamedStep('education'); return false; }\n    if (!registrationData.workExperienceForm) { instance.goToNamedStep('workExperience'); return false; }\n    if (!registrationData.projectExperienceForm) { instance.goToNamedStep('projectExperience'); return false; }\n    if (!registrationData.skillSectorForm) { instance.goToNamedStep('skillSector'); return false; }\n    if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n  }\n  if (registrationForm === 'business') {\n    if (!registrationData.companyInformationForm) { instance.goToNamedStep('companyInformation'); return false; }\n    if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n    if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n  }\n  if (registrationForm === 'individual') {\n    if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n    if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n  }\n  return true;\n}\nexport default translate(Register);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport { Provider } from \"react-redux\";\n\nimport OfflineIndicator from \"./components/OfflineIndicator\";\n\n//Route\nimport store from \"./store\";\nimport Layout from \"./containers/DefaultLayout/Layout\";\nimport langUtils from \"./utils/language/index\";\nimport { setLocale as setValidationLocale } from \"yup\";\n// import validationLocaleID from \"./utils/yup/locales/id\";\nimport validationLocaleDefault from \"yup/es/locale\";\nimport moment from \"moment\";\nimport momentLocales from './utils/language/moment-locales';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport Home from \"./views/LandingPage/Home\";\nimport FAQ from \"./views/LandingPage/FAQ\";\nimport Contact from \"./views/LandingPage/ContactUs\";\nimport About from \"./views/LandingPage/About\";\nimport AuthRoute from \"./containers/DefaultLayout/AuthRoute\";\nimport Register from \"./views/Auth/Register/Register\";\n\nlibrary.add(fab, fas, far)\n\nlangUtils.onLanguageChanged((lang) => {\n  // if (lang.toLowerCase() === \"id\") {\n  //   setValidationLocale(validationLocaleID);\n  // } else {\n  // }\n  setValidationLocale(validationLocaleDefault);\n});\nlangUtils.onLanguageChanged((lang) => {\n  const momentLocaleDefinition = momentLocales['en'];\n  if (momentLocaleDefinition) {\n    moment.locale('en', momentLocaleDefinition);\n  } else {\n    moment.locale('en');\n  }\n});\nlangUtils.init();\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <OfflineIndicator />\n\n      <Router>\n        <Switch>\n          <AuthRoute path=\"/\" type=\"guest\" exact>\n            <Home />\n          </AuthRoute>\n          <AuthRoute path=\"/about\" type=\"guest\" exact>\n            <About />\n          </AuthRoute>\n          <AuthRoute path=\"/faq\" type=\"guest\" exact>\n            <FAQ />\n          </AuthRoute>\n          <AuthRoute path=\"/contact\" type=\"guest\" exact>\n            <Contact />\n          </AuthRoute>\n          <AuthRoute path=\"/register\" type=\"guest\" exact>\n            <Register />\n          </AuthRoute>\n\n          <AuthRoute type=\"private\" exact component={Layout} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n","import './polyfill';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// import * as Sentry from '@sentry/react';\n// import { Integrations } from '@sentry/tracing';\nimport request from \"./utils/request\";\nimport { SWRConfig } from \"swr\";\n// import { t } from 'react-switch-lang';\n\n// if (process.env.NODE_ENV === 'production') {\n//     Sentry.init({\n//         environment: process.env.NODE_ENV,\n//         ignoreErrors: ['Request failed with status code 403', 'Request failed with status code 401', 'Request failed with status code 422'],\n//         dsn: \"https://2fcf451c3d9c4fbbb7e8bc1a84c77c55@o487735.ingest.sentry.io/5557540\",\n//         autoSessionTracking: true,\n//         integrations: [\n//             new Integrations.BrowserTracing()\n//         ],\n//         tracesSampleRate: 1.0,\n//     });\n// }\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Router><SWRConfig value={{fetcher: (...args) => request.get(...args)}} ><App /></SWRConfig></Router>, rootElement);\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/sectors')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import React, { useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route, useLocation } from \"react-router\";\nimport { Spinner } from \"reactstrap\";\nimport { getMe } from \"../../actions/auth\";\n// import LandingPage from \"../views/LandingPage/LandingPage\";\n\n// const Forbidden = () => <div><center><h1>403 Sorry, this page is forbidden.</h1></center></div>;\n\nconst AuthRoute = ({ isLoggedIn, user, token, type, getMe, ...props }) => {\n  const shouldAuthenticate = useMemo(() => ['guest', 'private'].includes(type), [type]);\n  const location = useLocation();\n\n  if (shouldAuthenticate) {\n    if (user === null && token) {\n      getMe();\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            background: \"rgba(255,255,255, 0.5)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Spinner style={{ width: 48, height: 48 }} />\n        </div>\n      );\n    }\n\n    if (type === \"guest\" && isLoggedIn === true) {\n      const search = new URLSearchParams(location.search);\n      if (location.pathname === '/login') {\n        if (search.get('to')) {\n          return <Redirect to={search.get('to')} />\n        }\n      }\n      return <Redirect to={'/home'} />;\n    }\n    if (type === \"private\" && isLoggedIn === false) {\n      const searchParams = new URLSearchParams(location.search);\n      if (location.pathname !== '/login') {\n        searchParams.set('to', location.pathname);\n      }\n      // return <Redirect to={'/login?' + searchParams.toString()} />;\n      return <Redirect to={'/'} />;\n    }\n  }\n\n  return <Route {...props} />;\n};\n\nconst mapStateToProps = ({ user, token }) => ({\n  isLoggedIn: user != null,\n  user,\n  token,\n});\n\nexport default connect(mapStateToProps, { getMe })(AuthRoute);\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/provinces')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/skills')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","// action types\nexport const API_REQUEST_LOGIN = \"API_REQUEST_LOGIN\";\nexport const API_REQUEST_LOGOUT = \"API_REQUEST_LOGOUT\";\nexport const API_SUCCESS = \"API_SUCCESS\";\nexport const API_ERROR = \"API_ERROR\";\nexport const CANCEL_API_REQUEST = \"CANCEL_API_REQUEST\";\n\n// action creators\nexport const apiRequestLogin = ({ url, method, data }) => {\n    return {\n        type: API_REQUEST_LOGIN,\n        meta: { url, method, data }\n    };\n};\n\nexport const apiRequestLogout = ({ url, method }) => {\n    return {\n        type: API_REQUEST_LOGOUT,\n        meta: { url, method }\n    };\n};\n\nexport const cancelApiRequest = () => {\n    return {\n        type: CANCEL_API_REQUEST\n    };\n};\n\nexport const apiSuccess = ({ response }) => ({\n    type: API_SUCCESS,\n    payload: response\n});\n\nexport const apiError = ({ error }) => ({\n    type: API_ERROR,\n    payload: error\n});","export const SET_LOADER = \"SET_LOADER\";\n\nexport const setLoader = ( isLoading ) => ({\n    type: SET_LOADER,\n    payload: isLoading\n});\n","import { useSelector } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { appMiddleware } from \"./middlewares/app\";\nimport { apiMiddleware } from \"./middlewares/core\";\nimport reducer from './reducer'\n\nconst createStoreWithMiddleware = applyMiddleware(\n    appMiddleware,\n    apiMiddleware\n)(createStore);\n\nconst store = createStoreWithMiddleware(reducer);\n\nexport function useAuthUser() {\n    const user = useSelector(state => state.user);\n    return user;\n}\n\nexport function useToken() {\n    const token = useSelector(state => state.token);\n    return token;\n}\n\nexport default store;\n","import { apiRequestLogin, apiRequestLogout } from \"../actions/api\";\nimport { LOGIN, GET_ME, setUser, LOGOUT } from \"../actions/auth\";\nimport request from \"../utils/request\";\n\nexport const appMiddleware = ({ dispatch }) => next => action => {\n    next(action);\n    switch (action.type) {\n        case LOGOUT: {\n            next(\n                apiRequestLogout({\n                    url: `auth/logout`,\n                    method: \"POST\"\n                })\n            );\n            break;\n        }\n        case LOGIN: {\n            next(\n                apiRequestLogin({\n                    url: `v1/auth/signin`,\n                    method: 'POST',\n                    data: action.payload\n                })\n            );\n            break;\n        }\n        case GET_ME: {\n            request.get(`v1/user/me`)\n                .then(response => {\n                    dispatch(setUser(response.data))\n                })\n            break;\n        }\n        default:\n            break;\n    }\n};\n","import { API_REQUEST_LOGIN, API_REQUEST_LOGOUT, apiError, apiSuccess } from \"../actions/api\";\nimport { setLoader } from \"../actions/ui\";\nimport { toast } from 'react-toastify';\nimport request from \"../utils/request\";\nimport { LOGOUT } from \"../actions/auth\";\nexport const apiMiddleware = ({ dispatch }) => next => action => {\n    next(action);\n\n    if (action.type === API_REQUEST_LOGIN) {\n        dispatch(setLoader(true));\n        const { url, data } = action.meta;\n        request.post(url, data)\n            .then(({ data }) => dispatch(apiSuccess({ response: data })))\n            .catch((error) => {\n                dispatch(apiError({ error }));\n                toast.error(error.response.data.message, { autoClose: 3000 });\n            }).finally(() => {\n                dispatch(setLoader(false))\n            });\n    }\n\n    if (action.type === API_REQUEST_LOGOUT) {\n        dispatch(setLoader(true));\n        const { url, data } = action.meta;\n        request.post(url, data)\n            .then(() => dispatch(LOGOUT))\n            .catch(error => {\n                dispatch(apiError({ error }));\n            }).finally(() => {\n                dispatch(setLoader(false))\n                localStorage.removeItem(\"session\");\n            });\n    }\n};\n","import { SET_LOADER } from \"./actions/ui\";\nimport { API_SUCCESS, API_ERROR } from \"./actions/api\";\nimport { LOGOUT, SET_USER } from \"./actions/auth\";\n\nexport default (\n  state = {\n    user: null,\n    isLoading: false,\n    error: null,\n    token: localStorage.getItem(\"session\"),\n  },\n  action\n) => {\n  switch (action.type) {\n    case API_SUCCESS:\n      localStorage.setItem(\"session\", action.payload.data.token);\n      return {\n        ...state,\n        user: action.payload.data,\n        token: action.payload.data.token,\n        error: null,\n        isLoading: false\n      };\n    case API_ERROR:\n      return { ...state, error: \"Login Salah\", isLoading: false };\n    case SET_LOADER:\n      return { ...state, isLoading: action.payload.data };\n    case LOGOUT:\n      return { ...state, user: null, error: null, token: null };\n    case SET_USER:\n      return { ...state, user: action.payload.data };\n    default:\n      return state;\n  }\n};\n"],"sourceRoot":""}