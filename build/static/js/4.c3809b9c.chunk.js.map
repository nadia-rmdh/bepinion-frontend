{"version":3,"sources":["views/Menu/Clients/ClientDashboard.js"],"names":["localizer","momentLocalizer","moment","ProjectStatus","data","mutate","useState","modalReopen","setModalReopen","className","xs","addonType","type","id","hover","map","p","i","key","to","projectStatus","idProject","projectName","professionalList","length","idProfessionalUserMeta","firstName","lastName","completeDate","format","replace","color","size","block","onClick","isOpen","centered","toggle","request","put","isReopen","then","res","toast","success","catch","err","error","finally","ProjectStatistics","md","style","whiteSpace","fontSize","width","height","posted","onGoing","close","MyCalendar","events","popup","defaultDate","Date","messages","previous","next","defaultView","views","Trends","value","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","legend","tooltips","mode","responsive","responsiveAnimationDuration","intersect","onHover","event","chartElement","target","cursor","Finance","lg","fontWeight","totalAR","averageAR","estimateAR","ClientDashboard","user","useAuthUser","useSWR","getData","loading","useMemo","position","top","right","bottom","left","background","display","justifyContent","alignItems","name","registrantInformation","projectList","projectStatistics","title","start","end","financeStatistics"],"mappings":"wWAWMA,EAAYC,YAAgBC,KAyGlC,IAAMC,EAAgB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAAa,EACFC,mBAAS,MADP,mBACjCC,EADiC,KACpBC,EADoB,KAiBxC,OACI,kBAAC,IAAD,CAAMC,UAAU,aACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAG,KAAKD,UAAU,oBACnB,+CAEJ,kBAAC,IAAD,CAAKC,GAAG,KAAKD,UAAU,eACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBE,UAAU,WACvB,kBAAC,IAAD,CAAgBF,UAAU,gCACtB,kBAAC,IAAD,CAAaG,KAAK,WAAWC,GAAG,sBAGxC,yBAAKJ,UAAU,gDAAf,SAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBE,UAAU,WACvB,kBAAC,IAAD,CAAgBF,UAAU,gCACtB,kBAAC,IAAD,CAAaG,KAAK,WAAWC,GAAG,sBAGxC,yBAAKJ,UAAU,gDAAf,iBAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBE,UAAU,WACvB,kBAAC,IAAD,CAAgBF,UAAU,gCACtB,kBAAC,IAAD,CAAaG,KAAK,WAAWC,GAAG,sBAGxC,yBAAKJ,UAAU,gDAAf,YAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBE,UAAU,WACvB,kBAAC,IAAD,CAAgBF,UAAU,gCACtB,kBAAC,IAAD,CAAaG,KAAK,WAAWC,GAAG,sBAGxC,yBAAKJ,UAAU,gDAAf,aAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBE,UAAU,WACvB,kBAAC,IAAD,CAAgBF,UAAU,gCACtB,kBAAC,IAAD,CAAaG,KAAK,WAAWC,GAAG,sBAGxC,yBAAKJ,UAAU,gDAAf,cAKR,kBAAC,IAAD,CAAKC,GAAG,KAAKD,UAAU,QACnB,kBAAC,IAAD,CAAOK,OAAK,EAACL,UAAU,eACnB,+BACI,4BACI,4CACA,iDACA,4CACA,+CACA,wCAGR,sCACKL,QADL,IACKA,OADL,EACKA,EAAMW,KAAI,SAACC,EAAGC,GAAJ,aACP,wBAAIC,IAAKD,GACL,4BACI,kBAAC,IAAD,CAAME,GAAE,UAAyB,aAApBH,EAAEI,cAAF,mBAA6CJ,EAAEK,UAA/C,4BAA8EL,EAAEK,UAAhF,oBACRL,EAAEM,cAGX,4BACKN,EAAEO,iBAAiBC,OAAS,EACzB,kBAAC,IAAD,CAAML,GAAE,wBAAmBH,EAAEO,iBAAiB,GAAGE,yBAC5CT,EAAEO,iBAAiB,GAAGG,UAD3B,IACuCV,EAAEO,iBAAiB,GAAGI,UAE3D,KAGV,4BAAKzB,IAAM,iBAACc,QAAD,IAACA,OAAD,EAACA,EAAGY,oBAAJ,QAAoB,IAAIC,OAAO,eAC1C,4BAAK3B,IAAOc,EAAEY,cAAcC,OAAO,eACnC,wBAAIpB,UAAU,kBACTO,EAAEI,cAAcU,QAAQ,IAAK,KAEN,YAApBd,EAAEI,cACI,kBAAC,IAAD,CAAQW,MAAM,iBAAiBC,KAAK,KAAKC,OAAK,EAACxB,UAAU,kBAAkByB,QAAS,kBAAM1B,EAAeQ,EAAEK,aAA3G,UACA,cAStC,kBAAC,IAAD,CAAOc,OAAQ5B,EAAa6B,UAAQ,EAACC,OAAQ,kBAAM7B,GAAgBD,KAC/D,kBAAC,IAAD,CAAWE,UAAU,OACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAG,MACJ,yBAAKD,UAAU,QAAf,kDAIJ,kBAAC,IAAD,CAAKC,GAAG,KAAKD,UAAU,8BACnB,kBAAC,IAAD,CAAQsB,MAAM,YAAYtB,UAAU,OAAOyB,QAAS,kBAAM1B,GAAgBD,KAA1E,UACA,kBAAC,IAAD,CAAQwB,MAAM,UAAUtB,UAAU,kBAAkByB,QA9H3D,WACjBI,IAAQC,IAAR,qBAA0BhC,EAA1B,WAAgD,CAC5CiC,UAAU,IAETC,MAAK,SAAAC,GACFC,IAAMC,QAAQ,uBACdvC,OAEHwC,OAAM,SAAAC,GACHH,IAAMI,MAAM,oBAEfC,SAAQ,kBAAMxC,GAAgBD,QAmHX,iBAU1B0C,EAAoB,SAAC,GAAc,IAAZ7C,EAAW,EAAXA,KACzB,OACI,kBAAC,IAAD,CAAMK,UAAU,kBACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAG,KAAKD,UAAU,oBACnB,mDAEJ,kBAAC,IAAD,CAAKC,GAAG,KAAKD,UAAU,sCACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAG,KAAKwC,GAAG,KACZ,uBAAGC,MAAO,CAAEC,WAAY,WAAxB,gCACA,yBAAK3C,UAAU,gCAAgC0C,MAAO,CAAEE,SAAU,SAAU,kBAAC,IAAD,CAAOtB,MAAM,YAAYtB,UAAU,gCAAgC0C,MAAO,CAAEG,MAAO,GAAIC,OAAQ,KAAOnD,EAAKoD,UAE3L,kBAAC,IAAD,CAAK9C,GAAG,KAAKwC,GAAG,KACZ,uBAAGC,MAAO,CAAEC,WAAY,WAAxB,6BACA,yBAAK3C,UAAU,gCAAgC0C,MAAO,CAAEE,SAAU,SAAU,kBAAC,IAAD,CAAOtB,MAAM,YAAYtB,UAAU,gCAAgC0C,MAAO,CAAEG,MAAO,GAAIC,OAAQ,KAAOnD,EAAKqD,WAE3L,kBAAC,IAAD,CAAK/C,GAAG,KAAKwC,GAAG,KACZ,uBAAGC,MAAO,CAAEC,WAAY,WAAxB,gCACA,yBAAK3C,UAAU,gCAAgC0C,MAAO,CAAEE,SAAU,SAAU,kBAAC,IAAD,CAAOtB,MAAM,YAAYtB,UAAU,gCAAgC0C,MAAO,CAAEG,MAAO,GAAIC,OAAQ,KAAOnD,EAAKsD,eAUjNC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACI,kBAAC,IAAD,CAAMnD,UAAU,8BACZ,kBAAC,IAAD,CAAU0C,MAAO,CAAEI,OAAQ,SACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK7C,GAAG,MACJ,wBAAID,UAAU,QAAd,eACA,kBAAC,IAAD,CACIoD,OAAO,EACP7D,UAAWA,EACX8D,YAAa,IAAIC,KACjBC,SAAU,CACNC,SAAU,uBAAGxD,UAAU,qBACvByD,KAAM,uBAAGzD,UAAU,uBAEvB0D,YAAY,QACZC,MAAO,CAAC,QAAS,UACjBR,OAAQA,EACRT,MAAO,CAAEI,OAAQ,eAmCvCc,EAAS,WAuDX,OACI,kBAAC,IAAD,CAAM5D,UAAU,8BACZ,kBAAC,IAAD,CAAU0C,MAAO,CAAEI,OAAQ,SACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK7C,GAAG,MACJ,wBAAID,UAAU,QAAd,WAEJ,kBAAC,IAAD,CAAKC,GAAG,MACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKA,GAAG,IAAID,UAAU,gBAClB,iDACA,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAUsB,MAAM,OAAOuC,MAAO,IAC1B,uBAAGnB,MAAO,CAAEpB,MAAO,SAAW,GAA9B,QAIZ,kBAAC,IAAD,CAAKrB,GAAG,IAAID,UAAU,QAClB,wDACA,yBAAK0C,MAAO,CAAEE,SAAU,SAAxB,SACA,2BAAO5C,UAAU,cAAjB,mBAEJ,kBAAC,IAAD,CAAKC,GAAG,IAAID,UAAU,QAClB,gDACA,yBAAK0C,MAAO,CAAEE,SAAU,SAAxB,OACA,2BAAO5C,UAAU,cAAjB,kBAEJ,kBAAC,IAAD,CAAKC,GAAG,IAAID,UAAU,QAClB,uCACA,6BACI,kBAAC,IAAD,CAAKL,KApFlB,CACfmE,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEC,SAAU,CACN,CACIC,MAAO,SACPrE,KAAM,CAAC,GAAI,GAAI,EAAG,EAAG,EAAG,GACxBsE,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEJC,YAAa,CACT,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,YAAa,KA8D8BC,QAAS,CAC5BC,qBAAqB,EACrBC,QAAQ,EACRC,SAAU,CACNC,KAAM,SAEVC,YAAY,EACZC,4BAA6B,IAC7BrE,MAAO,CACHsE,WAAW,EACXH,KAAM,SAEVI,QAAS,SAACC,EAAOC,GACbD,EAAME,OAAOrC,MAAMsC,OAASF,EAAa,GACnC,UACA,YAEXhC,OAAQ,QAGnB,kBAAC,IAAD,CAAK7C,GAAG,IAAID,UAAU,QAClB,wCACA,6BACI,kBAAC,IAAD,CAAKL,KAhFjB,CAChBmE,OAAQ,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,YACrEC,SAAU,CACN,CACIC,MAAO,UACPrE,KAAM,CAAC,GAAI,GAAI,EAAG,EAAG,EAAG,GACxBsE,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEJC,YAAa,CACT,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,YAAa,KA0D+BC,QAAS,CAC7BC,qBAAqB,EACrBC,QAAQ,EACRC,SAAU,CACNC,KAAM,SAEVC,YAAY,EACZC,4BAA6B,IAC7BrE,MAAO,CACHsE,WAAW,EACXH,KAAM,SAEVI,QAAS,SAACC,EAAOC,GACbD,EAAME,OAAOrC,MAAMsC,OAASF,EAAa,GACnC,UACA,YAEXhC,OAAQ,cAWzCmC,EAAU,SAAC,GAAc,IAAZtF,EAAW,EAAXA,KACf,OACI,kBAAC,IAAD,CAAMK,UAAU,8BACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAG,MACJ,wBAAID,UAAU,QAAd,YAEJ,kBAAC,IAAD,CAAKC,GAAG,KAAKiF,GAAG,KACZ,2CACA,yBAAKxC,MAAO,CAAEE,SAAU,OAAQuC,WAAY,SAAWxF,EAAKyF,UAEhE,kBAAC,IAAD,CAAKnF,GAAG,KAAKiF,GAAG,KACZ,yDACA,yBAAKxC,MAAO,CAAEE,SAAU,OAAQuC,WAAY,SAAWxF,EAAK0F,YAEhE,kBAAC,IAAD,CAAKpF,GAAG,KAAKiF,GAAG,KACZ,+DACA,yBAAKxC,MAAO,CAAEE,SAAU,OAAQuC,WAAY,SAAWxF,EAAK2F,iBA2KrEC,UA3oBf,WAA4B,IAAD,IACjBC,EAAOC,cADU,EAEkBC,aAAO,2CAAlCC,EAFS,EAEfhG,KAAe2C,EAFA,EAEAA,MAAO1C,EAFP,EAEOA,OACxBgG,GAAWD,GAAWrD,EACtB3C,EAAOkG,mBAAQ,WAAO,IAAD,IACvB,wBAAOF,QAAP,IAAOA,GAAP,UAAOA,EAAShG,YAAhB,aAAO,EAAeA,YAAtB,QAA8B,KAC/B,CAACgG,IAuCJ,OAAIC,EAEI,yBACIlD,MAAO,CACHoD,SAAU,WACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,WAAY,yBACZC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGhB,kBAAC,IAAD,CAAS5D,MAAO,CAAEG,MAAO,GAAIC,OAAQ,OAM7C,kBAAC,IAAD,CAAK9C,UAAU,oBACX,kBAAC,IAAD,CAAKC,GAAG,MACJ,kBAAC,IAAD,CAAMD,UAAU,aACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAG,KAAKD,UAAU,kCACnB,wBAAIA,UAAU,yBAAyBwF,EAAKe,KAA5C,IAAkD,2BAAOvG,UAAU,cAAjB,UAA+BwF,EAAKgB,6BAApC,aAA+B,EAA4BvF,UAA3D,cAAuEuE,EAAKgB,6BAA5E,aAAuE,EAA4BtF,WACrJ,6BACI,kBAAC,IAAD,CAAMR,GAAG,mBACL,kBAAC,IAAD,CAAQY,MAAM,WAAd,qBAMZ,kBAAC,IAAD,CAAKrB,GAAG,MACJ,kBAACP,EAAD,CAAeC,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAM8G,YAAa7G,OAAQA,KAEpD,kBAAC,IAAD,CAAKK,GAAG,MACJ,kBAACuC,EAAD,CAAmB7C,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAM+G,qBAEnC,kBAAC,IAAD,CAAKzG,GAAG,KAAKiF,GAAG,KACZ,kBAAChC,EAAD,CAAYC,OAlEzB,CACX,CACIwD,MAAO,YACPC,MAAO,sBACPC,IAAK,uBAET,CACIF,MAAO,YACPC,MAAO,sBACPC,IAAK,uBAET,CACIF,MAAO,YACPC,MAAO,sBACPC,IAAK,uBAET,CACIF,MAAO,YACPC,MAAO,sBACPC,IAAK,2BAiDW,kBAAC,IAAD,CAAK5G,GAAG,KAAKiF,GAAG,KACZ,kBAACtB,EAAD,OAEJ,kBAAC,IAAD,CAAK3D,GAAG,MACJ,kBAACgF,EAAD,CAAStF,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMmH","file":"static/js/4.c3809b9c.chunk.js","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport { Col, Row, Card, CardBody, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Table, Badge, Progress, Input, Button, Spinner, Modal, ModalBody } from 'reactstrap'\nimport moment from 'moment'\nimport { Bar } from 'react-chartjs-2';\nimport { Link } from 'react-router-dom';\nimport { useAuthUser } from '../../../store';\nimport useSWR from 'swr';\nimport { toast } from 'react-toastify';\nimport request from \"../../../utils/request\";\n\nconst localizer = momentLocalizer(moment);\nfunction ClientDashboard() {\n    const user = useAuthUser()\n    const { data: getData, error, mutate } = useSWR(() => `v1/user/me/dashboard`);\n    const loading = !getData || error\n    const data = useMemo(() => {\n        return getData?.data?.data ?? [];\n    }, [getData]);\n\n    const dummyProjects = [\n        { projectName: 'Project 1', professionalName: 'Client A', status: 'Applied', progress: 0, closingDate: '2021-08-25' },\n        { projectName: 'Project 2', professionalName: 'Client B', status: 'On-Going', progress: 30, closingDate: '2021-08-20' },\n        { projectName: 'Project 3', professionalName: 'Client C', status: 'On-Going', progress: 90, closingDate: '2021-08-28' },\n        { projectName: 'Project 4', professionalName: 'Client D', status: 'On-Going', progress: 60, closingDate: '2021-08-31' },\n    ]\n\n    const dummyActivities = [\n        { projectName: 'Project 1', category: 'Deliverable', action: 'Action 1', dueDate: '2021-08-25' },\n        { projectName: 'Project 2', category: 'Meeting', action: 'Action 2', dueDate: '2021-08-23' },\n        { projectName: 'Project 3', category: 'Invoice', action: 'Action 3', dueDate: '2021-08-29' },\n        { projectName: 'Project 4', category: 'Meeting', action: 'Action 4', dueDate: '2021-08-21' },\n    ]\n\n    const events = [\n        {\n            title: 'Meeting 1',\n            start: '2021-08-08 08:00:00',\n            end: '2021-08-08 12:00:00',\n        },\n        {\n            title: 'Meeting 2',\n            start: '2021-08-12 08:00:00',\n            end: '2021-08-12 12:00:00',\n        },\n        {\n            title: 'Meeting 3',\n            start: '2021-08-16 08:00:00',\n            end: '2021-08-16 12:00:00',\n        },\n        {\n            title: 'Meeting 4',\n            start: '2021-08-20 08:00:00',\n            end: '2021-08-20 12:00:00',\n        },\n    ]\n\n    if (loading) {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                    background: \"rgba(255,255,255, 0.5)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Spinner style={{ width: 48, height: 48 }} />\n            </div>\n        )\n    }\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\" className=\"d-flex justify-content-between\">\n                                <h2 className=\"font-weight-bold mb-4\">{user.name} <small className=\"text-muted\">{user.registrantInformation?.firstName} {user.registrantInformation?.lastName}</small></h2>\n                                <div>\n                                    <Link to='/project/create'>\n                                        <Button color=\"primary\">\n                                            Create Project\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatus data={data?.projectList} mutate={mutate} />\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatistics data={data?.projectStatistics} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"5\">\n                                <MyCalendar events={events} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"7\">\n                                <Trends />\n                            </Col>\n                            <Col xs=\"12\">\n                                <Finance data={data?.financeStatistics} />\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nconst ProjectStatus = ({ data, mutate }) => {\n    const [modalReopen, setModalReopen] = useState(null);\n\n    const handleReopen = () => {\n        request.put(`v1/project/${modalReopen}/reopen`, {\n            isReopen: true\n        })\n            .then(res => {\n                toast.success('Reopen Successfully')\n                mutate()\n            })\n            .catch(err => {\n                toast.error('Reopen Failed');\n            })\n            .finally(() => setModalReopen(!modalReopen))\n    }\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Status</h4>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex my-1\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Open\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Under Review\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Expired\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                On going\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Complete\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"12\" className=\"my-1\">\n                        <Table hover className=\"text-center\">\n                            <thead>\n                                <tr>\n                                    <th>Project Name</th>\n                                    <th>Professional Name</th>\n                                    <th>Closing Date</th>\n                                    <th>Completion Date</th>\n                                    <th>Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {data?.map((p, i) =>\n                                    <tr key={i}>\n                                        <td>\n                                            <Link to={`${p.projectStatus === 'on_going' ? `/project/${p.idProject}/wall` : `/project/${p.idProject}/professionals`}`}>\n                                                {p.projectName}\n                                            </Link>\n                                        </td>\n                                        <td>\n                                            {p.professionalList.length > 0 ?\n                                                <Link to={`/professional/${p.professionalList[0].idProfessionalUserMeta}`}>\n                                                    {p.professionalList[0].firstName} {p.professionalList[0].lastName}\n                                                </Link>\n                                                : '-'\n                                            }\n                                        </td>\n                                        <td>{moment(p?.completeDate ?? '').format('DD-MM-YYYY')}</td>\n                                        <td>{moment(p.completeDate).format('DD-MM-YYYY')}</td>\n                                        <td className=\"text-uppercase\">\n                                            {p.projectStatus.replace('_', ' ')}\n                                            {\n                                                p.projectStatus === 'expired'\n                                                    ? <Button color=\"pinion-primary\" size=\"sm\" block className=\"text-white mt-2\" onClick={() => setModalReopen(p.idProject)}>Reopen</Button>\n                                                    : null\n                                            }\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n                <Modal isOpen={modalReopen} centered toggle={() => setModalReopen(!modalReopen)}>\n                    <ModalBody className=\"p-5\">\n                        <Row>\n                            <Col xs=\"12\">\n                                <div className=\"mb-2\">\n                                    Are you sure you want to reopen this project?\n                                </div>\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                <Button color=\"secondary\" className=\"mr-2\" onClick={() => setModalReopen(!modalReopen)}>Cancel</Button>\n                                <Button color=\"primary\" className=\"text-capitalize\" onClick={handleReopen}>Reopen</Button>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                </Modal>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst ProjectStatistics = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Statistics</h4>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex my-1 justify-content-center\">\n                        <Row>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of projects in tender</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.posted}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of active projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.onGoing}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of completed projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.close}</Badge></div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst MyCalendar = ({ events }) => {\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ height: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">My Calendar</h4>\n                        <Calendar\n                            popup={true}\n                            localizer={localizer}\n                            defaultDate={new Date()}\n                            messages={{\n                                previous: <i className=\"fa fa-angle-left\"></i>,\n                                next: <i className=\"fa fa-angle-right\"></i>,\n                            }}\n                            defaultView=\"month\"\n                            views={[\"month\", 'agenda']}\n                            events={events}\n                            style={{ height: \"50vh\" }}\n                        // onSelectEvent={event => this.modalDetailEvent(event)}\n                        // onRangeChange={this.onRangeChange}\n                        // eventPropGetter={(this.eventStyleGetter)}\n                        />\n                    </Col>\n                    {/* <Col xs=\"12\" className=\"my-2\">\n                        <h4 className=\"mt-3\">My Activites</h4>\n                        <Calendar\n                            popup={true}\n                            localizer={localizer}\n                            defaultDate={new Date()}\n                            messages={{\n                                today: t(\"hariini\"),\n                                previous: <i className=\"fa fa-angle-left\"></i>,\n                                next: <i className=\"fa fa-angle-right\"></i>,\n                                month: t(\"bulanan\"),\n                                week: t(\"mingguan\"),\n                                day: t(\"harian\"),\n                            }}\n                            defaultView=\"agenda\"\n                            views={['agenda']}\n                            events={events}\n                            style={{ minHeight: \"50vh\" }}\n                        // onSelectEvent={event => this.modalDetailEvent(event)}\n                        // onRangeChange={this.onRangeChange}\n                        // eventPropGetter={(this.eventStyleGetter)}\n                        />\n                    </Col> */}\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Trends = () => {\n    const dataSkills = {\n        labels: ['Skill 1', 'Skill 2', 'Skill 3', 'Skill 4', 'Skill 5', 'Skill 6'],\n        datasets: [\n            {\n                label: 'Skills',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    const dataSectors = {\n        labels: ['Sector 1', 'Sector 2', 'Sector 3', 'Sector 4', 'Sector 5', 'Sector 6'],\n        datasets: [\n            {\n                label: 'Sectors',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ height: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">Trends</h4>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row>\n                            <Col xs=\"4\" className=\"px-0 h-100px\">\n                                <h6>My load this week</h6>\n                                <div className=\"mt-4 px-4\">\n                                    <Progress color='#555' value={60}>\n                                        <b style={{ color: \"#555\" }}>{60}%</b>\n                                    </Progress>\n                                </div>\n                            </Col>\n                            <Col xs=\"4\" className=\"px-0\">\n                                <h6>Average Time per Project</h6>\n                                <div style={{ fontSize: '30pt' }}>2 hrs</div>\n                                <small className=\"text-muted\">Total 10 hours</small>\n                            </Col>\n                            <Col xs=\"4\" className=\"px-0\">\n                                <h6>Bid Success Rate</h6>\n                                <div style={{ fontSize: '30pt' }}>20%</div>\n                                <small className=\"text-muted\">5/25 projects</small>\n                            </Col>\n                            <Col xs=\"6\" className=\"mt-5\">\n                                <div>Skills</div>\n                                <div>\n                                    <Bar data={dataSkills} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={250} />\n                                </div>\n                            </Col>\n                            <Col xs=\"6\" className=\"mt-5\">\n                                <div>Sectors</div>\n                                <div>\n                                    <Bar data={dataSectors} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={250} />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Finance = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Finance</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Total AP</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{data.totalAR}</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Average AP per project</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{data.averageAR}</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Estimated AP based on Tender</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{data.estimateAR}</div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Projects = ({ data, activities }) => {\n\n    const dataStats = {\n        labels: ['Project 1', 'Project 2', 'Project 3', 'Project 4', 'Project 5', 'Project 6'],\n        datasets: [\n            {\n                label: 'Projects',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Projects</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <Row className=\"my-2\">\n                            <Col xs=\"5\">\n                                <div>Overall</div>\n                            </Col>\n                            <Col xs=\"7\">\n                                <Progress color='#555' value={60}>\n                                    <b style={{ color: \"#555\" }}>{60}%</b>\n                                </Progress>\n                            </Col>\n                        </Row>\n                        {data.map((d, i) => (\n                            <Row key={i} className=\"my-2\">\n                                <Col xs=\"5\">\n                                    <div>{d.projectName}</div>\n                                </Col>\n                                <Col xs=\"7\">\n                                    <Progress color='#555' value={d.progress}>\n                                        <b style={{ color: \"#555\" }}>{d.progress}%</b>\n                                    </Progress>\n                                </Col>\n                            </Row>\n                        ))}\n                    </Col>\n                    <Col xs=\"12\" lg=\"8\">\n                        <div>\n                            <Bar data={dataStats} options={{\n                                maintainAspectRatio: false,\n                                legend: false,\n                                tooltips: {\n                                    mode: \"label\",\n                                },\n                                responsive: true,\n                                responsiveAnimationDuration: 2000,\n                                hover: {\n                                    intersect: true,\n                                    mode: \"point\",\n                                },\n                                onHover: (event, chartElement) => {\n                                    event.target.style.cursor = chartElement[0]\n                                        ? \"pointer\"\n                                        : \"default\";\n                                },\n                            }} height={250} />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" className=\"mt-3\">\n                        <Row>\n                            <Col xs=\"12\" lg=\"4\">\n                                <Row>\n                                    <Col xs=\"6\" className=\"d-flex align-items-center\">\n                                        <div>Show for upcoming</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <Input min={0} max={100} type=\"number\" step=\"1\" />\n                                            <InputGroupAddon addonType=\"append\">days</InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-3\">\n                                    <Col xs=\"6\">\n                                        <div>Category Filter</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Deliverable\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                A/R & A/P\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Meeting\n                                            </div>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\" lg=\"8\">\n                                <Table hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Project</th>\n                                            <th>Category</th>\n                                            <th>Action</th>\n                                            <th>Due Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {activities.map((p, i) =>\n                                            <tr key={i}>\n                                                <td>{p.projectName}</td>\n                                                <td>{p.category}</td>\n                                                <td>{p.action}</td>\n                                                <td>{p.dueDate}</td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default ClientDashboard"],"sourceRoot":""}