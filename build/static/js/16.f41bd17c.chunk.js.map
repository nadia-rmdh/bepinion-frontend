{"version":3,"sources":["views/Menu/Professionals/ProfessionalDetail.js"],"names":["colorSkills","Biodata","professional","console","log","onErrorImage","useCallback","e","target","src","noImage","onerror","className","xs","md","alt","style","objectFit","width","height","onError","firstName","lastName","yearOfExperience","color","about","Skills","WorkExprerience","workExperience","map","work","i","key","jobTitle","companyName","sector","skills","skill","name","right","top","moment","startDate","format","endDate","Education","educations","education","educationDegree","school","educationField","ProjectExperience","projectExperience","project","projectName","projectRole","ProfessionalDetail","matchRoute","useRouteMatch","useSWR","params","professionalId","getProfessional","data","error","mutate","useMemo"],"mappings":"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","file":"static/js/16.f41bd17c.chunk.js","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport { Col, Row, Card, CardBody, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Table, Badge, Progress, Input, Button } from 'reactstrap'\nimport moment from 'moment'\nimport { t } from 'react-switch-lang';\nimport { Bar } from 'react-chartjs-2';\nimport noImage from '../../../assets/illustrations/image-error.png'\nimport { useRouteMatch } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst colorSkills = [\n    'success',\n    'danger',\n    'warning',\n    'secondary',\n    'info',\n    'primary',\n    'light',\n    'dark'\n]\n\nfunction ProfessionalDetail() {\n    const matchRoute = useRouteMatch();\n    const { data: getProfessional, error: errorProfessional, mutate: mutateProfessional } = useSWR(() => `v1/professional/${matchRoute.params.professionalId}`);\n    const loading = !getProfessional && !errorProfessional;\n    const professional = useMemo(() => {\n        return getProfessional?.data?.data ?? [];\n    }, [getProfessional]);\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\">\n                <Row>\n                    <Col xs=\"12\">\n                        <Biodata professional={professional} />\n                    </Col>\n                    <Col xs=\"12\" md=\"6\">\n                        <Skills professional={professional} />\n                        <WorkExprerience professional={professional} />\n                        <Education professional={professional} />\n                    </Col>\n                    <Col xs=\"12\" md=\"6\">\n                        <ProjectExperience professional={professional} />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nconst Biodata = ({ professional }) => {\n    console.log(professional)\n    const onErrorImage = useCallback((e) => {\n        e.target.src = noImage;\n        e.target.onerror = null;\n    }, [])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" md=\"6\" className=\"d-flex align-items-center\">\n                        <img src={noImage} className=\"rounded-circle shadow-sm\" alt=\"avatar\" style={{ objectFit: 'cover', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />\n                        <div className=\"ml-3\">\n                            <div className=\"font-2xl font-weight-bold mb-2\">{professional.firstName} {professional.lastName}</div>\n                            <div className=\"mb-2\">{professional.yearOfExperience} year of experience</div>\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" md=\"6\">\n                        <Row>\n                            <Col xs=\"12\">\n                                <Button color=\"primary\" className=\"float-right\">\n                                    Invite\n                                </Button>\n                            </Col>\n                            <Col xs=\"12\">\n                                <div className=\"font-lg font-weight-bold mb-2\">\n                                    About me\n                                </div>\n                                <div className=\"text-muted\">\n                                    {professional.about ?? 'Nothing about me'}\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Skills = ({ professional }) => {\n    return (\n        <Card>\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <div className=\"font-lg font-weight-bold mb-2\">\n                            SKILLS AND STATISTICS\n                        </div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst WorkExprerience = ({ professional }) => {\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <div className=\"font-lg font-weight-bold mb-2\">WORK EXPERIENCE</div>\n                    </Col>\n                    {professional?.workExperience?.map((work, i) => (\n                        <Col xs=\"12\" key={i}>\n                            <Card>\n                                <CardBody>\n                                    <div className=\"position-relative\">\n                                        <div className=\"font-weight-bold\">{work.jobTitle}</div>\n                                        <div>{work.companyName}</div>\n                                        <div>{work.sector}</div>\n                                        <div>Skills</div>\n                                        <div>\n                                            {work?.skills?.map((skill, i) => (\n                                                <Badge key={i} color={colorSkills[i]} className=\"text-uppercase mx-1 font-sm text-light\">{skill.name}</Badge>\n                                            ))}\n                                        </div>\n                                        <div className=\"position-absolute\" style={{ right: '0px', top: '0px' }}>{moment(work.startDate).format('MMMM YYYY')} - {moment(work.endDate).format('MMMM YYYY')}</div>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    ))}\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Education = ({ professional }) => {\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <div className=\"font-lg font-weight-bold mb-2\">EDUCATION</div>\n                    </Col>\n\n                    {professional?.educations?.map((education, i) => (\n                        <Col xs=\"12\" key={i}>\n                            <Card>\n                                <CardBody>\n                                    <div className=\"position-relative\">\n                                        <div className=\"font-weight-bold\">{education.educationDegree}</div>\n                                        <div>{education.school}</div>\n                                        <div>{education.educationField}</div>\n                                        {/* <div className=\"position-absolute\" style={{ right: '0px', top: '0px' }}>{moment(work.startDate).format('MMMM YYYY')} - {moment(work.endDate).format('MMMM YYYY')}</div> */}\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    ))}\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst ProjectExperience = ({ professional }) => {\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <div className=\"font-lg font-weight-bold mb-2\">PROJECT EXPERIENCE</div>\n                    </Col>\n                    {professional?.projectExperience?.map((project, i) => (\n                        <Col xs=\"12\" key={i}>\n                            <Card>\n                                <CardBody>\n                                    <div className=\"position-relative\">\n                                        <div className=\"font-weight-bold\">{project.projectName}</div>\n                                        <div>{project.projectRole}</div>\n                                        <div>Client Name</div>\n                                        <div>{project.sector}</div>\n                                        <div>Skills</div>\n                                        <div>\n                                            {project?.skills?.map((skill, i) => (\n                                                <Badge key={i} color={colorSkills[i]} className=\"text-uppercase mx-1 font-sm text-light\">{skill.name}</Badge>\n                                            ))}\n                                        </div>\n                                        <div className=\"position-absolute\" style={{ right: '0px', top: '0px' }}>\n                                            <div>{moment(project.startDate).format('MMMM YYYY')} - {moment(project.endDate).format('MMMM YYYY')}</div>\n                                            <div>Contract Value Range</div>\n                                        </div>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    ))}\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\nexport default ProfessionalDetail"],"sourceRoot":""}