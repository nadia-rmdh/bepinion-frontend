{"version":3,"sources":["views/Menu/Professionals/ProfessionalDashboard.js"],"names":["localizer","momentLocalizer","moment","ProjectStatus","data","useState","filter","setFilter","handleChangeFilter","useCallback","e","target","value","checked","state","d","filteredData","useMemo","filtered","length","projectList","includes","approvalStatus","className","xs","addonType","type","id","onChange","hover","map","p","i","key","projectStatus","to","idProject","projectName","clientName","activityStatus","replace","colspan","ProjectStatistics","md","style","whiteSpace","fontSize","color","width","height","applied","onGoing","close","MyCalendar","events","popup","defaultDate","Date","messages","previous","next","defaultView","views","position","top","right","bottom","left","background","display","justifyContent","alignItems","Trends","totalSuccessBid","totalDuration","toFixed","bidSuccessRate","totalBidProject","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","legend","tooltips","mode","responsive","responsiveAnimationDuration","intersect","onHover","event","chartElement","cursor","Finance","lg","fontWeight","totalAR","averageAR","estimateAR","ProfessionalDashboard","props","user","useAuthUser","useSWR","getData","error","loading","firstName","lastName","projectStatistics","calenderDetails","trendDetails","financeStatistics"],"mappings":"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","file":"static/js/5.dc0eb259.chunk.js","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport { Col, Row, Card, CardBody, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Table, Badge, Progress, Input, Spinner } from 'reactstrap'\nimport moment from 'moment'\nimport { Bar } from 'react-chartjs-2';\nimport { useAuthUser } from '../../../store';\nimport useSWR from 'swr';\nimport { Link } from 'react-router-dom';\n\nconst localizer = momentLocalizer(moment);\nfunction ProfessionalDashboard(props) {\n    const user = useAuthUser()\n    const { data: getData, error, } = useSWR(() => `v1/user/me/dashboard`);\n    const loading = !getData || error\n    const data = useMemo(() => {\n        return getData?.data?.data ?? [];\n    }, [getData]);\n\n\n    if (loading) {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                    background: \"rgba(255,255,255, 0.5)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Spinner style={{ width: 48, height: 48 }} />\n            </div>\n        )\n    }\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\">\n                                <h2 className=\"font-weight-bold mb-4\">{user.firstName} {user.lastName}</h2>\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatus data={data} />\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatistics data={data?.projectStatistics} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"5\">\n                                <MyCalendar events={data?.calenderDetails} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"7\">\n                                <Trends data={data?.trendDetails} />\n                            </Col>\n                            <Col xs=\"12\">\n                                <Finance data={data?.financeStatistics} />\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nconst ProjectStatus = ({ data }) => {\n    const [filter, setFilter] = useState([]);\n    const handleChangeFilter = useCallback((e) => {\n        const { value, checked } = e.target;\n        if (checked) {\n            setFilter(state => ([...state, value]))\n        } else {\n            setFilter(state => state.filter(d => d !== value))\n        }\n    }, [setFilter]);\n\n    const filteredData = useMemo(() => {\n        const filtered = filter.length > 0 ? data?.projectList?.filter(d => filter.includes(d.approvalStatus)) : data?.projectList;\n\n        return filtered ?? [];\n    }, [data, filter])\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Status</h4>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex my-1\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"applied\" value=\"applied\" checked={filter.includes('applied')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Applied\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"under_review\" value=\"under_review\" checked={filter.includes('under_review')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Under Review\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"tnc_review\" value=\"tnc_review\" checked={filter.includes('tnc_review')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                T&C Review\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"on_going\" value=\"on_going\" checked={filter.includes('on_going')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                On going\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"deliverable_approved\" value=\"deliverable_approved\" checked={filter.includes('deliverable_approved')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Approved\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"close\" value=\"close\" checked={filter.includes('close')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Closed\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"12\" className=\"my-1\">\n                        <Table hover>\n                            <thead>\n                                <tr>\n                                    <th>Project Name</th>\n                                    <th>Client Name</th>\n                                    <th>Deliverable Status</th>\n                                    <th>Project Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {filteredData.length > 0\n                                    ? filteredData.map((p, i) =>\n                                        <tr key={i}>\n                                            <td className=\"text-left\">\n                                                {p.projectStatus === 'on_going' ?\n                                                    <Link to={`/project/${p.idProject}/wall`}>\n                                                        {p.projectName}\n                                                    </Link>\n                                                    : (p.projectStatus === 'close'\n                                                        ? <Link to={`/rate/${p.idProject}`}>\n                                                            {p.projectName}\n                                                        </Link>\n                                                        : p.projectName)\n                                                }\n                                            </td>\n                                            <td>{p.clientName}</td>\n                                            <td className=\"text-uppercase\">{p?.activityStatus ?? '-'}</td>\n                                            <td className=\"text-uppercase\">{p?.approvalStatus?.replace('_', ' ') === 'TNC REVIEW' ? 'T&C REVIEW' : p?.approvalStatus?.replace('_', ' ')}</td>\n                                        </tr>\n                                    )\n                                    : <tr>\n                                        <td colspan=\"4\" className=\"text-center text-muted\">No Data</td>\n                                    </tr>\n                                }\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst ProjectStatistics = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Statistics</h4>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex my-1 justify-content-center\">\n                        <Row>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of projects in tender</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.applied}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of active projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.onGoing}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of completed projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.close}</Badge></div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst MyCalendar = ({ events }) => {\n\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ height: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">My Calendar</h4>\n                        {events\n                            ? <Calendar\n                                popup={true}\n                                localizer={localizer}\n                                defaultDate={new Date()}\n                                messages={{\n                                    // today: t(\"hariini\"),\n                                    previous: <i className=\"fa fa-angle-left\"></i>,\n                                    next: <i className=\"fa fa-angle-right\"></i>,\n                                    // month: t(\"bulanan\"),\n                                    // week: t(\"mingguan\"),\n                                    // day: t(\"harian\"),\n                                }}\n                                defaultView=\"month\"\n                                views={[\"month\", \"week\", \"day\", 'agenda']}\n                                events={events}\n                                style={{ height: \"50vh\" }}\n                            // onSelectEvent={event => this.modalDetailEvent(event)}\n                            // onRangeChange={this.onRangeChange}\n                            // eventPropGetter={(this.eventStyleGetter)}\n                            />\n                            : <div\n                                style={{\n                                    position: \"absolute\",\n                                    top: 0,\n                                    right: 0,\n                                    bottom: 0,\n                                    left: 0,\n                                    background: \"rgba(255,255,255, 0.5)\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                <Spinner style={{ width: 48, height: 48 }} />\n                            </div>\n                        }\n                    </Col>\n                    {/* <Col xs=\"12\" className=\"my-2\">\n                        <h4 className=\"mt-3\">My Activites</h4>\n                        <Calendar\n                            popup={true}\n                            localizer={localizer}\n                            defaultDate={new Date()}\n                            messages={{\n                                today: t(\"hariini\"),\n                                previous: <i className=\"fa fa-angle-left\"></i>,\n                                next: <i className=\"fa fa-angle-right\"></i>,\n                                month: t(\"bulanan\"),\n                                week: t(\"mingguan\"),\n                                day: t(\"harian\"),\n                            }}\n                            defaultView=\"agenda\"\n                            views={['agenda']}\n                            events={events}\n                            style={{ minHeight: \"50vh\" }}\n                        // onSelectEvent={event => this.modalDetailEvent(event)}\n                        // onRangeChange={this.onRangeChange}\n                        // eventPropGetter={(this.eventStyleGetter)}\n                        />\n                    </Col> */}\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Trends = ({ data }) => {\n    const dataSkills = {\n        labels: ['Skill 1', 'Skill 2', 'Skill 3', 'Skill 4', 'Skill 5', 'Skill 6'],\n        datasets: [\n            {\n                label: 'Skills',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    const dataSectors = {\n        labels: ['Sector 1', 'Sector 2', 'Sector 3', 'Sector 4', 'Sector 5', 'Sector 6'],\n        datasets: [\n            {\n                label: 'Sectors',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ height: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">Trends</h4>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row>\n                            <Col xs=\"6\" className=\"px-0\">\n                                <h6>Average Time per Project</h6>\n                                <div style={{ fontSize: '30pt' }}>{data.totalSuccessBid ? (data.totalDuration / data.totalSuccessBid).toFixed(2) : 0} hrs</div>\n                                <small className=\"text-muted\">Total {data.totalDuration} hours</small>\n                            </Col>\n                            <Col xs=\"6\" className=\"px-0\">\n                                <h6>Bid Success Rate</h6>\n                                <div style={{ fontSize: '30pt' }}>{data.bidSuccessRate?.toFixed(2)}%</div>\n                                <small className=\"text-muted\">{data.totalSuccessBid}/{data.totalBidProject} projects</small>\n                            </Col>\n                            <Col xs=\"6\" className=\"mt-5\">\n                                <div>Skills</div>\n                                <div>\n                                    <Bar data={dataSkills} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={250} />\n                                </div>\n                            </Col>\n                            <Col xs=\"6\" className=\"mt-5\">\n                                <div>Sectors</div>\n                                <div>\n                                    <Bar data={dataSectors} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={250} />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Finance = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Finance</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Total AR</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{data.totalAR}</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Average AR per project</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{data.averageAR}</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Estimated AR based on applied projects</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{data.estimateAR}</div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\n// eslint-disable-next-line\nconst Projects = ({ data, activities }) => {\n\n    const dataStats = {\n        labels: ['Project 1', 'Project 2', 'Project 3', 'Project 4', 'Project 5', 'Project 6'],\n        datasets: [\n            {\n                label: 'Projects',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Projects</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <Row className=\"my-2\">\n                            <Col xs=\"5\">\n                                <div>Overall</div>\n                            </Col>\n                            <Col xs=\"7\">\n                                <Progress color='#555' value={60}>\n                                    <b style={{ color: \"#555\" }}>{60}%</b>\n                                </Progress>\n                            </Col>\n                        </Row>\n                        {data.map((d, i) => (\n                            <Row key={i} className=\"my-2\">\n                                <Col xs=\"5\">\n                                    <div>{d.projectName}</div>\n                                </Col>\n                                <Col xs=\"7\">\n                                    <Progress color='#555' value={d.progress}>\n                                        <b style={{ color: \"#555\" }}>{d.progress}%</b>\n                                    </Progress>\n                                </Col>\n                            </Row>\n                        ))}\n                    </Col>\n                    <Col xs=\"12\" lg=\"8\">\n                        <div>\n                            <Bar data={dataStats} options={{\n                                maintainAspectRatio: false,\n                                legend: false,\n                                tooltips: {\n                                    mode: \"label\",\n                                },\n                                responsive: true,\n                                responsiveAnimationDuration: 2000,\n                                hover: {\n                                    intersect: true,\n                                    mode: \"point\",\n                                },\n                                onHover: (event, chartElement) => {\n                                    event.target.style.cursor = chartElement[0]\n                                        ? \"pointer\"\n                                        : \"default\";\n                                },\n                            }} height={250} />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" className=\"mt-3\">\n                        <Row>\n                            <Col xs=\"12\" lg=\"4\">\n                                <Row>\n                                    <Col xs=\"6\" className=\"d-flex align-items-center\">\n                                        <div>Show for upcoming</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <Input min={0} max={100} type=\"number\" step=\"1\" />\n                                            <InputGroupAddon addonType=\"append\">days</InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-3\">\n                                    <Col xs=\"6\">\n                                        <div>Category Filter</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Deliverable\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                A/R & A/P\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Meeting\n                                            </div>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\" lg=\"8\">\n                                <Table hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Project</th>\n                                            <th>Category</th>\n                                            <th>Action</th>\n                                            <th>Due Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {activities.map((p, i) =>\n                                            <tr key={i}>\n                                                <td>{p.projectName}</td>\n                                                <td>{p.category}</td>\n                                                <td>{p.action}</td>\n                                                <td>{p.dueDate}</td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default ProfessionalDashboard"],"sourceRoot":""}