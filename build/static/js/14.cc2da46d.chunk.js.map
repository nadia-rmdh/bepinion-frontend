{"version":3,"sources":["utils/formatter.js","../node_modules/reactstrap/es/Tooltip.js","../node_modules/reactstrap/es/UncontrolledTooltip.js","views/Menu/Projects/ProjectCreate.js"],"names":["convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","convertNumberCurrencies","n","ranges","divider","suffix","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","Tooltip","props","popperClasses","classNames","popperClassName","classes","innerClassName","React","createElement","TooltipPopoverWrapper","_extends","propTypes","defaultProps","placement","autohide","placementPrefix","trigger","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","omitKeys","UncontrolledTooltip","_Component","_this","call","this","state","isOpen","defaultOpen","toggle","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","setState","render","omit","Component","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","PropTypes","bool","ProjectInformation","projectInformationData","setProjectInformationData","touched","errors","getSector","useDataSectors","data","sectors","useMemo","map","p","label","name","value","id","handleChangeProjectName","useCallback","e","old","projectName","handleChangeProjectOwnerVisibility","checked","projectOwnerVisibility","handleChangeSector","handleChangeDescription","description","Card","className","CardBody","Row","Col","xs","md","lg","Label","for","Input","type","onChange","placeholder","InputGroup","InputGroupAddon","addonType","InputGroupText","CustomInput","closeMenuOnSelect","isClearable","isMulti","options","components","DropdownIndicator","IndicatorSeparator","isOptionDisabled","option","sector","icon","color","size","style","right","top","minRows","ProjectRequirements","projectRequirementsData","setProjectRequirementsData","getSkills","useDataSkills","skills","getDegree","useDataEducationDegrees","degrees","getEduField","useDataEducationFields","educations","handleChangeSkills","handleChangeDegree","degree","handleChangeYearExperience","yearExperience","handleChangeEducation","education","onWheel","blur","ProjectDetails","projectDetailsData","setProjectDetailsData","handleChangeDuration","budget","duration","handleChangeBudgetVisibility","budgetVisibility","projectTimelinesData","setProjectTimelinesData","ProjectTimelines","handleChangeClosingDate","closingDate","handleChangeMeetingDate","meetingDate","completionDate","moment","add","relations","backgroundColor","border","width","height","targetId","targetAnchor","sourceAnchor","strokeColor","strokeWidth","endMarker","format","initialSettings","singleDatePicker","showDropdowns","startDate","Date","minDate","autoApply","drops","onApply","background","cursor","padding","marginTop","subtract","ProjectCreate","history","useHistory","useState","modalSubmitForm","setModalSubmitForm","useFormik","initialValues","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setErrors","request","post","isOwnerDisplayed","sectorIds","isBudgetVisible","completeDate","idEducationDegree","idEducationField","minYearExp","requirementSkills","skill","idSkill","meetingDetails","link","date","then","res","toast","success","catch","err","error","finally","setValues","handleSubmit","isSubmitting","Button","onClick","Modal","centered","ModalBody","disabled"],"mappings":"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","file":"static/js/14.cc2da46d.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'indonesia', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'rb',\n        million: 'jt',\n        billion: 'M',\n        trillion: 'T'\n    },\n    ordinal: function (number) {\n        return number === 1 ? 'er' : 'ème';\n    },\n    currency: {\n        symbol: 'IDR'\n    }\n});\nnumeral.locale('indonesia')\n\nexport function convertToRupiah(angka) {\n    var rupiah = '';\n    var angkarev = angka.toString().split('').reverse().join('');\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';\n\n    return 'IDR ' + rupiah.split('', rupiah.length - 1).reverse().join('');\n}\n\nexport function convertNumberCurrencies(n) {\n    const ranges = [\n        { divider: 1e18, suffix: 'E' },\n        { divider: 1e15, suffix: 'P' },\n        { divider: 1e12, suffix: 'T' },\n        { divider: 1e9, suffix: 'G' },\n        { divider: 1e6, suffix: 'M' },\n        { divider: 1e3, suffix: 'k' }\n    ];\n\n    for (var i = 0; i < ranges.length; i++) {\n        if (n >= ranges[i].divider) {\n            return (n / ranges[i].divider).toString() + ranges[i].suffix;\n        }\n    }\n    return n.toString();\n}\n\nexport function formatDate(date) {\n    let d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (d.toString() === 'Invalid Date') {\n        return null;\n    }\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function dataURIToBlob(dataURI) {\n    const splitDataURI = dataURI.split(',')\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\n\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type: mimeString })\n}\n\nexport function matchWildcard(str, wildcard) {\n    var escapeRegex = (str) => str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n    return new RegExp(\"^\" + wildcard.split(\"*\").map(escapeRegex).join(\".*\") + \"$\").test(str);\n}\n\nexport function convertNumber(numb, format = '0.0a') {\n    return numeral(numb).format(format)\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport TooltipPopoverWrapper, { propTypes } from './TooltipPopoverWrapper';\nvar defaultProps = {\n  placement: 'top',\n  autohide: true,\n  placementPrefix: 'bs-tooltip',\n  trigger: 'hover focus'\n};\n\nvar Tooltip = function Tooltip(props) {\n  var popperClasses = classNames('tooltip', 'show', props.popperClassName);\n  var classes = classNames('tooltip-inner', props.innerClassName);\n  return /*#__PURE__*/React.createElement(TooltipPopoverWrapper, _extends({}, props, {\n    popperClassName: popperClasses,\n    innerClassName: classes\n  }));\n};\n\nTooltip.propTypes = propTypes;\nTooltip.defaultProps = defaultProps;\nexport default Tooltip;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from './Tooltip';\nimport { omit } from './utils';\nvar omitKeys = ['defaultOpen'];\n\nvar UncontrolledTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledTooltip, _Component);\n\n  function UncontrolledTooltip(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = UncontrolledTooltip.prototype;\n\n  _proto.toggle = function toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Tooltip, _extends({\n      isOpen: this.state.isOpen,\n      toggle: this.toggle\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledTooltip;\n}(Component);\n\nexport { UncontrolledTooltip as default };\nUncontrolledTooltip.propTypes = _objectSpread({\n  defaultOpen: PropTypes.bool\n}, Tooltip.propTypes);","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Label, Input, InputGroup, InputGroupAddon, InputGroupText, CustomInput, ModalBody, Modal, UncontrolledTooltip } from \"reactstrap\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport Select from 'react-select'\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { toast } from \"react-toastify\";\nimport request from \"../../../utils/request\";\nimport useDataEducationDegrees from \"../../../hooks/useDataEducationDegrees\";\nimport useDataEducationFields from \"../../../hooks/useDataEducationFields\";\nimport useDataSectors from \"../../../hooks/useDataSectors\";\nimport useDataSkills from \"../../../hooks/useDataSkills\";\nimport { useHistory } from \"react-router-dom\";\nimport { convertToRupiah } from \"../../../utils/formatter\";\nimport { ArcherContainer, ArcherElement } from 'react-archer'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment'\n\n\nfunction ProjectCreate(props) {\n    const history = useHistory();\n    const [modalSubmitForm, setModalSubmitForm] = useState(false);\n\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            projectName: Yup.string().required().label('Business Name'),\n            projectOwnerVisibility: Yup.string().required().label('Project Owner Visibility'),\n            sectors: Yup.string().required().label('Sector'),\n            description: Yup.string().required().label('Description'),\n            duration: Yup.number().min(1, 'Min value 1.').label('Duration'),\n            budget: Yup.number().min(1, 'Min value 1.').label('budget'),\n            budgetVisibility: Yup.string().required().label('Budget Visibility'),\n            completionDate: Yup.string().required().label('Completion Date'),\n            closingDate: Yup.string().required().label('Tender Closing Date'),\n            meetingDate: Yup.string().required().label('Meeting Date'),\n            skills: Yup.string().required().label('Skills Requirements'),\n            yearExperience: Yup.number().min(1, 'Min value 1.').label('Year Experience'),\n            degree: Yup.string().required().label('Degree'),\n            education: Yup.string().required().label('Education Field'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: {\n            projectName: '',\n            projectOwnerVisibility: '',\n            sectors: [],\n            description: '',\n            duration: 0,\n            budget: 0,\n            budgetVisibility: '',\n            completionDate: '',\n            closingDate: '',\n            meetingDate: '',\n            skills: [],\n            yearExperience: 0,\n            degree: '',\n            education: '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n\n            request.post(`v1/project`, {\n                name: values.projectName,\n                isOwnerDisplayed: values.projectOwnerVisibility === 'displayed' ? true : false,\n                sectorIds: values.sectors.map((sector) => sector.value),\n                description: values.description,\n                duration: values.duration,\n                budget: values.budget,\n                isBudgetVisible: values.budgetVisibility === 'displayed' ? true : false,\n                completeDate: values.completionDate,\n                closingDate: values.closingDate,\n                idEducationDegree: values.degree.value,\n                idEducationField: values.education.value,\n                minYearExp: values.yearExperience,\n                requirementSkills: values.skills.map((skill) => ({ idSkill: skill.value })),\n                meetingDetails: {\n                    link: \"\",\n                    date: values.meetingDate\n                },\n            })\n                .then(res => {\n                    toast.success('Create Project Successfully')\n                    history.push('/')\n                })\n                .catch(err => {\n                    toast.error('Create project failed.');\n                })\n                .finally(() => {\n                    setModalSubmitForm(!modalSubmitForm)\n                    setSubmitting(false)\n                })\n        }\n    })\n\n    return (\n        <div>\n            <Row>\n                <Col xs=\"12\"><ProjectInformation projectInformationData={values} setProjectInformationData={setValues} touched={touched} errors={errors} /></Col>\n                <Col xs=\"12\"><ProjectRequirements projectRequirementsData={values} setProjectRequirementsData={setValues} touched={touched} errors={errors} /></Col>\n                <Col xs=\"12\"><ProjectDetails projectDetailsData={values} setProjectDetailsData={setValues} touched={touched} errors={errors} /></Col>\n                <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                    <Button color=\"secondary\" className=\"mr-2\">Cancel</Button>\n                    <Button color=\"primary\" onClick={() => setModalSubmitForm(!modalSubmitForm)}>\n                        Create\n                    </Button>\n                </Col>\n            </Row>\n            <Modal isOpen={modalSubmitForm} centered toggle={() => setModalSubmitForm(!modalSubmitForm)}>\n                <ModalBody className=\"p-5\">\n                    <Row>\n                        <Col xs=\"12\" className=\"mb-5\">\n                            Are you sure with this data?\n                        </Col>\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"secondary\" className=\"mr-2\" onClick={() => setModalSubmitForm(!modalSubmitForm)}>Cancel</Button>\n                            <Button color=\"primary\" disabled={isSubmitting} onClick={handleSubmit}>Create</Button>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n}\n\nconst ProjectInformation = ({ projectInformationData, setProjectInformationData, touched, errors }) => {\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeProjectName = useCallback((e) => {\n        const { value } = e.target;\n        setProjectInformationData(old => ({ ...old, projectName: value }))\n    }, [setProjectInformationData])\n\n    const handleChangeProjectOwnerVisibility = useCallback((e) => {\n        const { value, checked } = e.target;\n        setProjectInformationData(old => ({ ...old, projectOwnerVisibility: checked ? value : '' }))\n    }, [setProjectInformationData])\n\n    const handleChangeSector = useCallback((e) => {\n        setProjectInformationData(old => ({ ...old, sectors: e ?? [] }))\n    }, [setProjectInformationData])\n\n    const handleChangeDescription = useCallback((e) => {\n        const { value } = e.target;\n        setProjectInformationData(old => ({ ...old, description: value }))\n    }, [setProjectInformationData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">PROJECT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"projectName\">Project Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"projectName\" id=\"projectName\" value={projectInformationData.projectName} onChange={(e) => handleChangeProjectName(e)} placeholder=\"Business Entity Field...\" />\n                                {touched.projectName && errors.projectName && <small className=\"text-danger\">{errors.projectName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"projectOwnerVisibility\">Project Owner Visibility</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"displayed\" value=\"displayed\" checked={projectInformationData.projectOwnerVisibility === \"displayed\" ? true : false} onChange={(e) => handleChangeProjectOwnerVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"displayed\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Displayed\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"undisclosed\" value=\"undisclosed\" checked={projectInformationData.projectOwnerVisibility === \"undisclosed\" ? true : false} onChange={(e) => handleChangeProjectOwnerVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"undisclosed\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Undisclosed\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.projectOwnerVisibility && errors.projectOwnerVisibility && <small className=\"text-danger\">{errors.projectOwnerVisibility}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"sector\">Sector</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    closeMenuOnSelect={false}\n                                    isClearable\n                                    isMulti\n                                    options={sectors}\n                                    placeholder=\"Choose some sectors...\"\n                                    value={projectInformationData.sectors}\n                                    onChange={(e) => handleChangeSector(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    isOptionDisabled={(option) => projectInformationData.sectors.length >= 3}\n                                />\n                                {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" className=\"d-flex align-items-center\">\n                                <Label for=\"description\">Description</Label>\n                            </Col>\n                            <Col xs=\"12\">\n                                <div className=\"position-relative\">\n                                    <FontAwesomeIcon icon=\"question-circle\" color=\"#20a8d8\" id=\"UncontrolledTooltipExample\" size=\"lg\" className=\"position-absolute\" style={{ right: 10, top: 10 }} />\n                                    <UncontrolledTooltip placement=\"bottom\" target=\"UncontrolledTooltipExample\">\n                                        The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested.\n                                        Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form,\n                                        accompanied by English versions from the 1914 translation by H. Rackham.\n                                    </UncontrolledTooltip>\n                                    <TextareaAutosize\n                                        minRows={5}\n                                        name=\"description\"\n                                        id=\"description\"\n                                        className=\"form-control\"\n                                        placeholder=\"Description Field...\"\n                                        value={projectInformationData.description}\n                                        onChange={(e) => handleChangeDescription(e)}\n                                    />\n                                    {touched.description && errors.description && <small className=\"text-danger\">{errors.description}</small>}\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nconst ProjectRequirements = ({ projectRequirementsData, setProjectRequirementsData, touched, errors }) => {\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const { data: getDegree } = useDataEducationDegrees();\n    const degrees = useMemo(() => getDegree.map(p => ({ label: p.name, value: p.id })), [getDegree])\n\n    const { data: getEduField } = useDataEducationFields();\n    const educations = useMemo(() => getEduField.map(p => ({ label: p.name, value: p.id })), [getEduField])\n\n    const handleChangeSkills = useCallback((e) => {\n        setProjectRequirementsData(old => ({ ...old, skills: e ?? [] }))\n    }, [setProjectRequirementsData])\n\n    const handleChangeDegree = useCallback((e) => {\n        setProjectRequirementsData(old => ({ ...old, degree: e ?? [] }))\n    }, [setProjectRequirementsData])\n\n    const handleChangeYearExperience = useCallback((e) => {\n        const { value } = e.target;\n        setProjectRequirementsData(old => ({ ...old, yearExperience: value }))\n    }, [setProjectRequirementsData])\n\n    const handleChangeEducation = useCallback((e) => {\n        setProjectRequirementsData(old => ({ ...old, education: e ?? [] }))\n    }, [setProjectRequirementsData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">REQUIREMENTS</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"skills\">Skiils</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    closeMenuOnSelect={false}\n                                    options={skills}\n                                    isClearable\n                                    isMulti\n                                    placeholder=\"Choose some skills...\"\n                                    onChange={(e) => handleChangeSkills(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={projectRequirementsData.skills} />\n                                {touched.skills && errors.skills && <small className=\"text-danger\">{errors.skills}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"yearExperience\">Minimum years of experience</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"yearExperience\" id=\"yearExperience\" value={projectRequirementsData.yearExperience} onChange={(e) => handleChangeYearExperience(e)} placeholder=\"Minimum year Field...\"\n                                    onWheel={(e) => { e.target.blur() }}\n                                />\n                                {touched.yearExperience && errors.yearExperience && <small className=\"text-danger\">{errors.yearExperience}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"degree\">Degree</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={degrees}\n                                    placeholder=\"Choose a degree...\"\n                                    value={projectRequirementsData.degree}\n                                    onChange={(e) => handleChangeDegree(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.degree && errors.degree && <small className=\"text-danger\">{errors.degree}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"education\">Field of study</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={educations}\n                                    placeholder=\"Choose a education field...\"\n                                    value={projectRequirementsData.education}\n                                    onChange={(e) => handleChangeEducation(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.education && errors.education && <small className=\"text-danger\">{errors.education}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nconst ProjectDetails = ({ projectDetailsData, setProjectDetailsData, touched, errors }) => {\n    const handleChangeDuration = useCallback((e) => {\n        const { value } = e.target;\n        const budget = (500 + ((value - 1) * 300)) * 1000;\n        setProjectDetailsData(old => ({ ...old, duration: value, budget }))\n    }, [setProjectDetailsData])\n\n    const handleChangeBudgetVisibility = useCallback((e) => {\n        const { value } = e.target;\n        setProjectDetailsData(old => ({ ...old, budgetVisibility: value }))\n    }, [setProjectDetailsData])\n\n    return (\n\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">PROJECT DETAILS</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"duration\">Meeting Duration</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <InputGroup>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <Input type=\"number\" name=\"duration\" id=\"duration\" value={projectDetailsData.duration} onChange={(e) => handleChangeDuration(e)} placeholder=\"Duration Field...\"\n                                            onWheel={(e) => { e.target.blur() }}\n                                        />\n                                        <InputGroupText>\n                                            hours\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                </InputGroup>\n                                {touched.duration && errors.duration && <small className=\"text-danger\">{errors.duration}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"budget\">Budget</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                {convertToRupiah(projectDetailsData.budget)}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"budgetVisibility\">Budget Visibility</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"displayedbudget\" value=\"displayed\" checked={projectDetailsData.budgetVisibility === \"displayed\" ? true : false} onChange={(e) => handleChangeBudgetVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"displayedbudget\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Displayed\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"undisclosedbudget\" value=\"undisclosed\" checked={projectDetailsData.budgetVisibility === \"undisclosed\" ? true : false} onChange={(e) => handleChangeBudgetVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"undisclosedbudget\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Undisclosed\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.budgetVisibility && errors.budgetVisibility && <small className=\"text-danger\">{errors.budgetVisibility}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col xs=\"12\" className=\"mt-5\"><ProjectTimelines projectTimelinesData={projectDetailsData} setProjectTimelinesData={setProjectDetailsData} touched={touched} errors={errors} /></Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst ProjectTimelines = ({ projectTimelinesData, setProjectTimelinesData, touched, errors }) => {\n    const handleChangeClosingDate = useCallback((value) => {\n        setProjectTimelinesData(old => ({ ...old, closingDate: value }))\n    }, [setProjectTimelinesData])\n\n    const handleChangeMeetingDate = useCallback((value) => {\n        setProjectTimelinesData(old => ({ ...old, meetingDate: value, completionDate: moment(value).add(7, 'days') }))\n    }, [setProjectTimelinesData])\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <ArcherContainer>\n                    <div className=\"text-center d-flex justify-content-between\">\n                        <div>\n                            <div>\n                                Create Project\n                            </div>\n                            <ArcherElement\n                                id={`step-1-1`}\n                                relations={[]}\n                            >\n                                <div\n                                    className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div className=\"mt-2\" style={{ height: '26px' }}>\n                            </div>\n                            <ArcherElement\n                                id={`step-1`}\n                                relations={[\n                                    {\n                                        targetId: `step-1-1`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#000000', strokeWidth: 2, endMarker: false },\n                                    },\n                                    {\n                                        targetId: `step-2`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#20a8d7', strokeWidth: 5, endMarker: false },\n                                    },\n                                ]}\n                            >\n                                <div\n                                    className={`mx-auto text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <span className=\"mt-2\">\n                                <br />\n                                {moment().format('DD-MM-YYYY')}\n                            </span>\n                        </div>\n                        <div>\n                            <span className=\"mb-3\">\n                                <DateRangePicker\n                                    initialSettings={{\n                                        singleDatePicker: true,\n                                        showDropdowns: true,\n                                        startDate: new Date(),\n                                        minDate: new Date(),\n                                        autoApply: true,\n                                        drops: \"up\",\n                                    }}\n                                    onApply={(e, p) => handleChangeClosingDate(p.startDate)}\n                                >\n                                    <div id=\"reportrange\" style={{ background: '#fff', cursor: 'pointer', padding: '5px 10px', border: '1px solid #ccc', width: '100%' }}>\n                                        <i className=\"fa fa-calendar mr-2\"></i><span>{projectTimelinesData.closingDate ? projectTimelinesData.closingDate.format('DD-MM-YYYY') : 'DD-MM-YYY'}</span> <i className=\"fa fa-caret-down float-right\"></i>\n                                    </div>\n                                </DateRangePicker>\n                                {touched.closingDate && errors.closingDate && <small className=\"text-danger\">{errors.closingDate}</small>}\n                            </span>\n                            <ArcherElement\n                                id={`step-2`}\n                                relations={[\n                                    {\n                                        targetId: `step-2-1`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#000000', strokeWidth: 2, endMarker: false },\n                                    },\n                                    {\n                                        targetId: `step-3`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#20a8d7', strokeWidth: 5, endMarker: false },\n                                    },\n                                ]}\n                            >\n                                <div\n                                    className={`mx-auto text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px', marginTop: '30px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div className=\"mt-2\" style={{ height: '30px' }}>\n                            </div>\n                            <ArcherElement\n                                id={`step-2-1`}\n                                relations={[]}\n                            >\n                                <div\n                                    className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div>\n                                Tender Closing Date\n                            </div>\n                        </div>\n                        <div>\n                            <div>\n                                Project Wall Access\n                            </div>\n                            <ArcherElement\n                                id={`step-3-1`}\n                                relations={[]}\n                            >\n                                <div\n                                    className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div className=\"mt-2\" style={{ height: '26px' }}>\n                            </div>\n                            <ArcherElement\n                                id={`step-3`}\n                                relations={[\n                                    {\n                                        targetId: `step-3-1`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#000000', strokeWidth: 2, endMarker: false },\n                                    },\n                                    {\n                                        targetId: `step-4`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#20a8d7', strokeWidth: 5, endMarker: false },\n                                    },\n                                ]}\n                            >\n                                <div\n                                    className={`mx-auto text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <span className=\"mt-2\">\n                                <br />\n                                {projectTimelinesData.meetingDate ? moment(projectTimelinesData.meetingDate).subtract(7, 'day').format('DD-MM-YYYY') : 'DD-MM-YYYY'}\n                            </span>\n                        </div>\n                        <div>\n                            <span className=\"mb-3\">\n                                <DateRangePicker\n                                    initialSettings={{\n                                        singleDatePicker: true,\n                                        showDropdowns: true,\n                                        startDate: new Date(),\n                                        minDate: new Date(),\n                                        autoApply: true,\n                                        drops: \"up\",\n                                    }}\n                                    onApply={(e, p) => handleChangeMeetingDate(p.startDate)}\n                                >\n                                    <div id=\"reportrange\" style={{ background: '#fff', cursor: 'pointer', padding: '5px 10px', border: '1px solid #ccc', width: '100%' }}>\n                                        <i className=\"fa fa-calendar mr-2\"></i><span>{projectTimelinesData.meetingDate ? projectTimelinesData.meetingDate.format('DD-MM-YYYY') : 'DD-MM-YYY'}</span> <i className=\"fa fa-caret-down float-right\"></i>\n                                    </div>\n                                </DateRangePicker>\n                                {touched.meetingDate && errors.meetingDate && <small className=\"text-danger\">{errors.meetingDate}</small>}\n                            </span>\n                            <ArcherElement\n                                id={`step-4`}\n                                relations={[\n                                    {\n                                        targetId: `step-4-1`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#000000', strokeWidth: 2, endMarker: false },\n                                    },\n                                    {\n                                        targetId: `step-5`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#20a8d7', strokeWidth: 5, endMarker: false },\n                                    },\n                                ]}\n                            >\n                                <div\n                                    className={`mx-auto text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px', marginTop: '30px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div className=\"mt-2\" style={{ height: '26px' }}>\n                            </div>\n                            <ArcherElement\n                                id={`step-4-1`}\n                                relations={[]}\n                            >\n                                <div\n                                    className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div>\n                                Meeting Date\n                            </div>\n                        </div>\n                        <div>\n                            <div>\n                                Project Completion\n                            </div>\n                            <ArcherElement\n                                id={`step-5-1`}\n                                relations={[]}\n                            >\n                                <div\n                                    className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div className=\"mt-2\" style={{ height: '26px' }}>\n                            </div>\n                            <ArcherElement\n                                id={`step-5`}\n                                relations={[\n                                    {\n                                        targetId: `step-5-1`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#000000', strokeWidth: 2, endMarker: false },\n                                    },\n                                ]}\n                            >\n                                <div\n                                    className={`mx-auto text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <span className=\"mt-2\">\n                                <br />\n                                {projectTimelinesData.completionDate ? projectTimelinesData.completionDate.format('DD-MM-YYYY') : 'DD-MM-YYYY'}\n                            </span>\n                        </div>\n                    </div>\n                </ArcherContainer>\n            </Col>\n        </Row>\n    )\n}\nexport default ProjectCreate;\n"],"sourceRoot":""}