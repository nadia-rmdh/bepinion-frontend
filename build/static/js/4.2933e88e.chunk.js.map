{"version":3,"sources":["utils/formatter.js","../node_modules/numeral/numeral.js","views/Menu/Clients/ClientDashboard.js"],"names":["convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","convertNumberCurrencies","n","ranges","divider","suffix","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","define","_","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","this","_input","_value","value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","format","roundingFunction","leadingCount","abbrForce","abs","int","precision","signed","output","negP","optDec","abbr","neg","Math","includes","indexOf","RegExp","toFixed","slice","String","string","abbreviation","stringOriginal","pow","min","search","insert","subString","start","reduce","array","callback","TypeError","t","Object","len","k","arguments","multiplier","x","parts","correctionFactor","args","Array","prototype","call","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","key","toLowerCase","localeData","Error","reset","property","type","name","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","e","fn","clone","inputString","formatFunction","round","set","add","corrFactor","curr","currI","O","subtract","multiply","divide","difference","b","space","splice","base","suffixes","binary","unformatRegex","concat","filter","item","bytes","bytesMultiplier","symbols","before","after","toExponential","hours","floor","minutes","seconds","timeArray","localizer","momentLocalizer","moment","ProjectStatus","data","mutate","useState","modalReopen","setModalReopen","setFilter","handleChangeFilter","useCallback","target","checked","state","d","filteredData","useMemo","filtered","projectStatus","className","xs","addonType","id","onChange","hover","map","p","to","idProject","projectName","professionalList","idProfessionalUserMeta","firstName","lastName","activityStatus","completeDate","color","size","block","onClick","colspan","isOpen","centered","toggle","request","put","isReopen","then","res","toast","success","catch","err","error","finally","ProjectStatistics","md","style","whiteSpace","fontSize","width","height","posted","onGoing","close","MyCalendar","events","popup","defaultDate","Date","messages","previous","defaultView","views","position","top","right","bottom","left","background","display","justifyContent","alignItems","Trends","totalDurationCloseProject","parseInt","totalDuration","labels","datasets","label","backgroundColor","borderColor","borderWidth","maintainAspectRatio","legend","tooltips","mode","responsive","responsiveAnimationDuration","intersect","onHover","event","chartElement","cursor","Finance","lg","fontWeight","totalAR","averageAR","estimateAR","ClientDashboard","user","useAuthUser","useSWR","getData","loading","registrantInformation","projectList","projectStatistics","calenderDetails","trendDetails","financeStatistics"],"mappings":"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","file":"static/js/4.2933e88e.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'indonesia', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'rb',\n        million: 'jt',\n        billion: 'M',\n        trillion: 'T'\n    },\n    ordinal: function (number) {\n        return number === 1 ? 'er' : 'ème';\n    },\n    currency: {\n        symbol: 'IDR'\n    }\n});\nnumeral.locale('indonesia')\n\nexport function convertToRupiah(angka) {\n    var rupiah = '';\n    var angkarev = angka.toString().split('').reverse().join('');\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';\n\n    return rupiah.split('', rupiah.length - 1).reverse().join('');\n}\n\nexport function convertNumberCurrencies(n) {\n    const ranges = [\n        { divider: 1e18, suffix: 'E' },\n        { divider: 1e15, suffix: 'P' },\n        { divider: 1e12, suffix: 'T' },\n        { divider: 1e9, suffix: 'G' },\n        { divider: 1e6, suffix: 'M' },\n        { divider: 1e3, suffix: 'k' }\n    ];\n\n    for (var i = 0; i < ranges.length; i++) {\n        if (n >= ranges[i].divider) {\n            return (n / ranges[i].divider).toString() + ranges[i].suffix;\n        }\n    }\n    return n.toString();\n}\n\nexport function formatDate(date) {\n    let d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (d.toString() === 'Invalid Date') {\n        return null;\n    }\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function dataURIToBlob(dataURI) {\n    const splitDataURI = dataURI.split(',')\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\n\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type: mimeString })\n}\n\nexport function matchWildcard(str, wildcard) {\n    var escapeRegex = (str) => str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n    return new RegExp(\"^\" + wildcard.split(\"*\").map(escapeRegex).join(\".*\") + \"$\").test(str);\n}\n\nexport function convertNumber(numb, format = '0.0a') {\n    return numeral(numb).format(format)\n}\n","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n","import React, { useCallback, useMemo, useState } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport { Col, Row, Card, CardBody, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Table, Badge, Progress, Input, Button, Spinner, Modal, ModalBody } from 'reactstrap'\nimport moment from 'moment'\nimport { Bar } from 'react-chartjs-2';\nimport { Link } from 'react-router-dom';\nimport { useAuthUser } from '../../../store';\nimport useSWR from 'swr';\nimport { toast } from 'react-toastify';\nimport request from \"../../../utils/request\";\nimport { convertNumberCurrencies } from '../../../utils/formatter';\n\nconst localizer = momentLocalizer(moment);\nfunction ClientDashboard() {\n    const user = useAuthUser()\n    const { data: getData, error, mutate } = useSWR(() => `v1/user/me/dashboard`);\n    const loading = !getData || error\n    const data = useMemo(() => {\n        return getData?.data?.data ?? [];\n    }, [getData]);\n\n    if (loading) {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                    background: \"rgba(255,255,255, 0.5)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Spinner style={{ width: 48, height: 48 }} />\n            </div>\n        )\n    }\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\" className=\"d-flex justify-content-between\">\n                                <h2 className=\"font-weight-bold mb-4\">{user.name} <small className=\"text-muted\">{user.registrantInformation?.firstName} {user.registrantInformation?.lastName}</small></h2>\n                                <div>\n                                    <Link to='/project/create'>\n                                        <Button color=\"primary\">\n                                            Create Project\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatus data={data?.projectList} mutate={mutate} />\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatistics data={data?.projectStatistics} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"5\">\n                                <MyCalendar events={data?.calenderDetails} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"7\">\n                                <Trends data={data?.trendDetails} />\n                            </Col>\n                            <Col xs=\"12\">\n                                <Finance data={data?.financeStatistics} />\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nconst ProjectStatus = ({ data, mutate }) => {\n    const [modalReopen, setModalReopen] = useState(null);\n    const [filter, setFilter] = useState([]);\n\n    const handleChangeFilter = useCallback((e) => {\n        const { value, checked } = e.target;\n        if (checked) {\n            setFilter(state => ([...state, value]))\n        } else {\n            setFilter(state => state.filter(d => d !== value))\n        }\n    }, [setFilter]);\n\n    const filteredData = useMemo(() => {\n        const filtered = filter.length > 0 ? data?.filter(d => filter.includes(d.projectStatus)) : data;\n        return filtered ?? [];\n    }, [data, filter])\n\n    const handleReopen = () => {\n        request.put(`v1/project/${modalReopen}/reopen`, {\n            isReopen: true\n        })\n            .then(res => {\n                toast.success('Reopen Successfully')\n                mutate()\n            })\n            .catch(err => {\n                toast.error('Reopen Failed');\n            })\n            .finally(() => setModalReopen(!modalReopen))\n    }\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Status</h4>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex my-1\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"open\" value=\"open\" checked={filter.includes('open')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Open\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"under_review\" value=\"under_review\" checked={filter.includes('under_review')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Under Review\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"expired\" value=\"expired\" checked={filter.includes('expired')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Expired\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"tnc_review\" value=\"tnc_review\" checked={filter.includes('tnc_review')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                T&C Review\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"on_going\" value=\"on_going\" checked={filter.includes('on_going')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                On going\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"deliverable_approved\" value=\"deliverable_approved\" checked={filter.includes('deliverable_approved')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Approved\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"close\" value=\"close\" checked={filter.includes('close')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Closed\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"12\" className=\"my-1\">\n                        <Table hover className=\"text-center\">\n                            <thead>\n                                <tr>\n                                    <th>Project Name</th>\n                                    <th>Professional Name</th>\n                                    <th>Completion Date</th>\n                                    <th>Deliverable Status</th>\n                                    <th>Project Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {filteredData.length > 0\n                                    ? filteredData.map((p, i) =>\n                                        <tr key={i}>\n                                            <td className=\"text-left\">\n                                                <Link to={`${p.projectStatus === 'on_going' ? `/project/${p.idProject}/wall` : (p.projectStatus === 'close'\n                                                    ? `/rate/${p.idProject}`\n                                                    : `/project/${p.idProject}/professionals`)}`}>\n                                                    {p.projectName}\n                                                </Link>\n                                            </td>\n                                            <td>\n                                                {p?.professionalList?.length > 0 ?\n                                                    <Link to={`/professional/${p.professionalList[0].idProfessionalUserMeta}`}>\n                                                        {p.professionalList[0].firstName} {p.professionalList[0].lastName}\n                                                    </Link>\n                                                    : '-'\n                                                }\n                                            </td>\n                                            <td className=\"text-uppercase\">{p?.activityStatus ?? '-'}</td>\n                                            <td>{moment(p?.completeDate ?? '').format('DD-MM-YYYY')}</td>\n                                            <td className=\"text-uppercase\">\n                                                {p.projectStatus.replace('_', ' ') === 'tnc review' ? 'T&C REVIEW' : p.projectStatus.replace('_', ' ')}\n                                                {\n                                                    p.projectStatus === 'expired'\n                                                        ? <Button color=\"pinion-primary\" size=\"sm\" block className=\"text-white mt-2\" onClick={() => setModalReopen(p.idProject)}>Reopen</Button>\n                                                        : null\n                                                }\n                                            </td>\n                                        </tr>\n                                    )\n                                    : <tr>\n                                        <td colspan=\"5\" className=\"text-center text-muted\">No Data</td>\n                                    </tr>\n                                }\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n                <Modal isOpen={modalReopen} centered toggle={() => setModalReopen(!modalReopen)}>\n                    <ModalBody className=\"p-5\">\n                        <Row>\n                            <Col xs=\"12\">\n                                <div className=\"mb-2\">\n                                    Are you sure you want to reopen this project?\n                                </div>\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                <Button color=\"secondary\" className=\"mr-2\" onClick={() => setModalReopen(!modalReopen)}>Cancel</Button>\n                                <Button color=\"primary\" className=\"text-capitalize\" onClick={handleReopen}>Reopen</Button>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                </Modal>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst ProjectStatistics = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Statistics</h4>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex my-1 justify-content-center\">\n                        <Row>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of projects in tender</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.posted}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of active projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.onGoing}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of completed projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.close}</Badge></div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst MyCalendar = ({ events }) => {\n\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ height: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">My Calendar</h4>\n                        {events\n                            ? <Calendar\n                                popup={true}\n                                localizer={localizer}\n                                defaultDate={new Date()}\n                                messages={{\n                                    // today: t(\"hariini\"),\n                                    previous: <i className=\"fa fa-angle-left\"></i>,\n                                    next: <i className=\"fa fa-angle-right\"></i>,\n                                    // month: t(\"bulanan\"),\n                                    // week: t(\"mingguan\"),\n                                    // day: t(\"harian\"),\n                                }}\n                                defaultView=\"month\"\n                                views={[\"month\", \"week\", \"day\", 'agenda']}\n                                events={events}\n                                style={{ height: \"50vh\" }}\n                            // onSelectEvent={event => this.modalDetailEvent(event)}\n                            // onRangeChange={this.onRangeChange}\n                            // eventPropGetter={(this.eventStyleGetter)}\n                            />\n                            : <div\n                                style={{\n                                    position: \"absolute\",\n                                    top: 0,\n                                    right: 0,\n                                    bottom: 0,\n                                    left: 0,\n                                    background: \"rgba(255,255,255, 0.5)\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                <Spinner style={{ width: 48, height: 48 }} />\n                            </div>\n                        }\n                    </Col>\n                    {/* <Col xs=\"12\" className=\"my-2\">\n                        <h4 className=\"mt-3\">My Activites</h4>\n                        <Calendar\n                            popup={true}\n                            localizer={localizer}\n                            defaultDate={new Date()}\n                            messages={{\n                                today: t(\"hariini\"),\n                                previous: <i className=\"fa fa-angle-left\"></i>,\n                                next: <i className=\"fa fa-angle-right\"></i>,\n                                month: t(\"bulanan\"),\n                                week: t(\"mingguan\"),\n                                day: t(\"harian\"),\n                            }}\n                            defaultView=\"agenda\"\n                            views={['agenda']}\n                            events={events}\n                            style={{ minHeight: \"50vh\" }}\n                        // onSelectEvent={event => this.modalDetailEvent(event)}\n                        // onRangeChange={this.onRangeChange}\n                        // eventPropGetter={(this.eventStyleGetter)}\n                        />\n                    </Col> */}\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Trends = ({ data }) => {\n    const dataSkills = {\n        labels: ['Skill 1', 'Skill 2', 'Skill 3', 'Skill 4', 'Skill 5', 'Skill 6'],\n        datasets: [\n            {\n                label: 'Skills',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    const dataSectors = {\n        labels: ['Sector 1', 'Sector 2', 'Sector 3', 'Sector 4', 'Sector 5', 'Sector 6'],\n        datasets: [\n            {\n                label: 'Sectors',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ height: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">Trends</h4>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row>\n                            <Col xs=\"12\" className=\"px-0\">\n                                <h6>Average Time per Project</h6>\n                                <div style={{ fontSize: '30pt' }}>{data.totalDurationCloseProject ? parseInt(data.totalDuration / data.totalDurationCloseProject).toFixed(2) : 0} hrs</div>\n                                <small className=\"text-muted\">Total {data.totalDuration} hours</small>\n                            </Col>\n                            <Col xs=\"6\" className=\"mt-5\">\n                                <div>Skills</div>\n                                <div>\n                                    <Bar data={dataSkills} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={250} />\n                                </div>\n                            </Col>\n                            <Col xs=\"6\" className=\"mt-5\">\n                                <div>Sectors</div>\n                                <div>\n                                    <Bar data={dataSectors} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={250} />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Finance = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Finance</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Total AP</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{convertNumberCurrencies(data.totalAR)}</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Average AP per project</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{convertNumberCurrencies(data.averageAR)}</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Estimated AP based on Tender</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{convertNumberCurrencies(data.estimateAR)}</div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\n// eslint-disable-next-line\nconst Projects = ({ data, activities }) => {\n\n    const dataStats = {\n        labels: ['Project 1', 'Project 2', 'Project 3', 'Project 4', 'Project 5', 'Project 6'],\n        datasets: [\n            {\n                label: 'Projects',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Projects</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <Row className=\"my-2\">\n                            <Col xs=\"5\">\n                                <div>Overall</div>\n                            </Col>\n                            <Col xs=\"7\">\n                                <Progress color='#555' value={60}>\n                                    <b style={{ color: \"#555\" }}>{60}%</b>\n                                </Progress>\n                            </Col>\n                        </Row>\n                        {data.map((d, i) => (\n                            <Row key={i} className=\"my-2\">\n                                <Col xs=\"5\">\n                                    <div>{d.projectName}</div>\n                                </Col>\n                                <Col xs=\"7\">\n                                    <Progress color='#555' value={d.progress}>\n                                        <b style={{ color: \"#555\" }}>{d.progress}%</b>\n                                    </Progress>\n                                </Col>\n                            </Row>\n                        ))}\n                    </Col>\n                    <Col xs=\"12\" lg=\"8\">\n                        <div>\n                            <Bar data={dataStats} options={{\n                                maintainAspectRatio: false,\n                                legend: false,\n                                tooltips: {\n                                    mode: \"label\",\n                                },\n                                responsive: true,\n                                responsiveAnimationDuration: 2000,\n                                hover: {\n                                    intersect: true,\n                                    mode: \"point\",\n                                },\n                                onHover: (event, chartElement) => {\n                                    event.target.style.cursor = chartElement[0]\n                                        ? \"pointer\"\n                                        : \"default\";\n                                },\n                            }} height={250} />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" className=\"mt-3\">\n                        <Row>\n                            <Col xs=\"12\" lg=\"4\">\n                                <Row>\n                                    <Col xs=\"6\" className=\"d-flex align-items-center\">\n                                        <div>Show for upcoming</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <Input min={0} max={100} type=\"number\" step=\"1\" />\n                                            <InputGroupAddon addonType=\"append\">days</InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-3\">\n                                    <Col xs=\"6\">\n                                        <div>Category Filter</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Deliverable\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                A/R & A/P\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Meeting\n                                            </div>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\" lg=\"8\">\n                                <Table hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Project</th>\n                                            <th>Category</th>\n                                            <th>Action</th>\n                                            <th>Due Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {activities.map((p, i) =>\n                                            <tr key={i}>\n                                                <td>{p.projectName}</td>\n                                                <td>{p.category}</td>\n                                                <td>{p.action}</td>\n                                                <td>{p.dueDate}</td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default ClientDashboard"],"sourceRoot":""}