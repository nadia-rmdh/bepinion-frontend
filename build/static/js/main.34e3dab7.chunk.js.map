{"version":3,"sources":["actions/api.js","actions/ui.js","store.js","middlewares/app.js","middlewares/core.js","reducer.js","components/DefaultImageUser/HexProfileColor.js","components/DefaultImageUser/DefaultImageUser.js","assets/illustrations/image-error.png","hooks/useDataEducationDegrees.js","hooks/useDataEducationFields.js","hooks/useDataSchools.js","hooks/useDataCountries.js","utils/request.js","components/SelectYear.js","polyfill.js","actions/auth.js","components/OfflineIndicator.js","utils/language/index.js","containers/DefaultLayout/DefaultHeader.js","containers/DefaultLayout/Menu.js","containers/DefaultLayout/Layout.js","utils/language/moment-locales.js","views/Auth/Login/Login.js","views/LandingPage/Navbar.js","views/LandingPage/PageLayout.js","views/LandingPage/Home.js","views/LandingPage/ContactUs.js","views/LandingPage/About.js","views/Auth/Register/Components/Navigation.js","views/Auth/Register/Forms/RegistrantForm.js","views/Auth/Register/Forms/EducationForm.js","views/Auth/Register/Forms/WorkExprerienceForm.js","views/Auth/Register/Forms/ProjectExperienceForm.js","views/Auth/Register/Forms/SkillSectorForm.js","views/Auth/Register/Forms/DocumentVerificationForm.js","views/Auth/Register/Forms/CompanyInformationForm.js","views/Auth/Register/Forms/RegistrantCompanyForm.js","views/Auth/Register/Register.js","views/LandingPage/context.js","views/LandingPage/LandingPage.js","App.js","index.js","hooks/useDataSectors.js","hooks/useDataProvinces.js","hooks/useDataSkills.js","containers/DefaultLayout/AuthRoute.js"],"names":["apiError","type","payload","error","setLoader","isLoading","store","applyMiddleware","dispatch","next","action","LOGOUT","meta","url","method","LOGIN","data","apiRequestLogin","GET_ME","request","get","then","response","setUser","post","catch","toast","message","autoClose","finally","localStorage","removeItem","createStore","createStoreWithMiddleware","state","user","token","getItem","setItem","SET_USER","useAuthUser","useSelector","color","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","DefaultImageUser","text","size","className","toString","initial","split","background","toLowerCase","style","backgroundColor","width","height","module","exports","useState","setData","loading","setLoading","useEffect","res","configure","Axios","create","baseURL","process","interceptors","use","config","session","headers","err","Promise","reject","status","SelectYear","start","end","Date","getFullYear","name","id","value","onChanged","styles","selected","setSelected","options","useMemo","yearArr","year","push","label","placeholder","onChange","components","DropdownIndicator","IndicatorSeparator","prototype","fn","onFinally","callback","resolve","this","result","reason","login","logout","getMe","OfflineIndicator","closed","toggleIndicator","setState","props","cursor","onClick","Component","translate","languageChangedListeners","init","setDefaultTranslations","EN","ID","setDefaultLanguage","currentLang","setLanguage","lang","rslSetLanguage","forEach","listener","call","getLanguage","rslGetLanguage","onLanguageChanged","DefaultHeader","changeLanguage","preventDefault","handleSetLanguage","modalLang","window","location","reload","changePass","modalData","modalChangeLang","changeProfile","history","handleChangeCurrent","currentPass","target","handleChangeConfirm","confirmPass","handleChangeNew","newPass","handleChangeLang","cekSubmitData","submitData","dataObject","current","new","Authorization","JSON","stringify","onSelectFlag","countryCode","moment","key","langUtils","changePage","replace","fileSelectedHandler","event","selectedFile","files","fileUploadHandler","newCompany","oldCompany","companyList","isTour","forbiddenCompany","forbiddenUser","forbiddenInvoice","modalMobile","isMobile","img","onerror","border","Navbar","light","top","Nav","navbar","Collapse","isOpen","NavItem","pathname","to","role","firstName","Modal","toggle","ModalBody","Button","Row","FormGroup","Label","htmlFor","Input","connect","withRouter","ProfessionalDashboard","lazy","ClientDashboard","ProjectWrapper","ClientWrapper","ProfessionalWrapper","Profile","menuProfessional","menuClient","component","DefaultLayout","generateRoutes","Menu","map","idx","AuthRoute","path","exact","Switch","router","Redirect","fixed","Container","fallback","position","right","bottom","left","display","justifyContent","alignItems","Spinner","from","reduxState","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","Login","console","log","closeLocalError","handleChange","update","email","trim","password","handleLogin","loginProcess","showPassword","test","Col","md","onSubmit","borderRadius","autoFocus","inputMode","autoComplete","disabled","ModalLogin","memo","handleToggle","ModalHeader","ModalRegister","showClientType","setShowClientType","xs","search","hash","textDecoration","block","useLocation","openDrawer","setOpenDrawer","modalLogin","setModalLogin","modalRegister","setModalRegister","toggleLogin","toggleRegister","closeDrawer","getNavItemClass","pos","NavbarBrand","href","NavbarToggler","PageLayout","windowOnScroll","scrollY","document","getElementsByTagName","classList","contains","add","remove","addEventListener","removeEventListener","children","defaultTypes","footer","Contact","ref","About","NavigationDot","pageName","useCallback","pageIcon","dots","totalSteps","relations","targetId","targetAnchor","sourceAnchor","strokeColor","strokeWidth","endMarker","currentStep","icon","Stats","firstStep","goToStep","lastStep","nextStep","previousStep","step","getLocalStorage","registrationForm","parse","useFormik","initialValues","registrantForm","lastName","gender","dateOfBirth","idType","idNumber","npwpNumber","address","province","phone","sector","validationSchema","optional","Yup","required","shape","oneOf","values","setSubmitting","setErrors","onSubmitForm","touched","errors","setValues","handleSubmit","registrantData","setRegistrantData","contactData","setContactData","RegistrantInformationForm","getSector","useDataSectors","sectors","handleChangeFirstName","old","handleChangeLastName","handleChangeSector","handleChangeGender","checked","handleChangeDateOfBirth","handleChangeIdType","handleChangeIdNumber","handleChangeNpwpNumber","Card","CardBody","lg","for","InputGroup","InputGroupAddon","addonType","InputGroupText","CustomInput","initialSettings","singleDatePicker","showDropdowns","startDate","maxDate","autoApply","onApply","padding","format","ContactInformationForm","getProvince","useDataProvinces","handleChangeProvince","handleChangeAddress","handleChangePhone","handleChangeEmail","minRows","getDegree","useDataEducationDegrees","degree","getSchool","useDataSchools","school","getEduField","useDataEducationFields","eduField","education","graduationYear","of","educationData","setEducationData","handleChangeDegree","edu","handleChangeSchool","handleChangeEducation","handleChangeGraduationYear","handleAddEducationData","length","handleDeleteEducationData","filter","provinces","employementTypes","getSkills","useDataSkills","skills","job","company","employementType","endDate","endDatePresent","workExperienceData","setWorkExperienceData","work","handleChangeEmployementType","handleChangeLocation","handleChangeJob","handleChangeCompany","handleChangeStartDate","handleChangeEndDate","handleChangePresent","handleChangeSkills","handleAddWorkExperienceData","handleDeleteWorkExperienceData","showMonthYearPicker","showFullMonthYearPicker","showFourColumnMonthYearPicker","dateFormat","placeholderText","wrapperClassName","minDate","closeMenuOnSelect","isClearable","isMulti","hasProjectExperience","setHasProjectExperience","getCountries","useDataCountries","countries","projectName","client","projectRole","country","description","hasValues","projectExperienceData","setProjectExperienceData","project","handleChangeCountry","handleChangeProjectName","handleChangeClient","handleChangeProjectRole","handleChangeDescription","handleAddprojectExperienceData","handleDeleteprojectExperienceData","colorSkills","min","max","skillSectorData","setSkillSectorData","colourStyles","multiValue","multiValueLabel","opt","dataOptions","find","Math","floor","random","isOptionDisabled","option","npwpFile","useRef","regIdFile","photoFile","passwordConfirmation","setShowPassword","npwp","regId","photo","confirmed","privacy","file","onFinishRegistration","verificationData","setVerificationData","onErrorImage","src","noImage","onChangeNpwpFile","preview","URL","createObjectURL","onChangeRegIdFile","onChangePhotoFile","onChangePassword","onChangePasswordConfirmation","onChangeConfirmation","onChangePrivacy","alt","objectFit","onError","accept","click","whiteSpace","businessName","companySize","aboutUs","companyInformationData","setCompanyInformationData","CompanyInformationForm","handleChangeBusinessName","handleChangecompanySize","handleChangeAboutUs","jobTitle","handleChangeJobTitle","validationForm","instance","registrationData","goToNamedStep","educationForm","workExperienceForm","projectExperienceForm","skillSectorForm","verificationForm","companyInformationForm","useHistory","URLSearchParams","modalSubmitForm","setModalSubmitForm","setInstance","formData","FormData","append","idSchool","idEducationDegree","idEducationField","idProvince","idSector","companyName","employmentType","isStillPresent","idSkill","idCountry","clientName","success","setRegistrationData","isSubmitting","handleFinishRegistration","isHashEnabled","nav","transitions","enterRight","enterLeft","exitRight","exitLeft","intro","RegistrantForm","hashKey","stepName","EducationForm","WorkExprerienceForm","ProjectExperienceForm","SkillSectorForm","DocumentVerificationForm","RegistrantCompanyForm","centered","LandingPageContext","createContext","LandingPageProvider","Provider","homeRef","aboutRef","contactRef","Home","App","Layout","library","fab","fas","far","setValidationLocale","validationLocaleDefault","momentLocaleDefinition","momentLocales","locale","rootElement","getElementById","ReactDOM","render","fetcher","isLoggedIn","shouldAuthenticate","includes","searchParams","set"],"mappings":"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","file":"static/js/main.34e3dab7.chunk.js","sourcesContent":["// action types\nexport const API_REQUEST_LOGIN = \"API_REQUEST_LOGIN\";\nexport const API_REQUEST_LOGOUT = \"API_REQUEST_LOGOUT\";\nexport const API_SUCCESS = \"API_SUCCESS\";\nexport const API_ERROR = \"API_ERROR\";\nexport const CANCEL_API_REQUEST = \"CANCEL_API_REQUEST\";\n\n// action creators\nexport const apiRequestLogin = ({ url, method, data }) => {\n    return {\n        type: API_REQUEST_LOGIN,\n        meta: { url, method, data }\n    };\n};\n\nexport const apiRequestLogout = ({ url, method }) => {\n    return {\n        type: API_REQUEST_LOGOUT,\n        meta: { url, method }\n    };\n};\n\nexport const cancelApiRequest = () => {\n    return {\n        type: CANCEL_API_REQUEST\n    };\n};\n\nexport const apiSuccess = ({ response }) => ({\n    type: API_SUCCESS,\n    payload: response\n});\n\nexport const apiError = ({ error }) => ({\n    type: API_ERROR,\n    payload: error\n});","export const SET_LOADER = \"SET_LOADER\";\n\nexport const setLoader = ( isLoading ) => ({\n    type: SET_LOADER,\n    payload: isLoading\n});\n","import { useSelector } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { appMiddleware } from \"./middlewares/app\";\nimport { apiMiddleware } from \"./middlewares/core\";\nimport reducer from './reducer'\n\nconst createStoreWithMiddleware = applyMiddleware(\n    appMiddleware,\n    apiMiddleware\n)(createStore);\n\nconst store = createStoreWithMiddleware(reducer);\n\nexport function useAuthUser() {\n    const user = useSelector(state => state.user);\n    return user;\n}\n\nexport function useToken() {\n    const token = useSelector(state => state.token);\n    return token;\n}\n\nexport default store;\n","import { apiRequestLogin, apiRequestLogout } from \"../actions/api\";\nimport { LOGIN, GET_ME, setUser, LOGOUT } from \"../actions/auth\";\nimport request from \"../utils/request\";\n\nexport const appMiddleware = ({ dispatch }) => next => action => {\n    next(action);\n    switch (action.type) {\n        case LOGOUT: {\n            next(\n                apiRequestLogout({\n                    url: `auth/logout`,\n                    method: \"POST\"\n                })\n            );\n            break;\n        }\n        case LOGIN: {\n            next(\n                apiRequestLogin({\n                    url: `v1/auth/signin`,\n                    method: 'POST',\n                    data: action.payload\n                })\n            );\n            break;\n        }\n        case GET_ME: {\n            request.get(`v1/user/me`)\n                .then(response => {\n                    dispatch(setUser(response.data))\n                })\n            break;\n        }\n        default:\n            break;\n    }\n};\n","import { API_REQUEST_LOGIN, API_REQUEST_LOGOUT, apiError, apiSuccess } from \"../actions/api\";\nimport { setLoader } from \"../actions/ui\";\nimport { toast } from 'react-toastify';\nimport request from \"../utils/request\";\nimport { LOGOUT } from \"../actions/auth\";\nexport const apiMiddleware = ({ dispatch }) => next => action => {\n    next(action);\n\n    if (action.type === API_REQUEST_LOGIN) {\n        dispatch(setLoader(true));\n        const { url, data } = action.meta;\n        request.post(url, data)\n            .then(({ data }) => dispatch(apiSuccess({ response: data })))\n            .catch((error) => {\n                dispatch(apiError({ error }));\n                toast.error(error.response.data.message, { autoClose: 3000 });\n            }).finally(() => {\n                dispatch(setLoader(false))\n            });\n    }\n\n    if (action.type === API_REQUEST_LOGOUT) {\n        dispatch(setLoader(true));\n        const { url, data } = action.meta;\n        request.post(url, data)\n            .then(() => dispatch(LOGOUT))\n            .catch(error => {\n                dispatch(apiError({ error }));\n            }).finally(() => {\n                dispatch(setLoader(false))\n                localStorage.removeItem(\"session\");\n            });\n    }\n};\n","import { SET_LOADER } from \"./actions/ui\";\nimport { API_SUCCESS, API_ERROR } from \"./actions/api\";\nimport { LOGOUT, SET_USER } from \"./actions/auth\";\n\nexport default (\n  state = {\n    user: null,\n    isLoading: false,\n    error: null,\n    token: localStorage.getItem(\"session\"),\n  },\n  action\n) => {\n  switch (action.type) {\n    case API_SUCCESS:\n      localStorage.setItem(\"session\", action.payload.data.token);\n      return {\n        ...state,\n        user: action.payload.data,\n        token: action.payload.data.token,\n        error: null,\n        isLoading: false\n      };\n    case API_ERROR:\n      return { ...state, error: \"Login Salah\", isLoading: false };\n    case SET_LOADER:\n      return { ...state, isLoading: action.payload.data };\n    case LOGOUT:\n      return { ...state, user: null, error: null, token: null };\n    case SET_USER:\n      return { ...state, user: action.payload.data };\n    default:\n      return state;\n  }\n};\n","export const color = {\n    a : \"#f2c85b\",\n    b : \"#fba465\",\n    c : \"#ee3e38\",\n    d : \"#53ccec\",\n    e : \"#1974d3\",\n    f : \"#000181\",\n    g : \"#9db300\",\n    h : \"#fccf14\",\n    i : \"#ffe169\",\n    j : \"#1d1e4e\",\n    k : \"#a155b9\",\n    l : \"#ff9001\",\n    m : \"#ff4200\",\n    n : \"#5e2390\",\n    o : \"#6b0d88\",\n    p : \"#ffb900\",\n    q : \"#f5ac4e\",\n    r : \"#940700\",\n    s : \"#fc9e5b\",\n    t : \"#41c8e5\",\n    u : \"#9a75fc\",\n    v : \"#bf3612\",\n    w : \"#f24f09\",\n    x : \"#f2c070\",\n    y : \"#5073d9\",\n    z : \"#044855\"\n}","import React from 'react'\nimport { color } from \"./HexProfileColor\"\n\nexport const DefaultImageUser = ({ text, size, className }) => {\n    const toString = text + '';\n    const initial = toString?.split('')[0];\n    const background = color[initial.toLowerCase()];\n    return (\n        <div className={`d-flex justify-content-center align-items-center px-0 text-light ${className}`}>\n            <div className={`mx-auto round-100 border-0 text-center d-flex justify-content-center align-items-center`} style={{ backgroundColor: background, width: size, height: size }}>\n                <strong className=\"text-uppercase\">{initial}</strong>\n            </div>\n        </div>\n    )\n}","module.exports = __webpack_public_path__ + \"static/media/image-error.1379dc23.png\";","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/education-degrees')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/education-fields')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/schools')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/countries')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import Axios from 'axios';\nimport store from '../store'\nimport { LOGOUT } from '../actions/auth'\nimport { toast } from 'react-toastify'\n\ntoast.configure();\n\nconst request = Axios.create({\n    baseURL: process.env.REACT_APP_DOMAIN,\n\n})\n\nrequest.interceptors.request.use((config) => {\n    // const { token: session } = store.getState();\n    const session = localStorage.getItem('session')\n    if (session) {\n        if (!config.headers) {\n            config.headers = {};\n        }\n        config.headers[\"Authorization\"] = `Bearer ${session}`;\n\n    }\n\n    return config;\n}, err => Promise.reject(err))\n\nrequest.interceptors.response.use(response => {\n    return response;\n}, err => {\n    if (err.response && err.response.status >= 500) {\n        toast.error(err.message, { autoClose: 2000 });\n    }\n\n    if (err.response && err.response.status === 401) {\n        store.dispatch({ type: LOGOUT });\n    }\n\n    return Promise.reject(err);\n})\n\nexport const requestDownload = (url, filename = 'download') => {\n    return request.get(url, { responseType: 'arraybuffer' })\n        .then(res => {\n            const type = res.headers['content-type']\n            const blob = new Blob([res.data], { type, encoding: 'UTF-8' })\n            let name = filename\n            const disposition = res.headers['content-disposition']\n            if (disposition && disposition.indexOf('inline') !== -1) {\n                const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n                const matches = filenameRegex.exec(disposition);\n                if (matches != null && matches[1]) {\n                    name = matches[1].replace(/['\"]/g, '');\n                }\n            }\n\n            const URL = window.URL || window.webkitURL\n            const downloadUrl = URL.createObjectURL(blob)\n            let newWindow = null;\n\n            const iOS = window.navigator.platform && /iPad|iPhone|iPod/.test(window.navigator.platform)\n            if (iOS) {\n                const reader = new FileReader();\n                reader.onload = function (e) {\n                    newWindow = window.open(reader.result);\n                    newWindow.onload = function () {\n                        newWindow.document.getElementsByTagName('html')[0]\n                            .appendChild(document.createElement('head'))\n                            .appendChild(document.createElement('title'))\n                            .appendChild(document.createTextNode(name));\n                    }\n                    setTimeout(() => {\n                        newWindow.document.title = name;\n                    }, 100)\n                }\n                reader.readAsDataURL(blob);\n            } else {\n                const link = document.createElement('a')\n                link.href = downloadUrl\n                link.download = name;\n                link.click();\n                setTimeout(() => {\n                    link.remove();\n                }, 1500);\n            }\n\n            return Promise.resolve(true);\n        });\n}\n\nexport default request;\n","import React, { useMemo, useState } from 'react';\nimport Select from 'react-select';\n\nconst SelectYear = ({ start = 1900, end = (new Date().getFullYear()) + 1, name, id, value, onChanged, styles }) => {\n    const [selected, setSelected] = useState(value ? { 'value': value, 'label': value } : '')\n\n    const options = useMemo(() => {\n        const yearArr = []\n        for (let year = start; year <= end; year++) {\n            yearArr.push({ value: year, label: year })\n        }\n\n        return yearArr\n    }, [start, end])\n\n    const handleChange = (data) => {\n        onChanged({ 'value': data.value, 'label': data.label });\n        setSelected({ 'value': data.value, 'label': data.label })\n    }\n    return (\n        <Select\n            placeholder=\"Choose year...\"\n            name={name} id={id}\n            value={selected}\n            options={options}\n            onChange={(e) => handleChange(e)}\n            styles={styles}\n            components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n        />\n    );\n}\n\nexport default SelectYear;\n","// Old browsers does not support (Promise).finally function\n(function () {\n  // eslint-disable-next-line\n  Promise.prototype.finally = Promise.prototype.finally || {\n    finally (fn) {\n      const onFinally = callback => Promise.resolve(fn()).then(callback);\n      return this.then(\n        result => onFinally(() => result),\n        reason => onFinally(() => Promise.reject(reason))\n      );\n    }\n  }.finally;\n})();\n\n/*\n* required polyfills\n*/\n// import \"core-js\";\n// import 'core-js/features/set/map';\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\n// import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\n// import 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\n// import 'core-js/es6/set'\n// import 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n// (function () {\n\n//   if ( typeof window.CustomEvent === \"function\" ) return false\n\n//   function CustomEvent ( event, params ) {\n//     params = params || { bubbles: false, cancelable: false, detail: undefined }\n//     var evt = document.createEvent( 'CustomEvent' )\n//     evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n//     return evt\n//   }\n\n//   CustomEvent.prototype = window.Event.prototype\n\n//   window.CustomEvent = CustomEvent\n// })();\n\n","export const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GET_ME = \"GET_ME\";\nexport const SET_USER = \"SET_USER\";\n\nexport const login = user => {\n    return {\n        type: LOGIN,\n        payload: user\n    };\n};\n\nexport const logout = () => {\n    return {\n        type: LOGOUT\n    };\n};\n\nexport const getMe = () => ({ type: GET_ME });\n\nexport const setUser = (user) => {\n    return {\n        type: SET_USER,\n        payload: user\n    };\n};\n","import React, { Component } from 'react';\nimport { Offline } from 'react-detect-offline';\nimport { translate } from 'react-switch-lang';\n\nclass OfflineIndicator extends Component {\n\tstate = {\n\t\tclosed: false,\n\t}\n\n\ttoggleIndicator = () => {\n\t\tthis.setState({ closed: !this.state.closed })\n\t}\n\n\trender() {\n\t\tconst { t } = this.props;\n\t\treturn (\n\t\t\t<Offline>\n\t\t\t\t{\n\t\t\t\t\tthis.state.closed ?\n\t\t\t\t\t\t<div style={{ height: 6, width: '100%', cursor: 'pointer' }} className=\"fixed-top bg-danger\" onClick={this.toggleIndicator}></div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div className=\"fixed-top d-flex p-2 justify-content-center bg-danger align-items-center\">\n\t\t\t\t\t\t\t<span className=\"ml-auto\"><b>Opps! &nbsp;</b>\n\t\t\t\t\t\t\t\t{t('Apptidakterhubunginternet')}</span>\n\t\t\t\t\t\t\t<button className=\"btn btn-link text-light btn-sm ml-auto text-nowrap\" onClick={this.toggleIndicator}><i className=\"fa fa-times mr-1\"></i>{t('tutup')}</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Offline>\n\t\t);\n\t}\n}\n\nexport default translate(OfflineIndicator);\n","import EN from './en.json'\nimport ID from './id.json'\nimport {\n    setLanguage as rslSetLanguage,\n    getLanguage as rslGetLanguage,\n    setDefaultTranslations,\n    setDefaultLanguage,\n} from 'react-switch-lang';\n\nexport default {\n    languageChangedListeners: [],\n\n    init() {\n        setDefaultTranslations({ EN, ID });\n        setDefaultLanguage('ID');\n        const currentLang = localStorage.getItem('language') || 'ID';\n        if (currentLang) {\n            this.setLanguage(currentLang)\n        }\n    },\n\n    setLanguage (lang) {\n        rslSetLanguage(lang);\n        localStorage.setItem('language', lang);\n        this.languageChangedListeners.forEach(listener => {\n            listener.call(this, this.getLanguage());\n        })\n    },\n\n    getLanguage () {\n        return rslGetLanguage()\n    },\n\n    onLanguageChanged (listener) {\n        this.languageChangedListeners.push(listener);\n    }\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport { Row, Button, Modal, ModalBody, FormGroup, Label, Input, Nav, NavItem, Collapse, Navbar } from \"reactstrap\";\nimport { AppNavbarBrand } from \"@coreui/react\";\nimport { connect } from \"react-redux\";\nimport { getMe, logout, setUser } from \"../../actions/auth\";\nimport Axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { translate } from \"react-switch-lang\";\nimport langUtils from \"../../utils/language/index\";\nimport * as moment from \"moment\";\nimport { DefaultImageUser } from \"../../components/DefaultImageUser/DefaultImageUser\";\nimport { Link } from \"react-router-dom\";\n\nclass DefaultHeader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: props.user,\n      session: props.token,\n      modalData: false,\n      currentPass: \"\",\n      confirmPass: \"\",\n      modalLang: false,\n      newPass: \"\",\n      newCompany: null,\n      oldCompany: null,\n      companyList: [],\n      isTour: false,\n      forbiddenCompany: false,\n      forbiddenUser: false,\n      forbiddenInvoice: false,\n      modalMobile: false,\n      isMobile: false\n    };\n  }\n  changeLanguage = (id) => (e) => {\n    e.preventDefault();\n    this.handleSetLanguage(id);\n    this.setState({\n      modalLang: !this.state.modalLang,\n    });\n    window.location.reload();\n  };\n  changePass = () => {\n    this.setState({\n      modalData: !this.state.modalData,\n    });\n  };\n  modalChangeLang = () => {\n    this.setState({\n      modalLang: !this.state.modalLang,\n    });\n  };\n  changeProfile = () => {\n    const { history } = this.props;\n    history.push(\"/profile\");\n    // window.location.replace(\"/profile/user\");\n  };\n  handleChangeCurrent = (e) => {\n    this.setState({\n      currentPass: e.target.value,\n    });\n  };\n  handleChangeConfirm = (e) => {\n    this.setState({\n      confirmPass: e.target.value,\n    });\n  };\n  handleChangeNew = (e) => {\n    this.setState({\n      newPass: e.target.value,\n    });\n  };\n  handleChangeLang = (e) => {\n    this.setState({\n      modalLang: e.target.value,\n    });\n  };\n  cekSubmitData = (e) => {\n    const { t } = this.props;\n    if (this.state.newPass !== this.state.confirmPass) {\n      toast.error(t(\"konfirmasipasssalah\"), { autoClose: 3000 });\n    } else {\n      this.submitData();\n    }\n  };\n  submitData = (e) => {\n    const dataObject = {\n      current: this.state.currentPass,\n      new: this.state.newPass,\n    };\n    Axios.post(\n      process.env.REACT_APP_DOMAIN + \"/api/auth/changepassword\",\n      dataObject,\n      { headers: { Authorization: `Bearer ${this.state.session}` } }\n    )\n      .then((res) => {\n        this.setState({\n          modalData: false,\n          currentPass: \"\",\n          confirmPass: \"\",\n          newPass: \"\",\n        });\n        this.props.logout();\n      })\n      .catch((error) => {\n        toast.error(JSON.stringify(error.response.data.message), {\n          autoClose: 3000,\n        });\n      });\n  };\n\n  onSelectFlag = (countryCode) => {\n    this.handleSetLanguage(countryCode);\n    moment.locale('en');\n  };\n  handleSetLanguage = (key) => {\n    langUtils.setLanguage(key);\n  };\n\n  onAvatarError(e) {\n    const img = e.target;\n    img.onerror = null;\n    // img.src = \"/assets/img/avatars/avatar-dummy.png\";\n    img.style.border = null;\n  }\n  changePage = (url) => {\n    window.location.replace(url);\n  };\n\n  fileSelectedHandler = (event) => {\n    this.setState({\n      selectedFile: event.target.files[0]\n    }, () => this.fileUploadHandler());\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n\n      <Navbar\n        color=\"white\"\n        className=\"navbar-expand-md fixed-top navbar-landigpage\"\n        light\n      >\n        <div className=\"container\">\n          <AppNavbarBrand\n            style={{\n              // position: \"initial\",\n              top: \"unset\",\n              // left: 0,\n              // marginLeft: 10,\n              cursor: \"pointer\"\n            }}\n            onClick={() => this.changePage(\"/dashboard\")}\n          // full={{ src: logo, width: 90, alt: \"Idea Collaboration Logo\" }}\n          // minimized={{ src: icon, width: 30, alt: \"Idea Collaboration Icon\" }}\n          >\n            P-Platform\n          </AppNavbarBrand>\n          <Nav navbar>\n            <div className=\"d-flex\">\n              <Collapse isOpen={!true} navbar className=\"mr-5\">\n                <Nav navbar>\n                  <NavItem\n                    className={`mx-3 ${this.props.location.pathname === '/dashboard' ? 'active-navbar' : ''}`}\n                  >\n                    <Link className=\"custom-nav\" to=\"/dashboard\">\n                      {t('Dashboard')}\n                    </Link>\n                  </NavItem>\n                  {this.state.user.role === 'professional' ?\n                    <NavItem\n                      className={`mx-3 ${this.props.location.pathname === '/project' ? 'active-navbar' : ''}`}\n                    >\n                      <Link className=\"custom-nav\" to=\"/project\">\n                        {t(\"Find Project\")}\n                      </Link>\n                    </NavItem>\n                    :\n                    <NavItem\n                      className={`mx-3 ${this.props.location.pathname === '/professional' ? 'active-navbar' : ''}`}\n                    >\n                      <Link className=\"custom-nav\" to=\"/professional\">\n                        {t(\"Find Professional\")}\n                      </Link>\n                    </NavItem>\n                  }\n                  <NavItem\n                    className={`mx-3 ${this.props.location.pathname === '/help' ? 'active-navbar' : ''}`}\n                  >\n                    <Link className=\"custom-nav\" to=\"/help\">\n                      {t(\"Help\")}\n                    </Link>\n                  </NavItem>\n                </Nav>\n              </Collapse>\n            </div>\n            <div className=\"d-none d-lg-block round-100 ml-auto text-center border-0\" onClick={() => this.setState({ modalMobile: !this.state.modalMobile, isMobile: false })} style={{ cursor: \"pointer\" }}>\n              {/* <img src={this.state.user.detail.photo} alt=\"profile\" width={35} height={35} style={{ objectFit: 'cover' }} onError={(e) => this.onAvatarError(e)} className=\"rounded-circle border\" /> */}\n              <DefaultImageUser text={this.state.user.firstName} />\n            </div>\n            <div className=\"d-lg-none round-100 ml-auto text-center border-0\" onClick={() => this.setState({ modalMobile: !this.state.modalMobile, isMobile: true })} style={{ cursor: \"pointer\" }}>\n              {/* <img src={this.state.user.detail.photo} alt=\"profile\" width={35} height={35} style={{ objectFit: 'cover' }} onError={(e) => this.onAvatarError(e)} className=\"rounded-circle border\" /> */}\n              <DefaultImageUser text={this.state.user.firstName} />\n            </div>\n          </Nav>\n\n          <Modal className={this.state.isMobile ? 'bottom-small' : 'right'} isOpen={this.state.modalMobile} toggle={() => this.setState({ modalMobile: false })}>\n            <ModalBody className=\"d-flex flex-column justify-content-center\">\n              <DefaultImageUser text={this.state.user.firstName} size={75} className=\"mb-3\" />\n              <Button onClick={this.changeProfile} className=\"border-0 bg-transparent py-2 my-2 text-netis-primary\">\n                <h5>Profil</h5>\n              </Button>\n              <Button onClick={this.changePass} className=\"border-0 bg-transparent py-2 my-2 text-netis-primary\">\n                <h5>Ganti Password</h5>\n              </Button>\n              <Button onClick={this.props.logout} className=\"border-0 bg-transparent py-2 my-2 text-danger\">\n                <h5>Logout</h5>\n              </Button>\n            </ModalBody>\n          </Modal>\n\n          {/*Change Pass*/}\n          <Modal isOpen={this.state.modalData} toggle={this.modalData}>\n            <ModalBody>\n              <h5 className=\"content-sub-title mb-4\">{t(\"gantipassword\")}</h5>\n\n              <Row>\n                <div className=\"col-md-12\">\n                  <FormGroup>\n                    <Label htmlFor=\"current\" className=\"input-label\">\n                      {t(\"passwordlama\")}\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"current\"\n                      id=\"current\"\n                      onChange={this.handleChangeCurrent}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label htmlFor=\"new\" className=\"input-label\">\n                      {t(\"passwordbaru\")}\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"new\"\n                      id=\"new\"\n                      onChange={this.handleChangeNew}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label htmlFor=\"confirm\" className=\"input-label\">\n                      {t(\"konfirmasipasswordbaru\")}\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"confirm\"\n                      id=\"confirm\"\n                      onChange={this.handleChangeConfirm}\n                    />\n                  </FormGroup>\n                </div>\n              </Row>\n              <Row>\n                <div className=\"col-8 d-flex justify-content-end\"></div>\n                <div className=\"col-4 d-flex justify-content-end\">\n                  <Button\n                    className=\"mr-2\"\n                    color=\"white\"\n                    onClick={this.changePass}\n                  >\n                    {t(\"batal\")}\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    color=\"netis-color\"\n                    onClick={this.cekSubmitData}\n                  >\n                    {t(\"simpan\")}\n                  </Button>\n                </div>\n              </Row>\n            </ModalBody>\n          </Modal>\n        </div >\n      </Navbar>\n    );\n  }\n}\n\nDefaultHeader.propTypes = {\n  t: PropTypes.func.isRequired,\n};\nconst mapStateToProps = ({ user, token }) => ({\n  user,\n  token,\n});\nexport default connect(mapStateToProps, { logout, setUser, getMe })(\n  withRouter(translate(DefaultHeader))\n);\n","import { lazy } from \"react\";\n\nconst ProfessionalDashboard = lazy(() =>\n  import(\"../../views/Menu/Professionals/ProfessionalDashboard\")\n)\n\nconst ClientDashboard = lazy(() =>\n  import(\"../../views/Menu/Clients/ClientDashboard\")\n)\n\nconst ProjectWrapper = lazy(() =>\n  import(\"../../views/Menu/Projects/ProjectWrapper\")\n)\nconst ClientWrapper = lazy(() =>\n  import(\"../../views/Menu/Clients/ClientWrapper\")\n)\nconst ProfessionalWrapper = lazy(() =>\n  import(\"../../views/Menu/Professionals/ProfessionalWrapper\")\n)\nconst Profile = lazy(() =>\n  import(\"../../views/Menu/Profile/Profile\")\n)\n\nexport default (user) => user.role === 'professional' ? menuProfessional() : menuClient();\n\nconst menuProfessional = () => [\n  {\n    url: \"/dashboard\",\n    component: ProfessionalDashboard,\n  },\n  {\n    url: \"/project\",\n    component: ProjectWrapper,\n  },\n  {\n    url: \"/client\",\n    component: ClientWrapper,\n  },\n  {\n    url: \"/profile\",\n    component: Profile\n  },\n]\n\nconst menuClient = () => [\n  {\n    url: \"/dashboard\",\n    component: ClientDashboard,\n  },\n  {\n    url: \"/professional\",\n    component: ProfessionalWrapper,\n  },\n  {\n    url: \"/project\",\n    component: ProjectWrapper,\n  },\n  {\n    url: \"/profile\",\n    component: Profile\n  },\n]","import React, { Component, Suspense } from 'react';\nimport * as router from 'react-router-dom';\nimport {\n    // AppSidebar, AppSidebarFooter, AppSidebarForm, AppSidebarHeader,\n    // AppSidebarNav2 as AppSidebarNav,\n    AppHeader\n} from '@coreui/react';\nimport { translate } from 'react-switch-lang';\nimport DefaultHeader from './DefaultHeader';\nimport { Container, Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport AuthRoute from './AuthRoute';\nimport Menu from './Menu';\n\nclass DefaultLayout extends Component {\n    generateRoutes = () => {\n        return Menu(this.props.user).map((props, idx) => (\n            <AuthRoute\n                key={idx}\n                path={props.url}\n                exact={!!props.exact}\n                component={props.component}\n                {...props}\n            />\n        ));\n    }\n    render() {\n        const { Switch, Redirect } = router;\n        return (\n            <div className=\"app\">\n                <AppHeader fixed><DefaultHeader /></AppHeader>\n                <div className=\"app-body\">\n                    <main className=\"main\">\n                        <Container className=\"mt-5\">\n                            <Suspense\n                                fallback={<div\n                                    style={{\n                                        position: \"absolute\",\n                                        top: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        left: 0,\n                                        background: \"rgba(255,255,255, 0.5)\",\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\",\n                                    }}\n                                >\n                                    <Spinner style={{ width: 48, height: 48 }} />\n                                </div>}\n                            >\n                                <Switch>\n                                    <Redirect exact from=\"/home\" to=\"/dashboard\" />\n                                    {this.generateRoutes()}\n                                </Switch>\n                            </Suspense>\n                        </Container>\n                    </main>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (reduxState) => ({ user: reduxState.user })\n\nexport default connect(mapStateToProps)(translate(DefaultLayout));\n","import 'moment/locale/id';\n\nexport default {\n    id: {\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lalu',\n            s: 'beberapa detik',\n            ss: '%d detik',\n            m: '1 menit',\n            mm: '%d menit',\n            h: '1 jam',\n            hh: '%d jam',\n            d: '1 hari',\n            dd: '%d hari',\n            M: '1 bulan',\n            MM: '%d bulan',\n            y: '1 tahun',\n            yy: '%d tahun',\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Col,\n  // Container,\n  Input,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../../actions/auth\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Link } from \"react-router-dom\";\nimport { translate } from \"react-switch-lang\";\nimport langUtils from \"../../../utils/language/index\";\n\ntoast.configure();\nclass Login extends Component {\n  constructor(props) {\n    console.log(props)\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: null,\n      update: \"0\",\n      loading: false,\n      showPassword: false,\n    };\n  }\n\n  closeLocalError = () => {\n    this.setState({ error: null });\n  };\n  handleChange = (e) => {\n    this.setState({\n      update: \"0\",\n      email: `${e.target.name === \"email\" ? e.target.value.trim() : this.state.email\n        }`,\n      password: `${e.target.name === \"password\" ? e.target.value : this.state.password\n        }`,\n    });\n  };\n  async loginProcess() {\n    var email = this.state.email;\n    var password = this.state.password;\n    // eslint-disable-next-line\n    const regexMatch = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n    if (!regexMatch) {\n      toast.error('Masukkan email dengan benar')\n      return;\n    }\n    await this.props.login({ email, password });\n    this.setState({\n      update: \"1\",\n      loading: true,\n    });\n  }\n  handleLogin = (e) => {\n    e.preventDefault();\n    this.setState({\n      loading: true,\n    });\n    this.loginProcess();\n    this.setState({\n      loading: false,\n    });\n  };\n  onSelectFlag = (countryCode) => {\n    this.handleSetLanguage(countryCode);\n  };\n  handleSetLanguage = (key) => {\n    langUtils.setLanguage(key);\n  };\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"d-flex justify-content-center align-items-center login-form\">\n        <Row>\n          <Col md=\"12\">\n            <form onSubmit={this.handleLogin} className=\"my-auto input-form\">\n              <div className=\"login-form-card\">\n                <div className=\"form-group mt-2 mb-3 position-relative d-flex align-items-center\">\n                  <Input style={{ borderRadius: \"8px\" }} type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" autoFocus inputMode=\"email\" autoComplete=\"username\" onChange={this.handleChange} />\n                  <i className=\"fa fa-envelope icon-inside-left text-netis-primary\" />\n                </div>\n                <div className=\"form-group mb-3 position-relative d-flex align-items-center\">\n                  <Input style={{ borderRadius: \"8px\" }} type={this.state.showPassword ? 'text' : 'password'} id=\"password\" name=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" onChange={this.handleChange} />\n                  <i className=\"fa fa-lock icon-inside-left text-netis-primary\" />\n                  <i className={`fa fa-eye-slash icon-see-password ${!this.state.showPassword && `text-secondary`}`}\n                    onClick={() => this.setState({ showPassword: !this.state.showPassword })}\n                  />\n                </div>\n                {/* <div className=\"text-left\">\n                  <Link to=\"/forgot\" style={{ color: '#dc3f46' }}>{t('Lupa Kata Sandi')} ? </Link>\n                </div> */}\n                <Button\n                  className=\"login-submit\"\n                  disabled={this.props.isLoading || !this.state.email || !this.state.password}\n                  style={{ borderRadius: \"8px\" }}\n                >\n                  {this.props.isLoading ? (\n                    <>\n                      <Spinner color=\"light\" size=\"sm\" /> Loading\n                    </>\n                  ) : (\n                    \"Masuk\"\n                  )}\n                </Button>\n              </div>\n            </form>\n            <h6 className=\"mt-2\" style={{ color: '#616161' }}>\n              Belum memiliki akun? Silahkan <Link to=\"/register\" style={{ color: \"#18568B\" }}><i>{t(\"Daftar\")}</i></Link>\n            </h6>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  error: state.error,\n  isLoading: state.isLoading,\n});\n\nexport default connect(mapStateToProps, { login })(translate(Login));\n","import React, { memo, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Navbar, NavbarBrand, NavbarToggler, NavItem, Nav, Collapse, Modal, Container, ModalBody, ModalHeader, Row, Col, Button } from \"reactstrap\";\n// import langUtils from \"../../utils/language/index\";\nimport { translate, t } from \"react-switch-lang\";\nimport Login from '../Auth/Login/Login';\n// import * as moment from \"moment\";\n\nfunction NavbarLandingPage() {\n  const location = useLocation()\n  const [openDrawer, setOpenDrawer] = useState(false)\n  const [modalLogin, setModalLogin] = useState(false)\n  const [modalRegister, setModalRegister] = useState(false)\n\n  const toggleLogin = () => {\n    setModalLogin(!modalLogin)\n  }\n\n  const toggleRegister = () => {\n    setModalRegister(!modalRegister)\n  }\n\n  const toggleNavbar = () => {\n    setOpenDrawer(true)\n  }\n\n  const closeDrawer = () => {\n    setOpenDrawer(false)\n  }\n\n  const getNavItemClass = (pos) =>\n    pos === 'home' ? \"mr-3 active\" : \"mr-3\";\n\n  return (\n    <>\n      <Navbar\n        color=\"white\"\n        className=\"navbar-expand-md fixed-top navbar-landigpage\"\n        light\n      >\n        <Container>\n          <NavbarBrand href=\"/\" className=\"mr-auto\">\n            P-Platform\n          </NavbarBrand>\n          <div className=\"ml-auto d-flex\">\n            <Collapse isOpen={!true} navbar>\n              <Nav navbar>\n                <NavItem\n                  className={location.pathname === '/about' ? 'active-navbar' : ''}\n                >\n                  <Link className=\"custom-nav\" to=\"/about\">\n                    {t('About')}\n                  </Link>\n                </NavItem>\n                <NavItem\n                  className={location.pathname === '/faq' ? 'active-navbar' : ''}\n                >\n                  <Link className=\"custom-nav\" to=\"/faq\">\n                    {t(\"FAQ\")}\n                  </Link>\n                </NavItem>\n                <NavItem\n                  className={location.pathname === '/contact' ? 'active-navbar' : ''}\n                >\n                  <Link className=\"custom-nav\" to=\"/contact\">\n                    {t(\"Contact\")}\n                  </Link>\n                </NavItem>\n                <NavItem className=\"nav-button\">\n                  <div\n                    className=\"btn button-landing px-2\"\n                    onClick={() => toggleRegister()}\n                    style={{ color: \"#fff\", cursor: \"pointer\" }}\n                  >\n                    {t(\"Register\")}\n                  </div>\n                </NavItem>\n                <NavItem className=\"nav-button\">\n                  <div\n                    className=\"btn button-landing px-2\"\n                    style={{ color: \"#fff\", cursor: \"pointer\" }}\n                    onClick={() => toggleLogin()}\n                  >\n                    {t(\"Login\")}\n                  </div>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n          <NavbarToggler onClick={toggleNavbar} className=\"\" />\n        </Container>\n      </Navbar>\n      <Modal\n        isOpen={openDrawer}\n        toggle={closeDrawer}\n        className={\"modal-drawer\"}\n      >\n        <div className=\"drawer container\">\n          <div className=\"drawer-header pb-2\">\n            <NavbarToggler\n              onClick={closeDrawer}\n              className=\"close-drawer ml-auto\"\n            />\n          </div>\n          <div className=\"text-center d-flex flex-column justify-content-center\">\n            <ul>\n              <li\n                className={`nav-item ${getNavItemClass(\"about\")}`}\n                onClick={() => {\n                  closeDrawer();\n                }}\n              >\n                <Link to=\"/about\" className=\"nav-link m-0 py-2\">\n                  {t('About')}\n                </Link>\n              </li>\n              <li\n                className={`nav-item ${getNavItemClass(\"faq\")}`}\n                onClick={() => {\n                  closeDrawer();\n                }}\n              >\n                <Link to=\"/faq\" className=\"nav-link m-0 py-2\">\n                  {t('FAQ')}\n                </Link>\n              </li>\n              <li\n                className={`nav-item ${getNavItemClass(\"contact\")}`}\n                onClick={() => {\n                  closeDrawer();\n                }}\n              >\n                <Link to=\"/contact\" className=\"nav-link m-0 py-2\">\n                  {t('Contact')}\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  className=\"btn button-landing px-2 py-2\"\n                  to=\"/login\"\n                  style={{ color: \"#fff\" }}\n                >\n                  Login\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className=\"btn button-landing px-2 py-2\"\n                  to=\"/login\"\n                  style={{ color: \"#fff\" }}\n                >\n                  Register\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </Modal>\n      <ModalLogin isOpen={modalLogin} toggle={(e) => toggleLogin(e)} />\n      <ModalRegister isOpen={modalRegister} toggle={(e) => toggleRegister(e)} />\n    </>\n  )\n}\n\nexport const ModalLogin = memo(({ isOpen, toggle }) => {\n\n  const handleToggle = () => {\n    toggle(false)\n  }\n  return (\n    <Modal isOpen={isOpen} toggle={() => handleToggle()}>\n      <ModalHeader toggle={() => handleToggle()}>Login</ModalHeader>\n      <ModalBody>\n        <Login />\n      </ModalBody>\n    </Modal>\n  )\n})\n\nexport const ModalRegister = memo(({ isOpen, toggle }) => {\n  const [showClientType, setShowClientType] = useState(false)\n  const handleToggle = () => {\n    toggle(false)\n  }\n  return (\n    <Modal isOpen={isOpen} toggle={() => handleToggle()}>\n      <ModalHeader toggle={() => handleToggle()}>Register</ModalHeader>\n      <ModalBody className=\"p-3\">\n        <Row className=\"text-center\">\n          <Col xs=\"12\">\n            Register as\n          </Col>\n          <Col xs=\"12\" className=\"mb-3\">\n            <Link\n              to={{\n                pathname: \"/register\",\n                search: `?form=professional`,\n                hash: 'registrantInformation'\n              }}\n              style={{ color: \"#fff\", textDecoration: 'none' }}\n              onClick={() => {\n                handleToggle()\n                localStorage.setItem(\"registrationForm\", 'professional');\n              }}\n            >\n              <Button color=\"primary\" block>Professional</Button>\n            </Link>\n          </Col>\n          <Col xs=\"12\">\n            <Row>\n              <Col xs=\"12\" className=\"mb-3\">\n                <Button color=\"warning\" block onClick={() => setShowClientType(!showClientType)}>Client</Button>\n              </Col>\n              {showClientType &&\n                <>\n                  <Col xs=\"6\">\n                    <Link\n                      to={{\n                        pathname: \"/register\",\n                        search: `?form=business`,\n                        hash: 'companyInformation'\n                      }}\n                      style={{ color: \"#fff\", textDecoration: 'none' }}\n                      onClick={() => {\n                        handleToggle()\n                        localStorage.setItem(\"registrationForm\", 'business');\n                      }}\n                    >\n                      <Button color=\"info\" block>Business Entity</Button>\n                    </Link>\n                  </Col>\n                  <Col xs=\"6\">\n                    <Link\n                      to={{\n                        pathname: \"/register\",\n                        search: `?form=individual`,\n                        hash: 'registrantInformation'\n                      }}\n                      style={{ color: \"#fff\", textDecoration: 'none' }}\n                      onClick={() => {\n                        handleToggle()\n                        localStorage.setItem(\"registrationForm\", 'individual');\n                      }}\n                    >\n                      <Button color=\"secondary\" block>Individual</Button>\n                    </Link>\n                  </Col>\n                </>\n              }\n            </Row>\n          </Col>\n        </Row>\n      </ModalBody>\n    </Modal>\n  )\n})\n\nexport default translate(NavbarLandingPage)\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport NavbarLandingPage from './Navbar'\n// import Footer from './Footer'\n\nfunction PageLayout(props) {\n\n  const windowOnScroll = () => {\n    if (window.scrollY > 0) {\n      if (\n        !document.getElementsByTagName(\"nav\")[0].classList.contains(\"shadow-sm\")\n      ) {\n        document.getElementsByTagName(\"nav\")[0].classList.add(\"shadow-sm\");\n      }\n    } else {\n      if (\n        document.getElementsByTagName(\"nav\")[0].classList.contains(\"shadow-sm\")\n      ) {\n        document.getElementsByTagName(\"nav\")[0].classList.remove(\"shadow-sm\");\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", windowOnScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", windowOnScroll);\n\n    }\n  })\n\n  return (\n    <div className=\"container\">\n      <NavbarLandingPage />\n      <div className=\"wrapper-landing-page\">\n        {props.children}\n      </div>\n      {/* {props.footer === false ? null : <Footer />} */}\n    </div>\n  );\n}\nPageLayout.propTypes = {\n  children: PropTypes.node,\n  footer: PropTypes.bool,\n};\nPageLayout.defaultTypes = {\n  footer: true,\n};\nexport default PageLayout;\n","import React from 'react';\nimport { translate } from \"react-switch-lang\";\nimport PageLayout from './PageLayout';\n\nfunction LandingPage() {\n  return (\n    <PageLayout>\n      Home\n    </PageLayout>\n  )\n}\n\nexport default translate(LandingPage)\n","import React from 'react'\nimport PageLayout from './PageLayout'\n\nfunction Contact(props, ref) {\n  return (\n    <PageLayout>\n      Contact\n    </PageLayout>\n  )\n}\n\nexport default Contact\n","import React from 'react'\nimport PageLayout from './PageLayout'\n\nfunction About() {\n\n  return (\n    <PageLayout>\n      About\n    </PageLayout>\n  )\n}\n\nexport default About\n","import React, { useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button, Col, Row } from 'reactstrap';\nimport { ArcherContainer, ArcherElement } from 'react-archer'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport const NavigationDot = (props) => {\n    const pageName = useCallback((i) => {\n        if (props.role === 'professional') {\n            if (i === 1) return 'Registrant Information'\n            if (i === 2) return 'Education'\n            if (i === 3) return 'Work Experience'\n            if (i === 4) return 'Project Experience'\n            if (i === 5) return 'Skill'\n            if (i === 6) return 'Document Verification'\n        }\n        if (props.role === 'business') {\n            if (i === 1) return 'Company Information'\n            if (i === 2) return 'Registrant Information'\n            if (i === 3) return 'Document Verification'\n        }\n        if (props.role === 'individual') {\n            if (i === 1) return 'Registrant Information'\n            if (i === 2) return 'Document Verification'\n        }\n    }, [props.role])\n\n    const pageIcon = useCallback((i) => {\n        if (props.role === 'professional') {\n            if (i === 1) return 'user'\n            if (i === 2) return 'university'\n            if (i === 3) return 'building'\n            if (i === 4) return 'laptop-house'\n            if (i === 5) return 'briefcase'\n            if (i === 6) return 'book'\n        }\n        if (props.role === 'business') {\n            if (i === 1) return 'building'\n            if (i === 2) return 'user'\n            if (i === 3) return 'book'\n        }\n        if (props.role === 'individual') {\n            if (i === 1) return 'user'\n            if (i === 2) return 'book'\n        }\n    }, [props.role])\n\n    const dots = [];\n    for (let i = 1; i <= props.totalSteps; i += 1) {\n        dots.push(i);\n    }\n\n    return (\n        <div className=\"register-nav mb-4\">\n            <div className={`mb-3 mb-md-3 mx-auto`} style={{ width: '80%' }}>\n                <ArcherContainer>\n                    <Row>\n                        {dots.map((p, i) => (\n                            <Col className=\"text-center\" key={i}>\n                                <ArcherElement\n                                    id={`step-${i}`}\n                                    relations={i + 1 !== props.totalSteps ? [\n                                        {\n                                            targetId: `step-${i + 1}`,\n                                            targetAnchor: 'middle',\n                                            sourceAnchor: 'middle',\n                                            style: { strokeColor: '#f7b190', strokeWidth: 5, endMarker: false },\n                                        },\n                                    ] : []}\n                                >\n                                    <div\n                                        className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                        style={{ backgroundColor: props.currentStep === i + 1 ? '#f7b190' : '#fff', border: 'solid 1px #f7b190', width: '60px', height: '60px' }}\n                                    // onClick={() => props.goToStep(i + 1)}\n                                    >\n                                        <FontAwesomeIcon icon={pageIcon(i + 1)} color={`${props.currentStep === i + 1 ? '#fff' : '#f7b190'}`} size=\"2x\" />\n                                    </div>\n                                </ArcherElement>\n                                <span className=\"mt-2\">\n                                    <br />\n                                    {pageName(i + 1)}\n                                </span>\n                            </Col>\n                        ))}\n                    </Row>\n                </ArcherContainer>\n            </div>\n        </div>\n    );\n};\n\nexport const NavigationPage = (props) => {\n    const location = useLocation();\n    return (\n        <div className={`d-flex ${(location.hash !== '#registrantInformation' || location.hash === '#companyInformation') && location.hash !== '#documentVerification' ? 'justify-content-between' : (location.hash === '#registrantInformation' || location.hash === '#companyInformation' ? 'justify-content-end' : '')}`}>\n            {(location.hash !== '#registrantInformation' || location.hash === '#companyInformation') && <Button color=\"primary\" onClick={props.SW.previousStep}>Previous</Button>}\n            {location.hash !== '#documentVerification' && <Button color=\"primary\" onClick={props.SW.nextStep}>Next</Button>}\n        </div>\n    )\n};\n\nexport const Stats = ({\n    currentStep,\n    firstStep,\n    goToStep,\n    lastStep,\n    nextStep,\n    previousStep,\n    totalSteps,\n    step,\n}) => (\n    <div className={`d-flex ${step > 1 ? 'justify-content-between' : (step === 1 ? 'justify-content-end' : '')}`}>\n        {step > 1 &&\n            <Button color=\"primary\" type=\"submit\" onClick={previousStep}>Back</Button>\n        }\n        {step < totalSteps && step !== totalSteps &&\n            <Button color=\"primary\" type=\"submit\" onClick={nextStep}>Next</Button>\n        }\n        {step === totalSteps &&\n            <Button color=\"primary\" type=\"submit\" onClick={nextStep}>Finish</Button>\n        }\n    </div>\n);","import React, { useCallback, useMemo } from \"react\"\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { Card, CardBody, Row, Col, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport Select from 'react-select';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport moment from \"moment\";\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\n\n\nexport default (props) => {\n    let getLocalStorage;\n    if (props.registrationForm === 'professional') getLocalStorage = JSON.parse(localStorage.getItem('registrationProfessional'))\n    if (props.registrationForm === 'business') getLocalStorage = JSON.parse(localStorage.getItem('registrationBusiness'))\n    if (props.registrationForm === 'individual') getLocalStorage = JSON.parse(localStorage.getItem('registrationIndividual'))\n\n    const ValidationFormSchema = () => {\n        let optional;\n        if (props.registrationForm === 'individual') optional = { sector: Yup.string().required().label('Sector') }\n        return Yup.object().shape({\n            ...optional,\n            firstName: Yup.string().required().label('First Name'),\n            lastName: Yup.string().required().label('Last Name'),\n            gender: Yup.string().required().oneOf(['L', 'P']).label('Gender'),\n            dateOfBirth: Yup.string().required().label('Date of Birth'),\n            idType: Yup.string().required().label('ID Type'),\n            idNumber: Yup.string().required().label('ID Number'),\n            npwpNumber: Yup.string().required().label('NPWP Number'),\n            address: Yup.string().required().label('Address'),\n            province: Yup.string().required().label('Province'),\n            phone: Yup.string().required().label('Phone'),\n            email: Yup.string().required().email().label('Email'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit } = useFormik({\n        initialValues: {\n            firstName: getLocalStorage?.registrantForm?.firstName ?? '',\n            lastName: getLocalStorage?.registrantForm?.lastName ?? '',\n            gender: getLocalStorage?.registrantForm?.gender ?? '',\n            dateOfBirth: getLocalStorage?.registrantForm?.dateOfBirth ? moment(getLocalStorage?.registrantForm?.dateOfBirth) : '',\n            idType: { label: 'KTP', value: 'ktp' },\n            idNumber: getLocalStorage?.registrantForm?.idNumber ?? '',\n            npwpNumber: getLocalStorage?.registrantForm?.npwpNumber ?? '',\n            address: getLocalStorage?.registrantForm?.address ?? '',\n            province: getLocalStorage?.registrantForm?.province ?? '',\n            phone: getLocalStorage?.registrantForm?.phone ?? '',\n            email: getLocalStorage?.registrantForm?.email ?? '',\n            sector: '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><RegistrantInformationForm registrantData={values} setRegistrantData={setValues} touched={touched} errors={errors} {...props} /></Col>\n            <Col xs=\"12\"><ContactInformationForm contactData={values} setContactData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n\nexport const RegistrantInformationForm = ({ registrantData, setRegistrantData, touched, errors, registrationForm }) => {\n    const idType = [\n        { label: 'KTP', value: 'ktp' },\n    ]\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeFirstName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, firstName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeLastName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, lastName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeSector = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, sector: e }))\n    }, [setRegistrantData])\n\n    const handleChangeGender = useCallback((e) => {\n        const { value, checked } = e.target;\n        setRegistrantData(old => ({ ...old, gender: checked ? value : '' }))\n    }, [setRegistrantData])\n\n    const handleChangeDateOfBirth = useCallback((value) => {\n        setRegistrantData(old => ({ ...old, dateOfBirth: value }))\n    }, [setRegistrantData])\n\n    const handleChangeIdType = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, idType: e }))\n    }, [setRegistrantData])\n\n    const handleChangeIdNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, idNumber: value }))\n    }, [setRegistrantData])\n\n    const handleChangeNpwpNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, npwpNumber: value }))\n    }, [setRegistrantData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"firstName\">First Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={registrantData.firstName} onChange={(e) => handleChangeFirstName(e)} placeholder=\"First Name Field...\" />\n                                {touched.firstName && errors.firstName && <small className=\"text-danger\">{errors.firstName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"lastName\">Last Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={registrantData.lastName} onChange={(e) => handleChangeLastName(e)} placeholder=\"Last Name Field...\" />\n                                {touched.lastName && errors.lastName && <small className=\"text-danger\">{errors.lastName}</small>}\n                            </Col>\n                        </Row>\n                        {registrationForm === 'individual' &&\n                            <Row className=\"my-3\">\n                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                    <Label for=\"sector\">Sector</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                    <Select\n                                        options={sectors}\n                                        placeholder=\"Choose a socter...\"\n                                        value={registrantData.sector}\n                                        onChange={(e) => handleChangeSector(e)}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    />\n                                    {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                                </Col>\n                            </Row>\n                        }\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"gender\">Gender</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"male\" value=\"L\" checked={registrantData.gender === \"L\" ? true : false} onChange={(e) => handleChangeGender(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"male\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Male\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"female\" value=\"P\" checked={registrantData.gender === \"P\" ? true : false} onChange={(e) => handleChangeGender(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"female\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Female\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.gender && errors.gender && <small className=\"text-danger\">{errors.gender}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"dateOfBirth\">Date of Birth</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <DateRangePicker\n                                    initialSettings={{\n                                        singleDatePicker: true,\n                                        showDropdowns: true,\n                                        startDate: new Date(),\n                                        maxDate: new Date(),\n                                        autoApply: true,\n                                    }}\n                                    onApply={(e, p) => handleChangeDateOfBirth(p.startDate)}\n                                >\n                                    <div id=\"reportrange\" style={{ background: '#fff', cursor: 'pointer', padding: '5px 10px', border: '1px solid #ccc', width: '100%' }}>\n                                        <i className=\"fa fa-calendar mr-2\"></i><span>{registrantData.dateOfBirth ? registrantData.dateOfBirth.format('DD/MM/YYYY') : 'DD/MMMM/YYYY'}</span> <i className=\"fa fa-caret-down float-right\"></i>\n                                    </div>\n                                </DateRangePicker>\n                                {touched.dateOfBirth && errors.dateOfBirth && <small className=\"text-danger\">{errors.dateOfBirth}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idType\">ID Type</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={idType}\n                                    placeholder=\"Choose id type...\"\n                                    value={registrantData.idType}\n                                    onChange={(e) => handleChangeIdType(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.idType && errors.idType && <small className=\"text-danger\">{errors.idType}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idNumber\">ID Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"idNumber\" id=\"idNumber\" value={registrantData.idNumber} onChange={(e) => handleChangeIdNumber(e)} placeholder=\"ID Number Field...\" />\n                                {touched.idNumber && errors.idNumber && <small className=\"text-danger\">{errors.idNumber}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"npwpNumber\">NPWP Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"npwpNumber\" id=\"npwpNumber\" value={registrantData.npwpNumber} onChange={(e) => handleChangeNpwpNumber(e)} placeholder=\"NPWP Number Field...\" />\n                                {touched.npwpNumber && errors.npwpNumber && <small className=\"text-danger\">{errors.npwpNumber}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card >\n    );\n}\n\nexport const ContactInformationForm = ({ contactData, setContactData, touched, errors }) => {\n    const { data: getProvince } = useDataProvinces();\n    const province = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n    const handleChangeProvince = useCallback((e) => {\n        setContactData(old => ({ ...old, province: e }))\n    }, [setContactData])\n\n    const handleChangeAddress = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, address: value }))\n    }, [setContactData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, phone: value }))\n    }, [setContactData])\n\n    const handleChangeEmail = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, email: value }))\n    }, [setContactData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">CONTACT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"address\">Address</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"address\"\n                                    id=\"address\"\n                                    className=\"form-control\"\n                                    placeholder=\"Address Field...\"\n                                    value={contactData.address}\n                                    onChange={(e) => handleChangeAddress(e)}\n                                />\n                                {touched.address && errors.address && <small className=\"text-danger\">{errors.address}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"province\">Province</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={province}\n                                    placeholder=\"Choose province...\"\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={contactData.province}\n                                    onChange={(e) => handleChangeProvince(e)}\n                                />\n                                {touched.province && errors.province && <small className=\"text-danger\">{errors.province}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" value={contactData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Phone Field...\" />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"email\">Email</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={contactData.email} onChange={(e) => handleChangeEmail(e)} placeholder=\"Email Field...\" />\n                                {touched.email && errors.email && <small className=\"text-danger\">{errors.email}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label } from \"reactstrap\";\nimport Select from 'react-select';\nimport SelectYear from \"../../../../components/SelectYear\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataEducationDegrees from \"../../../../hooks/useDataEducationDegrees\";\nimport useDataEducationFields from \"../../../../hooks/useDataEducationFields\";\nimport useDataSchools from \"../../../../hooks/useDataSchools\";\n\nexport default (props) => {\n    const { data: getDegree } = useDataEducationDegrees();\n    const degree = useMemo(() => getDegree.map(p => ({ label: p.name, value: p.id })), [getDegree])\n\n    const { data: getSchool } = useDataSchools();\n    const school = useMemo(() => getSchool.map(p => ({ label: p.name, value: p.id })), [getSchool])\n\n    const { data: getEduField } = useDataEducationFields();\n    const eduField = useMemo(() => getEduField.map(p => ({ label: p.name, value: p.id })), [getEduField])\n\n    const ValidationFormSchema = () => {\n        return Yup.array().of(\n            Yup.object().shape({\n                degree: Yup.string().required().label('Degree'),\n                school: Yup.string().required().label('School'),\n                education: Yup.string().required().label('Education'),\n                graduationYear: Yup.string().required().label('Graduation Year'),\n            })\n        )\n    }\n\n    const { values: educationData, touched, errors, setValues: setEducationData, handleSubmit } = useFormik({\n        initialValues: [\n            {\n                id: 1,\n                degree: '',\n                school: '',\n                education: '',\n                graduationYear: '',\n            }\n        ],\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeDegree = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, degree: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeSchool = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, school: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeEducation = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, education: e }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeGraduationYear = useCallback((e, i) => {\n        const { value } = e.target;\n        console.log(value);\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, graduationYear: value }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleAddEducationData = useCallback(() => {\n        setEducationData(old => ([...old, { id: old[old.length - 1].id + 1, degree: '', school: '', education: '', graduationYear: '' }]))\n    }, [setEducationData])\n\n    const handleDeleteEducationData = useCallback((i) => {\n        setEducationData(old => ([...old].filter(edu => edu.id !== i)))\n    }, [setEducationData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Education</div>\n                            </Col>\n                            {educationData.map((edu, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <Card className=\"shadow-sm\">\n                                        <CardBody>\n                                            {i > 0 &&\n                                                <Row className=\"my-3\">\n                                                    <Col xs=\"12\">\n                                                        <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteEducationData(edu.id)}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                    </Col>\n                                                </Row>\n                                            }\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"degree\">Degree</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={degree}\n                                                        placeholder=\"Choose degree...\"\n                                                        onChange={(e) => handleChangeDegree(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.degree}\n                                                    />\n                                                    {touched[i]?.degree && errors[i]?.degree && <small className=\"text-danger\">{errors[i]?.degree}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"school\">School</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={school}\n                                                        placeholder=\"Choose school...\"\n                                                        onChange={(e) => handleChangeSchool(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.school}\n                                                    />\n                                                    {touched[i]?.school && errors[i]?.school && <small className=\"text-danger\">{errors[i]?.school}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"education\">Education</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={eduField}\n                                                        placeholder=\"Choose Education Field...\"\n                                                        onChange={(e) => handleChangeEducation(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.education}\n                                                    />\n                                                    {touched[i]?.education && errors[i]?.education && <small className=\"text-danger\">{errors[i]?.education}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"graduationYear\">Graduation year</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"number\" name=\"graduationYear\" id=\"graduationYear\" value={edu.graduationYear} onChange={(e) => handleChangeGraduationYear(e, edu.id)} placeholder=\"Graduation Year Field...\" />\n                                                    {touched[i]?.graduationYear && errors[i]?.graduationYear && <small className=\"text-danger\">{errors[i]?.graduationYear}</small>}\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ))}\n                            <Col xs=\"12\">\n                                <Button color=\"success\" className=\"float-right\" onClick={handleAddEducationData}>Add Education</Button>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Datepicker from \"react-datepicker\";\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\n\nexport default (props) => {\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const { data: getProvince } = useDataProvinces();\n    const provinces = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const employementTypes = [\n        { label: 'Self employed', value: 'self_employed' },\n        { label: 'Employee', value: 'employee' },\n        { label: 'Public servant', value: 'public_servant' },\n        { label: 'Retiree', value: 'retiree' },\n        { label: 'Unemployed', value: 'unemployed' },\n    ]\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const ValidationFormSchema = () => {\n        return Yup.array().of(\n            Yup.object().shape({\n                job: Yup.string().required().label('Job'),\n                company: Yup.string().required().label('Company Name'),\n                sector: Yup.string().required().label('Sector'),\n                employementType: Yup.string().required().label('Employement Type'),\n                location: Yup.string().required().label('Location'),\n                startDate: Yup.string().required().label('Start Date'),\n                endDate: Yup.string().required().label('End Date'),\n                skills: Yup.string().required().label('Skills'),\n            })\n        )\n    }\n\n    const { values: workExperienceData, touched, errors, setValues: setWorkExperienceData, handleSubmit } = useFormik({\n        initialValues: [\n            {\n                id: 1,\n                job: '',\n                company: '',\n                sector: '',\n                employementType: '',\n                location: '',\n                startDate: '',\n                endDate: '',\n                endDatePresent: '',\n                skills: [],\n            }\n        ],\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeSector = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, sector: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeEmployementType = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, employementType: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeLocation = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, location: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeJob = useCallback((e, i) => {\n        const { value } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, job: value }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeCompany = useCallback((e, i) => {\n        const { value } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, company: value }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeStartDate = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, startDate: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeEndDate = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, endDate: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangePresent = useCallback((e, i) => {\n        const { value, checked } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, endDate: new Date(), endDatePresent: checked ? value : '' }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeSkills = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, skills: e ?? [] }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleAddWorkExperienceData = useCallback(() => {\n        setWorkExperienceData(old => ([...old, { id: old[old.length - 1].id + 1, job: '', company: '', sector: '', employementType: '', location: '', startDate: '', endDate: '', endDatePresent: '', skills: [], }]))\n    }, [setWorkExperienceData])\n\n    const handleDeleteWorkExperienceData = useCallback((i) => {\n        setWorkExperienceData(old => ([...old].filter(work => work.id !== i)))\n    }, [setWorkExperienceData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Work Experience</div>\n                            </Col>\n                            {workExperienceData.map((work, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <Card className=\"shadow-sm\">\n                                        <CardBody>\n                                            {i > 0 &&\n                                                <Row className=\"my-3\">\n                                                    <Col xs=\"12\">\n                                                        <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteWorkExperienceData(work.id)}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                    </Col>\n                                                </Row>\n                                            }\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"job\">Job Title</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"text\" name=\"job\" id=\"job\" value={work.job} onChange={(e) => handleChangeJob(e, work.id)} placeholder=\"Job Title Field...\" />\n                                                    {touched[i]?.job && errors[i]?.job && <small className=\"text-danger\">{errors[i]?.job}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"job\">Company Name</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"text\" name=\"company\" id=\"company\" value={work.company} onChange={(e) => handleChangeCompany(e, work.id)} placeholder=\"Company Name Field...\" />\n                                                    {touched[i]?.company && errors[i]?.company && <small className=\"text-danger\">{errors[i]?.company}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"sector\">Sector</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={sectors}\n                                                        placeholder=\"Choose sector...\"\n                                                        onChange={(e) => handleChangeSector(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.sector}\n                                                    />\n                                                    {touched[i]?.sector && errors[i]?.sector && <small className=\"text-danger\">{errors[i]?.sector}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"employementType\">Employment Type</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={employementTypes}\n                                                        placeholder=\"Choose Employment Type...\"\n                                                        onChange={(e) => handleChangeEmployementType(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.employementType}\n                                                    />\n                                                    {touched[i]?.employementType && errors[i]?.employementType && <small className=\"text-danger\">{errors[i]?.employementType}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"location\">Location</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={provinces}\n                                                        placeholder=\"Choose Location...\"\n                                                        onChange={(e) => handleChangeLocation(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.location}\n                                                    />\n                                                    {touched[i]?.location && errors[i]?.location && <small className=\"text-danger\">{errors[i]?.location}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"startDate\">Start Date</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Datepicker\n                                                        required\n                                                        name=\"startDate\"\n                                                        selected={work.startDate}\n                                                        onChange={(e) => handleChangeStartDate(e, work.id)}\n                                                        showMonthYearPicker\n                                                        showFullMonthYearPicker\n                                                        showFourColumnMonthYearPicker\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMMM yyyy\"\n                                                        maxDate={new Date()}\n                                                        placeholderText=\"Select a date\"\n                                                        wrapperClassName=\"form-control\"\n                                                    />\n                                                    {touched[i]?.startDate && errors[i]?.startDate && <small className=\"text-danger\">{errors[i]?.startDate}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"endDate\">End Date</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Row>\n                                                        {!work.endDatePresent &&\n                                                            <Col xs=\"6\" md=\"4\" lg=\"5\">\n                                                                <Datepicker\n                                                                    required\n                                                                    name=\"endDate\"\n                                                                    selected={work.endDate}\n                                                                    onChange={(e) => handleChangeEndDate(e, work.id)}\n                                                                    showMonthYearPicker\n                                                                    showFullMonthYearPicker\n                                                                    showFourColumnMonthYearPicker\n                                                                    className=\"form-control\"\n                                                                    dateFormat=\"MMMM yyyy\"\n                                                                    minDate={work.startDate}\n                                                                    maxDate={new Date()}\n                                                                    placeholderText=\"Select a date\"\n                                                                    wrapperClassName=\"form-control\"\n                                                                />\n                                                            </Col>\n                                                        }\n                                                        <Col xs=\"6\" md=\"4\" lg=\"4\">\n                                                            <InputGroup>\n                                                                <InputGroupAddon addonType=\"prepend\">\n                                                                    <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                                        <CustomInput type=\"checkbox\" id={`present-${work.id}`} value=\"present\" checked={work.endDatePresent} onChange={(e) => handleChangePresent(e, work.id)} />\n                                                                    </InputGroupText>\n                                                                </InputGroupAddon>\n                                                                <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                                    Present\n                                                                </div>\n                                                            </InputGroup>\n                                                        </Col>\n                                                        <Col xs=\"12\">\n                                                            {touched[i]?.endDate && errors[i]?.endDate && <small className=\"text-danger\">{errors[i]?.endDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"skill\">Skill</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        closeMenuOnSelect={false}\n                                                        options={skills}\n                                                        isClearable\n                                                        isMulti\n                                                        placeholder=\"Choose some skills...\"\n                                                        onChange={(e) => handleChangeSkills(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.skills} />\n                                                    {touched[i]?.skills && errors[i]?.skills && <small className=\"text-danger\">{errors[i]?.skills}</small>}\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ))}\n                            <Col xs=\"12\">\n                                <Button color=\"success\" className=\"float-right\" onClick={handleAddWorkExperienceData}>Add Work Experience</Button>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Datepicker from \"react-datepicker\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\nimport useDataCountries from \"../../../../hooks/useDataCountries\";\n\nexport default (props) => {\n    const [hasProjectExperience, setHasProjectExperience] = useState(false);\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const { data: getProvince } = useDataProvinces();\n    const provinces = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const { data: getCountries } = useDataCountries();\n    const countries = useMemo(() => getCountries.map(p => ({ label: p.name, value: p.id })), [getCountries])\n\n    const ValidationFormSchema = () => {\n        if (!hasProjectExperience) return Yup.array().of(\n            Yup.object().shape({\n                projectName: Yup.string().label('Project Name'),\n            })\n        )\n        return Yup.array().of(\n            Yup.object().shape({\n                projectName: Yup.string().required().label('Project Name'),\n                client: Yup.string().required().label('Client Name'),\n                projectRole: Yup.string().required().label('Project Role'),\n                sector: Yup.string().required().label('Sector'),\n                province: Yup.string().required().label('province'),\n                startDate: Yup.string().required().label('Start Date'),\n                endDate: Yup.string().required().label('End Date'),\n                description: Yup.string().required().label('Description'),\n                skills: Yup.string().required().label('Skills'),\n            })\n        )\n    }\n\n    const { values: projectExperienceData, touched, errors, setValues: setProjectExperienceData, handleSubmit } = useFormik({\n        initialValues: [\n            {\n                id: 1,\n                projectName: '',\n                client: '',\n                projectRole: '',\n                sector: '',\n                province: '',\n                country: '',\n                startDate: '',\n                endDate: '',\n                description: '',\n                skills: [],\n            }\n        ],\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.hasValues(hasProjectExperience)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeSector = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, sector: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProvince = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, province: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeCountry = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, country: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProjectName = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, projectName: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeClient = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, client: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProjectRole = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, projectRole: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeStartDate = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, startDate: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeEndDate = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, endDate: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeDescription = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, description: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeSkills = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, skills: e ?? [] }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleAddprojectExperienceData = useCallback(() => {\n        setProjectExperienceData(old => ([...old, { id: old[old.length - 1].id + 1, projectName: '', client: '', projectRole: '', sector: '', province: '', startDate: '', endDate: '', description: '', skills: [], }]))\n    }, [setProjectExperienceData])\n\n    const handleDeleteprojectExperienceData = useCallback((i) => {\n        setProjectExperienceData(old => ([...old].filter(project => project.id !== i)))\n    }, [setProjectExperienceData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Project Experience</div>\n                            </Col>\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <InputGroup>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                            <CustomInput type=\"checkbox\" id=\"hasProjectExperience\" value=\"hasProjectExperience\" checked={hasProjectExperience} onChange={(e) => setHasProjectExperience(e.target.checked)} />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Label for=\"hasProjectExperience\" className=\"d-flex bg-transparent m-0 align-items-center\">\n                                        Do you have project experience?\n                                    </Label>\n                                </InputGroup>\n                            </Col>\n                            {hasProjectExperience &&\n                                <>\n                                    {projectExperienceData.map((project, i) => (\n                                        <Col xs=\"12\" key={i}>\n                                            <Card className=\"shadow-sm\">\n                                                <CardBody>\n                                                    {i > 0 &&\n                                                        <Row className=\"my-3\">\n                                                            <Col xs=\"12\">\n                                                                <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteprojectExperienceData(project.id)}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                            </Col>\n                                                        </Row>\n                                                    }\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"projectName\">Project Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"projectName\" id=\"projectName\" value={project.projectName} onChange={(e) => handleChangeProjectName(e, project.id)} placeholder=\"Job Title Field...\" />\n                                                            {touched[i]?.projectName && errors[i]?.projectName && <small className=\"text-danger\">{errors[i]?.projectName}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"client\">Client Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"client\" id=\"client\" value={project.client} onChange={(e) => handleChangeClient(e, project.id)} placeholder=\"Client Name Field...\" />\n                                                            {touched[i]?.client && errors[i]?.client && <small className=\"text-danger\">{errors[i]?.client}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"projectRole\">Project Role</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"projectRole\" id=\"projectRole\" value={project.projectRole} onChange={(e) => handleChangeProjectRole(e, project.id)} placeholder=\"Project Role Field...\" />\n                                                            {touched[i]?.projectRole && errors[i]?.projectRole && <small className=\"text-danger\">{errors[i]?.projectRole}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"sector\">Sector</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={sectors}\n                                                                placeholder=\"Choose sector...\"\n                                                                onChange={(e) => handleChangeSector(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.sector}\n                                                            />\n                                                            {touched[i]?.sector && errors[i]?.sector && <small className=\"text-danger\">{errors[i]?.sector}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"province\">Province</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={provinces}\n                                                                placeholder=\"Choose a Province...\"\n                                                                onChange={(e) => handleChangeProvince(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.province}\n                                                            />\n                                                            {touched[i]?.province && errors[i]?.province && <small className=\"text-danger\">{errors[i]?.province}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"countries\">Country</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={countries}\n                                                                placeholder=\"Choose a Country...\"\n                                                                onChange={(e) => handleChangeCountry(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.countries}\n                                                            />\n                                                            {touched[i]?.countries && errors[i]?.countries && <small className=\"text-danger\">{errors[i]?.countries}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"startDate\">Start Date</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"startDate\"\n                                                                selected={project.startDate}\n                                                                onChange={(e) => handleChangeStartDate(e, project.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                wrapperClassName=\"form-control\"\n                                                            />\n                                                            {touched[i]?.startDate && errors[i]?.startDate && <small className=\"text-danger\">{errors[i]?.startDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"endDate\">End Date</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"endDate\"\n                                                                selected={project.endDate}\n                                                                onChange={(e) => handleChangeEndDate(e, project.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                minDate={project.startDate}\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                wrapperClassName=\"form-control\"\n                                                            />\n                                                            {touched[i]?.endDate && errors[i]?.endDate && <small className=\"text-danger\">{errors[i]?.endDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"description\">Description</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <TextareaAutosize\n                                                                minRows={3}\n                                                                name=\"description\"\n                                                                id=\"description\"\n                                                                className=\"form-control\"\n                                                                placeholder=\"Description Field...\"\n                                                                value={project.description}\n                                                                onChange={(e) => handleChangeDescription(e, project.id)}\n                                                            />\n                                                            {touched[i]?.description && errors[i]?.description && <small className=\"text-danger\">{errors[i]?.description}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"skill\">Skill</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                closeMenuOnSelect={false}\n                                                                options={skills}\n                                                                isClearable\n                                                                isMulti\n                                                                placeholder=\"Choose some skills...\"\n                                                                onChange={(e) => handleChangeSkills(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.skills} />\n                                                            {touched[i]?.skills && errors[i]?.skills && <small className=\"text-danger\">{errors[i]?.skills}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                    ))}\n                                    <Col xs=\"12\">\n                                        <Button color=\"success\" className=\"float-right\" onClick={handleAddprojectExperienceData}>Add project Experience</Button>\n                                    </Col>\n                                </>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row >\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport Select from 'react-select';\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\n\nconst colorSkills = [\n    '#1372BA',\n    '#5380a2',\n    '#8453a2',\n    '#53a276',\n    '#a25353',\n    '#bfb327',\n    '#2733bf',\n    '#27bf4f'\n]\n\nexport default (props) => {\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            sectors: Yup.array().min(1).max(3).label('Sector'),\n            skills: Yup.array().min(1).max(5).label('Skills'),\n        })\n    }\n\n    const { values: skillSectorData, touched, errors, setValues: setSkillSectorData, handleSubmit } = useFormik({\n        initialValues: {\n            sectors: [],\n            skills: [],\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n    const colourStyles = {\n        multiValue: (styles, { data }) => {\n            const color = data.color;\n            return {\n                ...styles,\n                backgroundColor: color,\n            };\n        },\n        multiValueLabel: (styles, { data }) => ({\n            ...styles,\n            color: '#fff',\n        }),\n    };\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => {\n        const opt = []\n        const dataSectors = getSector.map(p => ({ label: p.name, value: p.id }))\n        dataSectors.map((v) => {\n            const dataOptions = skillSectorData.sectors?.find(u => u.value === v.value);\n            if (!dataOptions) opt.push({ ...v, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })\n            return dataOptions;\n        })\n\n        return opt\n    }, [skillSectorData.sectors, getSector])\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => {\n        const opt = []\n        const dataSkills = getSkills.map(p => ({ label: p.name, value: p.id }))\n        dataSkills.map((v) => {\n            const dataOptions = skillSectorData.skills?.find(u => u.value === v.value);\n            if (!dataOptions) opt.push({ ...v, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })\n            return dataOptions;\n        })\n\n        return opt\n    }, [skillSectorData.skills, getSkills])\n\n    const handleChangeSector = useCallback((e) => {\n        setSkillSectorData(old => ({ ...old, sectors: e ?? [] }))\n    }, [setSkillSectorData])\n\n    const handleChangeSkills = useCallback((e) => {\n        setSkillSectorData(old => ({ ...old, skills: e ?? [] }))\n    }, [setSkillSectorData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">My Top 5 Skills</div>\n                            </Col>\n                            {/* <Col xs=\"12\">\n                                <Card className=\"shadow-sm\">\n                                    <CardBody>\n                                        {skillSectorData.skills.map((skill, i) => (\n                                            <Badge key={i} color={colorSkills[i]} className=\"text-uppercase font-sm mx-1 text-light\">{skill.label}</Badge>\n                                        ))}\n                                    </CardBody>\n                                </Card>\n                            </Col> */}\n                            <Col xs=\"12\">\n                                <Select\n                                    closeMenuOnSelect={false}\n                                    options={skills}\n                                    isClearable\n                                    isMulti\n                                    placeholder=\"Choose some skills...\"\n                                    onChange={(e) => handleChangeSkills(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={skillSectorData.skills}\n                                    styles={colourStyles}\n                                    isOptionDisabled={(option) => skillSectorData.skills.length >= 5}\n                                />\n                                {touched.skills && errors.skills && <small className=\"text-danger\">{errors.skills}</small>}\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">My top 3 Sectors</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\">\n                                        <Select\n                                            closeMenuOnSelect={false}\n                                            options={sectors}\n                                            isClearable\n                                            isMulti\n                                            placeholder=\"Choose some sectors...\"\n                                            onChange={(e) => handleChangeSector(e)}\n                                            components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                            value={skillSectorData.sectors}\n                                            styles={colourStyles}\n                                            isOptionDisabled={(option) => skillSectorData.sectors.length >= 3}\n                                        />\n                                        {touched.sectors && errors.sectors && <small className=\"text-danger\">{errors.sectors}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useRef, useState } from \"react\"\nimport { toast } from \"react-toastify\";\nimport { Card, CardBody, Row, Col, Button, Label, Input, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport noImage from '../../../../assets/illustrations/image-error.png'\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default (props) => {\n    const npwpFile = useRef(null)\n    const regIdFile = useRef(null)\n    const photoFile = useRef(null)\n    const [showPassword, setShowPassword] = useState({\n        password: false,\n        passwordConfirmation: false,\n    })\n\n    console.log(props.registrationForm)\n    const ValidationFormSchema = () => {\n        let file;\n        if (props.registrationForm === 'professional') file = { npwp: Yup.string().required().label('Npwp File'), regId: Yup.string().required().label('Registrant ID File'), photo: Yup.string().required().label('Photo Profile File') }\n        if (props.registrationForm === 'business') file = { npwp: Yup.string().required().label('Npwp File') }\n        if (props.registrationForm === 'individual') file = { npwp: Yup.string().required().label('Npwp File'), regId: Yup.string().required().label('Registrant ID File') }\n\n        return Yup.object().shape({\n            ...file,\n            password: Yup.string().required().label('Password'),\n            passwordConfirmation: Yup.string().required('Password Confirmation is a required field').oneOf([Yup.ref('password'), null], 'Passwords must match'),\n            confirmed: Yup.boolean().oneOf([true], \"You must accept the terms and conditions\"),\n            privacy: Yup.boolean().oneOf([true], \"You must accept the Pinion's User Agreement and Privacy Policy\"),\n        })\n    }\n\n    const { values: verificationData, touched, errors, setValues: setVerificationData, handleSubmit } = useFormik({\n        initialValues: {\n            npwp: '',\n            regId: '',\n            photo: '',\n            password: '',\n            passwordConfirmation: '',\n            confirmed: false,\n            privacy: false,\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.onFinishRegistration()\n        }\n    })\n\n    const onErrorImage = useCallback((e) => {\n        e.target.src = noImage;\n        e.target.onerror = null;\n    }, [])\n\n    const onChangeNpwpFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, npwp: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangeRegIdFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, regId: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangePhotoFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, photo: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangePassword = useCallback((e) => {\n        const { value } = e.target\n        setVerificationData(old => ({ ...old, password: value }))\n    }, [setVerificationData])\n\n    const onChangePasswordConfirmation = useCallback((e) => {\n        const { value } = e.target\n        setVerificationData(old => ({ ...old, passwordConfirmation: value }))\n    }, [setVerificationData])\n\n    const onChangeConfirmation = useCallback((e) => {\n        const { checked } = e.target\n        setVerificationData(old => ({ ...old, confirmed: checked }))\n    }, [setVerificationData])\n\n    const onChangePrivacy = useCallback((e) => {\n        const { checked } = e.target\n        setVerificationData(old => ({ ...old, privacy: checked }))\n    }, [setVerificationData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm verification-process-form\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Verification Process</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                        <Label>Registrant NPWP</Label>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                        <div style={{ width: '200px', height: '200px' }}>\n                                            {verificationData?.npwp?.preview && <img src={verificationData?.npwp?.preview} alt=\"npwp\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                            <input type='file' ref={npwpFile} style={{ display: 'none' }} onChange={(e) => onChangeNpwpFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                            <Button\n                                                className={`btn border-0 upload-file-button ${verificationData?.npwp?.preview && 'filled'}`}\n                                                onClick={() => npwpFile.current.click()}\n                                            >\n                                                <i className=\"fa fa-2x fa-camera\" />\n                                                <br />\n                                                <div className=\"text-center d-none d-md-block\">\n                                                    Upload\n                                                    <br />\n                                                    <small>Max. 5 MB</small>\n                                                </div>\n                                            </Button>\n                                        </div>\n                                        {touched.npwp && errors.npwp && <small className=\"text-danger\">{errors.npwp}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                            {(props.registrationForm === 'professional' || props.registrationForm === 'individual') &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Registrant ID</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <div style={{ width: '200px', height: '200px' }}>\n                                                {verificationData?.regId?.preview && <img src={verificationData?.regId?.preview} alt=\"regId\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                                <input type='file' ref={regIdFile} style={{ display: 'none' }} onChange={(e) => onChangeRegIdFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                                <Button\n                                                    className={`btn border-0 upload-file-button ${verificationData?.regId?.preview && 'filled'}`}\n                                                    onClick={() => regIdFile.current.click()}\n                                                >\n                                                    <i className=\"fa fa-2x fa-camera\" />\n                                                    <br />\n                                                    <div className=\"text-center d-none d-md-block\">\n                                                        Upload\n                                                        <br />\n                                                        <small>Max. 5 MB</small>\n                                                    </div>\n                                                </Button>\n                                            </div>\n                                            {touched.regId && errors.regId && <small className=\"text-danger\">{errors.regId}</small>}\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                            {props.registrationForm === 'professional' &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Photo Profile</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <div style={{ width: '200px', height: '200px' }}>\n                                                {verificationData?.photo?.preview && <img src={verificationData?.photo?.preview} alt=\"profile\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                                <input type='file' ref={photoFile} style={{ display: 'none' }} onChange={(e) => onChangePhotoFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                                <Button\n                                                    className={`btn border-0 upload-file-button ${verificationData?.photo?.preview && 'filled'}`}\n                                                    onClick={() => photoFile.current.click()}\n                                                >\n                                                    <i className=\"fa fa-2x fa-camera\" />\n                                                    <br />\n                                                    <div className=\"text-center d-none d-md-block\">\n                                                        Upload\n                                                        <br />\n                                                        <small>Max. 5 MB</small>\n                                                    </div>\n                                                </Button>\n                                            </div>\n                                            {touched.photo && errors.photo && <small className=\"text-danger\">{errors.photo}</small>}\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm verification-process-form\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Password</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                        <Label>Password</Label>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                        <InputGroup>\n                                            <Input type={showPassword.password ? 'text' : 'password'} name=\"password\" id=\"password\" value={verificationData.password} onChange={(e) => onChangePassword(e)} placeholder=\"******\" />\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent\">\n                                                    <FontAwesomeIcon icon={showPassword.password ? 'eye-slash' : 'eye'} onClick={() => setShowPassword(old => ({ ...old, password: !old.password }))} />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                        {touched.password && errors.password && <small className=\"text-danger\">{errors.password}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                        <Label>Password Confirmation</Label>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                        <InputGroup>\n                                            <Input type={showPassword.passwordConfirmation ? 'text' : 'password'} name=\"passwordConfirmation\" id=\"passwordConfirmation\" value={verificationData.passwordConfirmation} onChange={(e) => onChangePasswordConfirmation(e)} placeholder=\"******\" />\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent\">\n                                                    <FontAwesomeIcon icon={showPassword.passwordConfirmation ? 'eye-slash' : 'eye'} onClick={() => setShowPassword(old => ({ ...old, passwordConfirmation: !old.passwordConfirmation }))} />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                        {touched.passwordConfirmation && errors.passwordConfirmation && <small className=\"text-danger\">{errors.passwordConfirmation}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm verification-process-form\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">APPLICATION</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"confirmed\" checked={verificationData.confirmed} onChange={(e) => onChangeConfirmation(e)} />\n                                                </InputGroupText>\n                                                <Label for=\"confirmed\" className={`d-flex bg-transparent p-0 m-0 align-items-center ${touched.confirmed && errors.confirmed && 'text-danger'}`} style={{ whiteSpace: 'normal' }}>\n                                                    I have reviewed and confirmed that this data is correct\n                                                </Label>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"privacy\" checked={verificationData.privacy} onChange={(e) => onChangePrivacy(e)} />\n                                                </InputGroupText>\n                                                <Label for=\"privacy\" className={`d-flex bg-transparent p-0 m-0 align-items-center ${touched.privacy && errors.privacy && 'text-danger'}`} style={{ whiteSpace: 'normal' }}>\n                                                    I confirm that I have read, consent and agree to Pinion's User Agreement and Privacy Policy\n                                                </Label>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row >\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport Select from 'react-select';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\n\n\nexport default (props) => {\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            businessName: Yup.string().required().label('Business Name'),\n            sector: Yup.string().required().label('Sector'),\n            companySize: Yup.string().required().oneOf(['<10', '11-50', '50-100', '100-500', '>500']).label('Company Size'),\n            aboutUs: Yup.string().required().label('About Us'),\n            npwpNumber: Yup.string().required().label('NPWP Number'),\n            address: Yup.string().required().label('Address'),\n            province: Yup.string().required().label('Province'),\n            phone: Yup.string().required().label('Phone'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit } = useFormik({\n        initialValues: {\n            businessName: '',\n            sector: '',\n            companySize: '',\n            aboutUs: '',\n            npwpNumber: '',\n            address: '',\n            province: '',\n            phone: '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><CompanyInformationForm companyInformationData={values} setCompanyInformationData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><ContactInformationForm contactData={values} setContactData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n\nconst CompanyInformationForm = ({ companyInformationData, setCompanyInformationData, touched, errors }) => {\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeBusinessName = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, businessName: value }))\n    }, [setCompanyInformationData])\n\n    const handleChangecompanySize = useCallback((e) => {\n        const { value, checked } = e.target;\n        setCompanyInformationData(old => ({ ...old, companySize: checked ? value : '' }))\n    }, [setCompanyInformationData])\n\n    const handleChangeSector = useCallback((e) => {\n        setCompanyInformationData(old => ({ ...old, sector: e }))\n    }, [setCompanyInformationData])\n\n    const handleChangeNpwpNumber = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, npwpNumber: value }))\n    }, [setCompanyInformationData])\n\n    const handleChangeAboutUs = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, aboutUs: value }))\n    }, [setCompanyInformationData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"businessName\">Business Entity</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"businessName\" id=\"businessName\" value={companyInformationData.businessName} onChange={(e) => handleChangeBusinessName(e)} placeholder=\"Business Entity Field...\" />\n                                {touched.businessName && errors.businessName && <small className=\"text-danger\">{errors.businessName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"sector\">Sector</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={sectors}\n                                    placeholder=\"Choose a socter...\"\n                                    value={companyInformationData.sector}\n                                    onChange={(e) => handleChangeSector(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"companySize\">Company Size</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size1\" value=\"<10\" checked={companyInformationData.companySize === \"<10\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size1\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            {\"<10\"}\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size2\" value=\"11-50\" checked={companyInformationData.companySize === \"11-50\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size2\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            11-50\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size3\" value=\"50-100\" checked={companyInformationData.companySize === \"50-100\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size3\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            50-100\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size4\" value=\"100-500\" checked={companyInformationData.companySize === \"100-500\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size4\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            100-500\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size1\" value=\">500\" checked={companyInformationData.companySize === \">500\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size1\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            {\">500\"}\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.companySize && errors.companySize && <small className=\"text-danger\">{errors.companySize}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"aboutUs\">About Us</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"aboutUs\"\n                                    id=\"aboutUs\"\n                                    className=\"form-control\"\n                                    placeholder=\"About Us Field...\"\n                                    value={companyInformationData.aboutUs}\n                                    onChange={(e) => handleChangeAboutUs(e)}\n                                />\n                                {touched.aboutUs && errors.aboutUs && <small className=\"text-danger\">{errors.aboutUs}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"npwpNumber\">NPWP Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"npwpNumber\" id=\"npwpNumber\" value={companyInformationData.npwpNumber} onChange={(e) => handleChangeNpwpNumber(e)} placeholder=\"NPWP Number Field...\" />\n                                {touched.npwpNumber && errors.npwpNumber && <small className=\"text-danger\">{errors.npwpNumber}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nconst ContactInformationForm = ({ contactData, setContactData, touched, errors }) => {\n    const { data: getProvince } = useDataProvinces();\n    const province = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const handleChangeProvince = useCallback((e) => {\n        setContactData(old => ({ ...old, province: e }))\n    }, [setContactData])\n\n    const handleChangeAddress = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, address: value }))\n    }, [setContactData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, phone: value }))\n    }, [setContactData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">CONTACT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"address\">Address</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"address\"\n                                    id=\"address\"\n                                    className=\"form-control\"\n                                    placeholder=\"Address Field...\"\n                                    value={contactData.address}\n                                    onChange={(e) => handleChangeAddress(e)}\n                                />\n                                {touched.address && errors.address && <small className=\"text-danger\">{errors.address}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"province\">Province</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={province}\n                                    placeholder=\"Choose province...\"\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={contactData.province}\n                                    onChange={(e) => handleChangeProvince(e)}\n                                />\n                                {touched.province && errors.province && <small className=\"text-danger\">{errors.province}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" value={contactData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Phone Field...\" />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\"\nimport { Card, CardBody, Row, Col, Input, Label } from \"reactstrap\";\nimport Select from 'react-select';\nimport { Stats } from \"../Components/Navigation\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\n\n\nexport default (props) => {\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            firstName: Yup.string().required().label('First Name'),\n            lastName: Yup.string().required().label('Last Name'),\n            email: Yup.string().required().email().label('Email'),\n            phone: Yup.string().required().label('Phone'),\n            idType: Yup.string().required().label('ID Type'),\n            idNumber: Yup.string().required().label('ID Number'),\n            jobTitle: Yup.string().required().label('Job Title'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit } = useFormik({\n        initialValues: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            phone: '',\n            idType: { label: 'KTP', value: 'ktp' },\n            idNumber: '',\n            jobTitle: '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><RegistrantInformationForm registrantData={values} setRegistrantData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><Stats step={props.step} {...props} nextStep={handleSubmit} /></Col>\n        </Row>\n    );\n}\n\nexport const RegistrantInformationForm = ({ registrantData, setRegistrantData, touched, errors }) => {\n    const idType = [\n        { label: 'KTP', value: 'ktp' },\n    ]\n\n    const handleChangeFirstName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, firstName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeLastName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, lastName: value }))\n    }, [setRegistrantData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, phone: value }))\n    }, [setRegistrantData])\n\n    const handleChangeEmail = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, email: value }))\n    }, [setRegistrantData])\n\n    const handleChangeIdType = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, idType: e }))\n    }, [setRegistrantData])\n\n    const handleChangeIdNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, idNumber: value }))\n    }, [setRegistrantData])\n\n    const handleChangeJobTitle = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, jobTitle: value }))\n    }, [setRegistrantData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"firstName\">First Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={registrantData.firstName} onChange={(e) => handleChangeFirstName(e)} placeholder=\"First Name Field...\" />\n                                {touched.firstName && errors.firstName && <small className=\"text-danger\">{errors.firstName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"lastName\">Last Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={registrantData.lastName} onChange={(e) => handleChangeLastName(e)} placeholder=\"Last Name Field...\" />\n                                {touched.lastName && errors.lastName && <small className=\"text-danger\">{errors.lastName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"email\">Email</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={registrantData.email} onChange={(e) => handleChangeEmail(e)} placeholder=\"Email Field...\" />\n                                {touched.email && errors.email && <small className=\"text-danger\">{errors.email}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" value={registrantData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Phone Field...\" />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idType\">ID Type</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={idType}\n                                    placeholder=\"Choose id type...\"\n                                    value={registrantData.idType}\n                                    onChange={(e) => handleChangeIdType(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.idType && errors.idType && <small className=\"text-danger\">{errors.idType}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idNumber\">ID Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"idNumber\" id=\"idNumber\" value={registrantData.idNumber} onChange={(e) => handleChangeIdNumber(e)} placeholder=\"ID Number Field...\" />\n                                {touched.idNumber && errors.idNumber && <small className=\"text-danger\">{errors.idNumber}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"jobTitle\">Job Title</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"jobTitle\" id=\"jobTitle\" value={registrantData.jobTitle} onChange={(e) => handleChangeJobTitle(e)} placeholder=\"Job Title Field...\" />\n                                {touched.jobTitle && errors.jobTitle && <small className=\"text-danger\">{errors.jobTitle}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card >\n    );\n}\n","import React, { useEffect, useState } from \"react\"\n// import Select from 'react-select';\nimport {\n  translate,\n} from 'react-switch-lang';\nimport PageLayout from \"../../LandingPage/PageLayout\";\nimport StepWizard from 'react-step-wizard';\nimport { NavigationDot } from \"./Components/Navigation\";\nimport RegistrantForm from \"./Forms/RegistrantForm\";\nimport EducationForm from \"./Forms/EducationForm\";\nimport WorkExprerienceForm from \"./Forms/WorkExprerienceForm\";\nimport ProjectExperienceForm from \"./Forms/ProjectExperienceForm\";\nimport SkillSectorForm from \"./Forms/SkillSectorForm\";\nimport DocumentVerificationForm from \"./Forms/DocumentVerificationForm\";\nimport { useFormik } from \"formik\";\nimport { Button, Col, Modal, ModalBody, Row, Spinner } from \"reactstrap\";\nimport CompanyInformationForm from \"./Forms/CompanyInformationForm\";\nimport RegistrantCompanyForm from \"./Forms/RegistrantCompanyForm\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport request from \"../../../utils/request\";\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\n\nfunction Register(props) {\n  const location = useLocation();\n  const history = useHistory();\n  const getSearchLocation = new URLSearchParams(location.search);\n  const registrationForm = getSearchLocation.get('form')\n  const [modalSubmitForm, setModalSubmitForm] = useState(false);\n  const [instance, setInstance] = useState(null);\n\n  const { values: registrationData, setValues: setRegistrationData, handleSubmit, isSubmitting } = useFormik({\n    initialValues: {\n      companyInformationForm: '',\n      registrantForm: '',\n      educationForm: '',\n      workExperienceForm: '',\n      projectExperienceForm: '',\n      hasProjectExperience: false,\n      skillSectorForm: '',\n      verificationForm: '',\n    },\n    // validationSchema: ValidationFormSchema,\n    onSubmit: (values, { setSubmitting, setErrors }) => {\n      setSubmitting(true)\n      // if (!validationForm(instance, registrationForm, registrationData)) setModalSubmitForm(false)\n\n      let formData = new FormData()\n      formData.append('role', registrationForm === 'business' ? 'company' : registrationForm)\n      formData.append('email', values.registrantForm.email)\n      formData.append('password', values.verificationForm.password)\n      formData.append('firstName', values.registrantForm.firstName)\n      formData.append('lastName', values.registrantForm.lastName)\n      formData.append('phoneNumber', values.registrantForm.phone)\n      formData.append('identityType', values.registrantForm.idType.value)\n      formData.append('identityNumber', values.registrantForm.idNumber)\n\n      if (registrationForm === 'business') {\n        formData.append('clientIdSector', values.companyInformationForm.sector.value)\n        formData.append('companyName', values.companyInformationForm.businessName)\n        formData.append('companySize', values.companyInformationForm.companySize)\n        formData.append('about', values.companyInformationForm.aboutUs)\n        formData.append('npwp', values.companyInformationForm.npwpNumber)\n        formData.append('address', values.companyInformationForm.address)\n        formData.append('idProvince', values.companyInformationForm.province.value)\n        formData.append('companyPhoneNumber', values.companyInformationForm.phone)\n        formData.append('jobTitle', values.registrantForm.jobTitle)\n      } else {\n        formData.append('idProvince', values.registrantForm.province.value)\n        formData.append('address', values.registrantForm.address)\n        formData.append('dob', moment(values.registrantForm.dateOfBirth).format('YYYY-MM-DD'))\n        formData.append('gender', values.registrantForm.gender)\n        formData.append('npwp', values.registrantForm.npwpNumber)\n\n        if (registrationForm === 'individual') {\n          formData.append('clientIdSector', values.registrantForm.sector.value)\n        }\n\n        if (registrationForm === 'professional') {\n          formData.append('educations', JSON.stringify(values.educationForm.map(v => ({ idSchool: v.school.value, idEducationDegree: v.degree.value, idEducationField: v.education.value, graduationYear: v.graduationYear }))))\n          formData.append('workExperiences', JSON.stringify(values.workExperienceForm.map(v => ({ idProvince: v.location.value, idSector: v.sector.value, jobTitle: v.job, companyName: v.company, employmentType: v.employementType.value, startDate: moment(v.startDate).format('YYYY-MM-DD'), endDate: moment(v.endDate).format('YYYY-MM-DD'), isStillPresent: v.endDatePresent, skills: v.skills.map(s => ({ idSkill: s.value })) }))))\n          if (values.hasProjectExperience) {\n            formData.append('projectExperiences', JSON.stringify(values.projectExperienceForm.map(v => ({ idProvince: v.province.value, idCountry: v.country.value, idSector: v.sector.value, clientName: v.client, projectName: v.projectName, projectRole: v.projectRole, description: v.description, startDate: moment(v.startDate).format('YYYY-MM-DD'), endDate: moment(v.endDate).format('YYYY-MM-DD'), skills: v.skills.map(s => ({ idSkill: s.value })) }))))\n          } else {\n            formData.append('projectExperiences', JSON.stringify([]))\n          }\n          formData.append('skills', JSON.stringify(values.skillSectorForm.skills.map(v => ({ idSkill: v.value }))))\n          formData.append('sectors', JSON.stringify(values.skillSectorForm.sectors.map(v => ({ idSector: v.value }))))\n        }\n      }\n\n      if (values.verificationForm.photo) formData.append('avatar', values.verificationForm.photo.file, values.verificationForm.photo.file.name)\n      if (values.verificationForm.npwp) formData.append('npwp', values.verificationForm.npwp.file, values.verificationForm.npwp.file.name)\n      if (values.verificationForm.regId) formData.append('identity', values.verificationForm.regId.file, values.verificationForm.regId.file.name)\n      request.post(`v1/auth/signup`, formData)\n        .then(() => {\n          toast.success('Register success')\n          setModalSubmitForm(false)\n          history.push('/')\n        })\n        .catch((error) => toast.error(error.response.data.message))\n        .finally(() => setSubmitting(false))\n    }\n  })\n\n  useEffect(() => {\n    if (instance) {\n      validationForm(instance, registrationForm, registrationData)\n    }\n    // eslint-disable-next-line\n  }, [instance, registrationForm])\n\n  const handleFinishRegistration = () => {\n    setModalSubmitForm(!modalSubmitForm)\n  }\n\n  // useEffect(() => {\n  //   if (registrationForm === 'professional') localStorage.setItem(\"registrationProfessional\", JSON.stringify(registrationData))\n  //   if (registrationForm === 'business') localStorage.setItem(\"registrationBusiness\", JSON.stringify(registrationData))\n  //   if (registrationForm === 'individual') localStorage.setItem(\"registrationIndividual\", JSON.stringify(registrationData))\n  // }, [registrationData, registrationForm])\n\n  return (\n    <PageLayout>\n      <StepWizard\n        isHashEnabled\n        className=\"register-form\"\n        nav={<NavigationDot role={registrationForm} />}\n        instance={setInstance}\n        transitions={{\n          enterRight: ``,\n          enterLeft: ``,\n          exitRight: ``,\n          exitLeft: ``,\n          intro: ``,\n        }}\n      >\n        {registrationForm === 'professional' && <RegistrantForm step={1} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n        {registrationForm === 'professional' && <EducationForm step={2} registrationForm={registrationForm} hashKey=\"education\" stepName=\"education\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, educationForm: data }))} />}\n        {registrationForm === 'professional' && <WorkExprerienceForm step={3} registrationForm={registrationForm} hashKey=\"workExperience\" stepName=\"workExperience\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, workExperienceForm: data }))} />}\n        {registrationForm === 'professional' && <ProjectExperienceForm step={4} registrationForm={registrationForm} hashKey=\"projectExperience\" stepName=\"projectExperience\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, projectExperienceForm: data }))} hasValues={v => setRegistrationData(state => ({ ...state, hasProjectExperience: v }))} />}\n        {registrationForm === 'professional' && <SkillSectorForm step={5} registrationForm={registrationForm} hashKey=\"skillSector\" stepName=\"skillSector\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, skillSectorForm: data }))} />}\n        {registrationForm === 'professional' && <DocumentVerificationForm step={6} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n\n        {registrationForm === 'business' && <CompanyInformationForm step={1} registrationForm={registrationForm} hashKey=\"companyInformation\" stepName=\"companyInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, companyInformationForm: data }))} />}\n        {registrationForm === 'business' && <RegistrantCompanyForm step={2} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n        {registrationForm === 'business' && <DocumentVerificationForm step={3} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n\n        {registrationForm === 'individual' && <RegistrantForm step={1} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n        {registrationForm === 'individual' && <DocumentVerificationForm step={2} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n      </StepWizard>\n      <Modal isOpen={modalSubmitForm} centered toggle={handleFinishRegistration}>\n        <ModalBody className=\"p-5\">\n          <Row>\n            <Col xs=\"12\" className=\"mb-5\">\n              Are you sure with your registration data?\n            </Col>\n            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n              <Button color=\"secondary\" className=\"mr-2\" onClick={handleFinishRegistration}>Cancel</Button>\n              <Button color=\"primary\" disabled={isSubmitting} onClick={handleSubmit}>\n                {isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : 'Submit'}\n              </Button>\n            </Col>\n          </Row>\n        </ModalBody>\n      </Modal>\n    </PageLayout>\n  );\n}\n\nconst validationForm = (instance, registrationForm, registrationData) => {\n  if (registrationForm === 'professional') {\n    if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n    if (!registrationData.educationForm) { instance.goToNamedStep('education'); return false; }\n    if (!registrationData.workExperienceForm) { instance.goToNamedStep('workExperience'); return false; }\n    if (!registrationData.projectExperienceForm) { instance.goToNamedStep('projectExperience'); return false; }\n    if (!registrationData.skillSectorForm) { instance.goToNamedStep('skillSector'); return false; }\n    if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n  }\n  if (registrationForm === 'business') {\n    if (!registrationData.companyInformationForm) { instance.goToNamedStep('companyInformation'); return false; }\n    if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n    if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n  }\n  if (registrationForm === 'individual') {\n    if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n    if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n  }\n  return true;\n}\nexport default translate(Register);\n","import React, { createContext, useCallback, useContext } from 'react';\n\nconst LandingPageContext = createContext();\n\nexport const useLandingPageContext = () => {\n    const { homeRef, assessmentInvenRef, articleRef } = useContext(LandingPageContext);\n    const scrollTo = useCallback((element) => {\n        window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n        })\n    }, []);\n    return { homeRef, assessmentInvenRef, articleRef, scrollTo };\n}\n\nexport const LandingPageProvider = ({ value, children }) => {\n    return (\n    <LandingPageContext.Provider value={value}>\n        {children}\n    </LandingPageContext.Provider>\n)\n\n}\n\nexport const withLandingPageContext = (Component) => (props) => {\n    const landingPageRefs = useLandingPageContext();\n    return <Component {...props} landingPageRefs={landingPageRefs}/>\n}","import React, { useRef } from 'react';\nimport { LandingPageProvider } from './context';\nimport { translate } from \"react-switch-lang\";\nimport Home from './Home';\nimport PageLayout from './PageLayout';\nimport About from './About';\nimport Contact from './ContactUs';\n\nfunction LandingPage() {\n\n    const homeRef = useRef();\n    const aboutRef = useRef();\n    const contactRef = useRef();\n\n    return (\n        <LandingPageProvider value={{ homeRef, aboutRef, contactRef }}>\n            <PageLayout>\n                <Home ref={homeRef} />\n                <About ref={aboutRef} />\n                <Contact ref={contactRef} />\n            </PageLayout>\n        </LandingPageProvider>\n    )\n}\n\nexport default translate(LandingPage);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport { Provider } from \"react-redux\";\n\nimport OfflineIndicator from \"./components/OfflineIndicator\";\n\n//Route\nimport store from \"./store\";\nimport Layout from \"./containers/DefaultLayout/Layout\";\nimport langUtils from \"./utils/language/index\";\nimport { setLocale as setValidationLocale } from \"yup\";\n// import validationLocaleID from \"./utils/yup/locales/id\";\nimport validationLocaleDefault from \"yup/es/locale\";\nimport moment from \"moment\";\nimport momentLocales from './utils/language/moment-locales';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport Home from \"./views/LandingPage/Home\";\nimport FAQ from \"./views/LandingPage/FAQ\";\nimport Contact from \"./views/LandingPage/ContactUs\";\nimport About from \"./views/LandingPage/About\";\nimport AuthRoute from \"./containers/DefaultLayout/AuthRoute\";\nimport Register from \"./views/Auth/Register/Register\";\nimport LandingPage from \"./views/LandingPage/LandingPage\";\n\nlibrary.add(fab, fas, far)\n\nlangUtils.onLanguageChanged((lang) => {\n  // if (lang.toLowerCase() === \"id\") {\n  //   setValidationLocale(validationLocaleID);\n  // } else {\n  // }\n  setValidationLocale(validationLocaleDefault);\n});\nlangUtils.onLanguageChanged((lang) => {\n  const momentLocaleDefinition = momentLocales['en'];\n  if (momentLocaleDefinition) {\n    moment.locale('en', momentLocaleDefinition);\n  } else {\n    moment.locale('en');\n  }\n});\nlangUtils.init();\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <OfflineIndicator />\n\n      <Router>\n        <Switch>\n          <AuthRoute path=\"/\" type=\"guest\" exact>\n            <LandingPage />\n          </AuthRoute>\n          {/* <AuthRoute path=\"/about\" type=\"guest\" exact>\n            <About />\n          </AuthRoute>\n          <AuthRoute path=\"/faq\" type=\"guest\" exact>\n            <FAQ />\n          </AuthRoute>\n          <AuthRoute path=\"/contact\" type=\"guest\" exact>\n            <Contact />\n          </AuthRoute> */}\n          <AuthRoute path=\"/register\" type=\"guest\" exact>\n            <Register />\n          </AuthRoute>\n\n          <AuthRoute type=\"private\" exact component={Layout} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n","import './polyfill';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// import * as Sentry from '@sentry/react';\n// import { Integrations } from '@sentry/tracing';\nimport request from \"./utils/request\";\nimport { SWRConfig } from \"swr\";\n// import { t } from 'react-switch-lang';\n\n// if (process.env.NODE_ENV === 'production') {\n//     Sentry.init({\n//         environment: process.env.NODE_ENV,\n//         ignoreErrors: ['Request failed with status code 403', 'Request failed with status code 401', 'Request failed with status code 422'],\n//         dsn: \"https://2fcf451c3d9c4fbbb7e8bc1a84c77c55@o487735.ingest.sentry.io/5557540\",\n//         autoSessionTracking: true,\n//         integrations: [\n//             new Integrations.BrowserTracing()\n//         ],\n//         tracesSampleRate: 1.0,\n//     });\n// }\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Router><SWRConfig value={{fetcher: (...args) => request.get(...args)}} ><App /></SWRConfig></Router>, rootElement);\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/sectors')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/provinces')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import { useEffect, useState } from 'react';\nimport request from '../utils/request';\n\nexport default () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        request.get('/v1/option/skills')\n            .then((res) => setData(res.data.data))\n            .finally(() => setLoading(false))\n    }, [])\n\n    return { loading, data };\n}\n","import React, { useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route, useLocation } from \"react-router\";\nimport { Spinner } from \"reactstrap\";\nimport { getMe } from \"../../actions/auth\";\n// import LandingPage from \"../views/LandingPage/LandingPage\";\n\n// const Forbidden = () => <div><center><h1>403 Sorry, this page is forbidden.</h1></center></div>;\n\nconst AuthRoute = ({ isLoggedIn, user, token, type, getMe, ...props }) => {\n  const shouldAuthenticate = useMemo(() => ['guest', 'private'].includes(type), [type]);\n  const location = useLocation();\n\n  if (shouldAuthenticate) {\n    if (user === null && token) {\n      getMe();\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            background: \"rgba(255,255,255, 0.5)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Spinner style={{ width: 48, height: 48 }} />\n        </div>\n      );\n    }\n\n    if (type === \"guest\" && isLoggedIn === true) {\n      const search = new URLSearchParams(location.search);\n      if (location.pathname === '/login') {\n        if (search.get('to')) {\n          return <Redirect to={search.get('to')} />\n        }\n      }\n      return <Redirect to={'/home'} />;\n    }\n    if (type === \"private\" && isLoggedIn === false) {\n      const searchParams = new URLSearchParams(location.search);\n      if (location.pathname !== '/login') {\n        searchParams.set('to', location.pathname);\n      }\n      // return <Redirect to={'/login?' + searchParams.toString()} />;\n      return <Redirect to={'/'} />;\n    }\n  }\n\n  return <Route {...props} />;\n};\n\nconst mapStateToProps = ({ user, token }) => ({\n  isLoggedIn: user != null,\n  user,\n  token,\n});\n\nexport default connect(mapStateToProps, { getMe })(AuthRoute);\n"],"sourceRoot":""}