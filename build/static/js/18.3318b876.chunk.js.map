{"version":3,"sources":["views/Menu/Projects/ProjectContext.js","views/Menu/Projects/ProjectWrapper.js"],"names":["filterProjectContext","createContext","setFilterProjectContext","FilterProjectProvider","props","useState","limit","page","sectors","date","exp","skills","sortClosing","label","value","sortDuration","sortBudgetary","sortSkill","filterProjectCtx","setFilterProjectCtx","Provider","children","useFilterProjectContext","useContext","Project","React","lazy","ProjectCreate","ProjectDetail","ProjectProfessionalsList","ProjectWall","translate","withRouter","location","match","user","useAuthUser","professional","path","exact","component","client","routes","role","map","route","key","from","to"],"mappings":"yMAIMA,EAAuBC,0BACvBC,EAA0BD,0BAEjB,SAASE,EAAsBC,GAAQ,IAAD,EACDC,mBAAS,CACrDC,MAAO,GACPC,KAAM,EACNC,QAAS,GACTC,KAAM,GACNC,IAAK,GACLC,OAAQ,GACRC,YAAa,CAAEC,MAAO,mBAAoBC,MAAO,UAAYC,aAAc,CAAEF,MAAO,sBAAuBC,MAAO,WAAaE,cAAe,CAAEH,MAAO,oBAAqBC,MAAO,WAAaG,UAAW,CAAEJ,MAAO,oBAAqBC,MAAO,aARnM,mBAC1CI,EAD0C,KACxBC,EADwB,KAWjD,OACI,kBAACjB,EAAwBkB,SAAzB,CAAkCN,MAAOK,GACrC,kBAACnB,EAAqBoB,SAAtB,CAA+BN,MAAOI,GACjCd,EAAMiB,WAOhB,IAAMC,EAA0B,WACnC,MAAO,CAACC,qBAAWvB,GAAuBuB,qBAAWrB,M,iCC7BzD,qEAOMsB,EAAUC,IAAMC,MAAK,kBAAM,wDAC3BC,EAAgBF,IAAMC,MAAK,kBAAM,+DACjCE,EAAgBH,IAAMC,MAAK,kBAAM,kCAEjCG,EAA2BJ,IAAMC,MAAK,kBAAM,wDAC5CI,EAAcL,IAAMC,MAAK,kBAAM,sEA6DtBK,8BAAUC,aA3DzB,YAA6C,EAAnBC,SAAoB,IAAVC,EAAS,EAATA,MAC1BC,EAAOC,cACPC,EAAe,CACjB,CACIC,KAAMJ,EAAMI,KAAO,IACnBC,OAAO,EACPC,UAAWhB,GAEf,CACIc,KAAMJ,EAAMI,KAAO,cACnBC,OAAO,EACPC,UAAWZ,GAEf,CACIU,KAAMJ,EAAMI,KAAO,mBACnBC,OAAO,EACPC,UAAWV,IAIbW,EAAS,CACX,CACIH,KAAMJ,EAAMI,KAAO,UACnBC,OAAO,EACPC,UAAWb,GAOf,CACIW,KAAMJ,EAAMI,KAAO,4BACnBC,OAAO,EACPC,UAAWX,GAEf,CACIS,KAAMJ,EAAMI,KAAO,mBACnBC,OAAO,EACPC,UAAWV,IAIbY,EAAuB,YAAdP,EAAKQ,KAAqBF,EAASJ,EAElD,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACKK,EAAOE,KAAI,SAACC,GAAD,OACR,kBAAC,IAAD,eAAWC,IAAKD,EAAMP,MAAUO,OAEnCH,EAAO,IACJ,kBAAC,IAAD,CAAUH,OAAK,EAACQ,KAAMb,EAAMI,KAAMU,GAAIN,EAAO,GAAGJ","file":"static/js/18.3318b876.chunk.js","sourcesContent":["import React, { createContext } from 'react'\nimport { useState } from 'react'\nimport { useContext } from 'react'\n\nconst filterProjectContext = createContext()\nconst setFilterProjectContext = createContext()\n\nexport default function FilterProjectProvider(props) {\n    const [filterProjectCtx, setFilterProjectCtx] = useState({\n        limit: 10,\n        page: 0,\n        sectors: [],\n        date: '',\n        exp: '',\n        skills: [],\n        sortClosing: { label: 'Newest to Oldest', value: 'newest' }, sortDuration: { label: 'Longest to Shortest', value: 'longest' }, sortBudgetary: { label: 'Highest to Lowest', value: 'highest' }, sortSkill: { label: 'Highest to Lowest', value: 'highest' },\n    })\n\n    return (\n        <setFilterProjectContext.Provider value={setFilterProjectCtx}>\n            <filterProjectContext.Provider value={filterProjectCtx}>\n                {props.children}\n            </filterProjectContext.Provider>\n        </setFilterProjectContext.Provider>\n    )\n}\n\n\nexport const useFilterProjectContext = () => {\n    return [useContext(filterProjectContext), useContext(setFilterProjectContext)]\n}","import React from \"react\";\nimport { Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { translate } from \"react-switch-lang\";\nimport AuthRoute from '../../../containers/DefaultLayout/AuthRoute'\nimport { useAuthUser } from \"../../../store\";\nimport FilterProjectProvider from \"./ProjectContext\";\n\nconst Project = React.lazy(() => import(\"./Project\"));\nconst ProjectCreate = React.lazy(() => import(\"./ProjectCreate\"));\nconst ProjectDetail = React.lazy(() => import(\"./ProjectDetail\"));\n// const ProjectEdit = React.lazy(() => import(\"./ProjectEdit\"));\nconst ProjectProfessionalsList = React.lazy(() => import(\"./ProjectProfessionals/ProjectProfessionalsList\"));\nconst ProjectWall = React.lazy(() => import(\"./ProjectWall/ProjectWall\"));\n\nfunction ProjectWrapper({ location, match }) {\n    const user = useAuthUser();\n    const professional = [\n        {\n            path: match.path + \"/\",\n            exact: true,\n            component: Project,\n        },\n        {\n            path: match.path + \"/:projectId\",\n            exact: true,\n            component: ProjectDetail,\n        },\n        {\n            path: match.path + \"/:projectId/wall\",\n            exact: true,\n            component: ProjectWall,\n        },\n    ];\n\n    const client = [\n        {\n            path: match.path + \"/create\",\n            exact: true,\n            component: ProjectCreate,\n        },\n        // {\n        //     path: match.path + \"/:projectId\",\n        //     exact: true,\n        //     component: ProjectEdit,\n        // },\n        {\n            path: match.path + \"/:projectId/professionals\",\n            exact: true,\n            component: ProjectProfessionalsList,\n        },\n        {\n            path: match.path + \"/:projectId/wall\",\n            exact: true,\n            component: ProjectWall,\n        },\n    ]\n\n    const routes = user.role === 'company' ? client : professional\n\n    return (\n        <FilterProjectProvider>\n            <Switch>\n                {routes.map((route) => (\n                    <AuthRoute key={route.path} {...route} />\n                ))}\n                {routes[0] && (\n                    <Redirect exact from={match.path} to={routes[0].path} />\n                )}\n            </Switch>\n        </FilterProjectProvider>\n    );\n}\n\nexport default translate(withRouter(ProjectWrapper));\n"],"sourceRoot":""}