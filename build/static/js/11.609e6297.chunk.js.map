{"version":3,"sources":["utils/formatter.js","hooks/usePagination.js","views/DataDummy/SkillsColorsDummy.js","views/Menu/Projects/Sorts/SkillMatchSort.js","../node_modules/reactstrap/es/Progress.js","views/Menu/Projects/Filters/CompletionDateFilter.js","views/Menu/Projects/Filters/ExperienceFilter.js","views/Menu/Projects/Filters/SectorsFilter.js","views/Menu/Projects/Filters/SkillsFilter.js","views/Menu/Projects/Sorts/ClosingDateSort.js","views/Menu/Projects/Sorts/DurationSort.js","views/Menu/Projects/Sorts/BudgetarySort.js","views/Menu/Projects/Project.js"],"names":["convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","convertNumberCurrencies","n","ranges","divider","suffix","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","usePagination","totalData","defaultPage","totalPage","onChangedCurrentPage","useState","currentPage","setCurrentPage","useEffect","next","useCallback","prevState","prev","goto","page","PaginationComponent","useMemo","props","CustomHookPaginationComponent","handleFirst","handleLast","handleNext","handlePrev","handleGoto","count","className","disabled","first","onClick","previous","active","last","SkillMatchSort","useFilterProjectContext","filter","setFilter","isSearchable","options","label","value","onChange","e","state","sortSkill","handleChange","components","DropdownIndicator","IndicatorSeparator","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","propTypes","children","PropTypes","node","bar","bool","multi","tag","tagPropType","oneOfType","string","min","max","animated","striped","color","barClassName","cssModule","style","barStyle","barAriaValueText","barAriaLabelledBy","Progress","Tag","attributes","_objectWithoutPropertiesLoose","percent","toNumber","progressClasses","mapToCssModules","classNames","progressBarProps","width","role","React","createElement","_extends","defaultProps","CompletionDateFilter","checked","date","InputGroup","InputGroupAddon","addonType","InputGroupText","CustomInput","type","id","ExperienceFilter","exp","SectorsFilter","getSector","useDataSectors","data","sectors","map","p","name","closeMenuOnSelect","isClearable","isMulti","handleChangeSectors","SkillsFilter","getSkills","useDataSkills","skills","handleChangeSkills","ClosingDateSort","sortClosing","DurationSort","sortDuration","BudgetarySort","sortBudgetary","Project","useSWR","limit","f","refreshInterval","getProjects","errorProjects","error","loading","projects","handleChangeCurrentPage","pageSummary","total","totalPages","Row","Col","xs","lg","Card","CardBody","md","position","top","right","bottom","left","display","justifyContent","alignItems","Spinner","height","records","to","projectOwnerId","projectOwnerName","moment","completeDate","format","duration","s","sector","Number","isInteger","estimatedContractValue","skillMatched","toFixed","projectRequirementSkill","Badge","colorSkills","whiteSpace"],"mappings":"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","file":"static/js/11.609e6297.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'indonesia', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'rb',\n        million: 'jt',\n        billion: 'M',\n        trillion: 'T'\n    },\n    ordinal: function (number) {\n        return number === 1 ? 'er' : 'ème';\n    },\n    currency: {\n        symbol: 'IDR'\n    }\n});\nnumeral.locale('indonesia')\n\nexport function convertToRupiah(angka) {\n    var rupiah = '';\n    var angkarev = angka?.toString().split('').reverse().join('');\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';\n\n    return rupiah.split('', rupiah.length - 1).reverse().join('');\n}\n\nexport function convertNumberCurrencies(n) {\n    const ranges = [\n        { divider: 1e18, suffix: 'E' },\n        { divider: 1e15, suffix: 'P' },\n        { divider: 1e12, suffix: 'T' },\n        { divider: 1e9, suffix: 'G' },\n        { divider: 1e6, suffix: 'M' },\n        { divider: 1e3, suffix: 'k' }\n    ];\n\n    for (var i = 0; i < ranges.length; i++) {\n        if (n >= ranges[i].divider) {\n            return (n / ranges[i].divider).toString() + ranges[i].suffix;\n        }\n    }\n    return n.toString();\n}\n\nexport function formatDate(date) {\n    let d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (d.toString() === 'Invalid Date') {\n        return null;\n    }\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function dataURIToBlob(dataURI) {\n    const splitDataURI = dataURI.split(',')\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\n\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type: mimeString })\n}\n\nexport function matchWildcard(str, wildcard) {\n    var escapeRegex = (str) => str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n    return new RegExp(\"^\" + wildcard.split(\"*\").map(escapeRegex).join(\".*\") + \"$\").test(str);\n}\n\nexport function convertNumber(numb, format = '0.0a') {\n    return numeral(numb).format(format)\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n\nexport default function usePagination(totalData, defaultPage, totalPage, onChangedCurrentPage) {\n    const [currentPage, setCurrentPage] = useState(defaultPage);\n\n    useEffect(() => onChangedCurrentPage(currentPage), [currentPage, onChangedCurrentPage])\n\n    const next = useCallback(() => {\n        setCurrentPage(prevState => prevState === (totalPage - 1) ? prevState : prevState + 1);\n    }, [totalPage])\n\n    const prev = useCallback(() => {\n        setCurrentPage(prevState => prevState === 0 ? prevState : prevState - 1);\n    }, []);\n\n    const goto = useCallback((page) => {\n        setCurrentPage(page);\n    }, [])\n\n    const PaginationComponent = useMemo(() => {\n        return (props) => <CustomHookPaginationComponent\n            handleFirst={() => goto(0)}\n            handleLast={() => goto(totalPage - 1)}\n            handleNext={next}\n            handlePrev={prev}\n            handleGoto={goto}\n            currentPage={currentPage}\n            count={totalPage}\n        />;\n    }, [goto, next, prev, currentPage, totalPage]);\n    return { currentPage, next, prev, goto, totalPage, PaginationComponent };\n}\n\nconst CustomHookPaginationComponent = ({ handleFirst, handleLast, handleNext, handlePrev, handleGoto, count, currentPage }) => {\n    return (\n        <Pagination className=\"pagination-hub d-flex justify-content-center\">\n            {handleFirst && <PaginationItem disabled={currentPage - 1 >= 0 ? false : true}>\n                <PaginationLink first onClick={handleFirst} disabled={currentPage === 0} />\n            </PaginationItem>}\n            {handlePrev && <PaginationItem disabled={currentPage - 1 >= 0 ? false : true}>\n                <PaginationLink previous onClick={handlePrev} disabled={currentPage === 0} />\n            </PaginationItem>}\n            {currentPage - 3 >= 0 &&\n                <PaginationItem disabled>\n                    <PaginationLink className=\"text-dark\">...</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage - 2 >= 0 &&\n                <PaginationItem className=\"d-none d-md-block\">\n                    <PaginationLink onClick={() => handleGoto(currentPage - 2)}>{currentPage - 1}</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage - 1 >= 0 &&\n                <PaginationItem>\n                    <PaginationLink onClick={() => handleGoto(currentPage - 1)}>{currentPage}</PaginationLink>\n                </PaginationItem>\n            }\n            <PaginationItem active disabled>\n                <PaginationLink onClick={() => handleGoto(currentPage)}>{currentPage + 1}</PaginationLink>\n            </PaginationItem>\n            {currentPage + 1 < count &&\n                <PaginationItem>\n                    <PaginationLink onClick={() => handleGoto(currentPage + 1)}>{currentPage + 2}</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage + 2 < count &&\n                <PaginationItem className=\"d-none d-md-block\">\n                    <PaginationLink onClick={() => handleGoto(currentPage + 2)}>{currentPage + 3}</PaginationLink>\n                </PaginationItem>\n            }\n            {/* {[...Array(count).keys()].map(index => (\n                <PaginationItem key={index} active={currentPage === index} disabled={currentPage === index}>\n                    <PaginationLink onClick={() => handleGoto(index)}>{index + 1}</PaginationLink>\n                </PaginationItem>\n            ))} */}\n            {currentPage + 3 < count &&\n                <PaginationItem disabled>\n                    <PaginationLink className=\"text-dark\">...</PaginationLink>\n                </PaginationItem>\n            }\n            <PaginationItem disabled={currentPage + 1 < count ? false : true}>\n                <PaginationLink next onClick={handleNext} disabled={currentPage === count - 1} />\n            </PaginationItem>\n            <PaginationItem disabled={currentPage + 1 < count ? false : true}>\n                <PaginationLink last onClick={handleLast} disabled={currentPage === count - 1} />\n            </PaginationItem>\n        </Pagination>\n    )\n}","export default [\n    'success',\n    'danger',\n    'warning',\n    'secondary',\n    'info',\n    'primary',\n    'dark'\n]","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from '../ProjectContext';\n\nfunction SkillMatchSort() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const skill = [\n        { label: 'Highest skill to Lowest skill', value: 'matchedSkills_DESC' },\n        { label: 'Lowest skill to Highest skill', value: 'matchedSkills_ASC' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortSkill: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Skill Match</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={skill}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortSkill} />\n        </>\n    )\n}\n\nexport default SkillMatchSort","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, toNumber } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  bar: PropTypes.bool,\n  multi: PropTypes.bool,\n  tag: tagPropType,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  barClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  style: PropTypes.object,\n  barStyle: PropTypes.object,\n  barAriaValueText: PropTypes.string,\n  barAriaLabelledBy: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  value: 0,\n  min: 0,\n  max: 100,\n  style: {},\n  barStyle: {}\n};\n\nvar Progress = function Progress(props) {\n  var children = props.children,\n      className = props.className,\n      barClassName = props.barClassName,\n      cssModule = props.cssModule,\n      value = props.value,\n      min = props.min,\n      max = props.max,\n      animated = props.animated,\n      striped = props.striped,\n      color = props.color,\n      bar = props.bar,\n      multi = props.multi,\n      Tag = props.tag,\n      style = props.style,\n      barStyle = props.barStyle,\n      barAriaValueText = props.barAriaValueText,\n      barAriaLabelledBy = props.barAriaLabelledBy,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"min\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\", \"style\", \"barStyle\", \"barAriaValueText\", \"barAriaLabelledBy\"]);\n\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var progressBarProps = {\n    className: progressBarClasses,\n    style: _objectSpread(_objectSpread(_objectSpread({}, bar ? style : {}), barStyle), {}, {\n      width: percent + \"%\"\n    }),\n    role: 'progressbar',\n    'aria-valuenow': value,\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuetext': barAriaValueText,\n    'aria-labelledby': barAriaLabelledBy,\n    children: children\n  };\n\n  if (bar) {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, progressBarProps));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    style: style,\n    className: progressClasses\n  }), multi ? children : /*#__PURE__*/React.createElement(\"div\", progressBarProps));\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\nexport default Progress;","import React, { useCallback } from 'react'\nimport { InputGroup, InputGroupAddon, InputGroupText, CustomInput } from 'reactstrap'\nimport { useFilterProjectContext } from './../ProjectContext';\n\nfunction CompletionDateFilter() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const handleChange = useCallback((e) => {\n        const { value, checked } = e.target;\n        setFilter(state => ({ ...state, date: checked ? value : '' }));\n    }, [setFilter])\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Completion Date</div>\n            <div className=\"px-3\">\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"this-week\" value=\"this-week\" checked={filter.date === 'this-week'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        This Week\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"next-week\" value=\"next-week\" checked={filter.date === 'next-week'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        Next Week\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"this-month\" value=\"this-month\" checked={filter.date === 'this-month'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        This month\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"next-month\" value=\"next-month\" checked={filter.date === 'next-month'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        Next month\n                    </div>\n                </InputGroup>\n            </div>\n        </>\n    )\n}\n\nexport default CompletionDateFilter","import React, { useCallback } from 'react'\nimport { InputGroup, InputGroupAddon, InputGroupText, CustomInput } from 'reactstrap'\nimport { useFilterProjectContext } from './../ProjectContext';\n\nfunction ExperienceFilter() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const handleChange = useCallback((e) => {\n        const { value, checked } = e.target;\n        setFilter(state => ({ ...state, exp: checked ? value : '' }));\n    }, [setFilter])\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Years of experience</div>\n            <div className=\"px-3\">\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"<3\" value=\"<3\" checked={filter.exp === '<3'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        Less than 3 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"3-5\" value=\"3-5\" checked={filter.exp === '3-5'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        3-5 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"6-10\" value=\"6-10\" checked={filter.exp === '6-10'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        6-10 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"10-20\" value=\"10-20\" checked={filter.exp === '10-20'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        10-20 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\">20\" value=\">20\" checked={filter.exp === '>20'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        More than 20 years\n                    </div>\n                </InputGroup>\n            </div>\n        </>\n    )\n}\n\nexport default ExperienceFilter","import React, { useMemo } from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from './../ProjectContext';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\n\nfunction SectorsFilter() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeSectors = (e) => {\n        setFilter(state => ({ ...state, sectors: e ?? [] }))\n    }\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Sector</div>\n            <div className=\"px-3\">\n                <Select\n                    closeMenuOnSelect={false}\n                    options={sectors}\n                    isClearable\n                    isMulti\n                    onChange={(e) => handleChangeSectors(e)}\n                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                    value={filter.sectors} />\n            </div>\n        </>\n    )\n}\n\nexport default SectorsFilter","import React, { useMemo } from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from './../ProjectContext';\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\n\nfunction SkillsFilter() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const handleChangeSkills = (e) => {\n        setFilter(state => ({ ...state, skills: e ?? [] }))\n    }\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Skills Requirements</div>\n            <div className=\"px-3\">\n                <Select\n                    closeMenuOnSelect={false}\n                    options={skills}\n                    isClearable\n                    isMulti\n                    onChange={(e) => handleChangeSkills(e)}\n                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                    value={filter.skills} />\n            </div>\n        </>\n    )\n}\n\nexport default SkillsFilter","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from '../ProjectContext';\n\nfunction ClosingDateSort() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const closing = [\n        { label: 'Oldest to Newest', value: 'closingDate_DESC' },\n        { label: 'Newest to Oldest', value: 'closingDate_ASC' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortClosing: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Closing Date</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={closing}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortClosing} />\n        </>\n    )\n}\n\nexport default ClosingDateSort","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from '../ProjectContext';\n\nfunction DurationSort() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const duration = [\n        { label: 'Longest to Shortest', value: 'duration_DESC' },\n        { label: 'Shortest to Longest', value: 'duration_ASC' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortDuration: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Meeting Duration</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={duration}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortDuration} />\n        </>\n    )\n}\n\nexport default DurationSort","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from '../ProjectContext';\n\nfunction BudgetarySort() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const budgetary = [\n        { label: 'Highest to Lowest', value: 'budget_DESC' },\n        { label: 'Lowest to Highest', value: 'budget_ASC' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortBudgetary: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Budgetary</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={budgetary}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortBudgetary} />\n        </>\n    )\n}\n\nexport default BudgetarySort","import React, { useCallback, useMemo } from 'react'\nimport { Col, Row, Card, CardBody, Badge, Spinner, Progress } from 'reactstrap'\nimport moment from 'moment'\nimport { useFilterProjectContext } from './ProjectContext';\nimport CompletionDateFilter from './Filters/CompletionDateFilter';\nimport ExperienceFilter from './Filters/ExperienceFilter';\nimport SectorsFilter from './Filters/SectorsFilter';\nimport SkillsFilter from './Filters/SkillsFilter';\nimport ClosingDateSort from './Sorts/ClosingDateSort';\nimport DurationSort from './Sorts/DurationSort';\nimport BudgetarySort from './Sorts/BudgetarySort';\nimport SkillMatchSort from './Sorts/SkillMatchSort';\nimport { convertToRupiah } from '../../../utils/formatter';\nimport { Link } from 'react-router-dom';\nimport useSWR from 'swr';\nimport usePagination from \"../../../hooks/usePagination\";\nimport colorSkills from '../../DataDummy/SkillsColorsDummy'\n\nfunction Project() {\n    const [filter, setFilter] = useFilterProjectContext()\n    const { data: getProjects, error: errorProjects, } = useSWR(() => 'v1/project?' +\n        (filter.limit ? `limit=${filter.limit}` : '') +\n        (filter.date ? `&completeDate=${filter.date}` : '') +\n        (filter.exp ? `&yearOfExperience=${filter.exp}` : '') +\n        (filter.skills.length > 0 ? `&skillIds=${filter.skills.map(f => f.value).toString()}` : '') +\n        (filter.sectors.length > 0 ? `&sectorIds=${filter.sectors.map(f => f.value).toString()}` : '') +\n        `&sort=${filter.sortClosing.value}${',' + filter.sortDuration.value}${',' + filter.sortBudgetary.value}${',' + filter.sortSkill.value}` +\n        `&page=${filter.page + 1}`, { refreshInterval: 1800000 });\n\n    const loading = !getProjects || errorProjects;\n    const projects = useMemo(() => {\n        return getProjects?.data?.data ?? [];\n    }, [getProjects]);\n\n    const handleChangeCurrentPage = useCallback(\n        (page) => {\n            setFilter((state) => ({ ...state, page: page }));\n        },\n        [setFilter]\n    );\n\n    const { PaginationComponent } = usePagination(\n        projects?.pageSummary?.total,\n        filter.page,\n        projects?.pageSummary?.totalPages,\n        handleChangeCurrentPage\n    );\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\" lg=\"3\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <h5 className=\"font-weight-bold mb-4 text-center\">FILTER</h5>\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <SectorsFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <CompletionDateFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <ExperienceFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <SkillsFilter />\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\" lg=\"9\">\n                <Row className=\"mb-4\">\n                    <Col xs=\"6\" md=\"3\">\n                        <ClosingDateSort />\n                    </Col>\n                    <Col xs=\"6\" md=\"3\">\n                        <DurationSort />\n                    </Col>\n                    <Col xs=\"6\" md=\"3\">\n                        <BudgetarySort />\n                    </Col>\n                    <Col xs=\"6\" md=\"3\">\n                        <SkillMatchSort />\n                    </Col>\n                </Row>\n\n                <Row className=\"mb-2\">\n                    <Col xs=\"12\">\n                        {loading ?\n                            <div\n                                style={{\n                                    position: \"absolute\",\n                                    top: 0,\n                                    right: 0,\n                                    bottom: 0,\n                                    left: 0,\n                                    // background: \"rgba(255,255,255, 0.5)\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                <Spinner style={{ width: 48, height: 48 }} />\n                            </div>\n                            :\n                            projects?.records.length > 0\n                                ? projects?.records?.map((p, i) => (\n                                    <Card key={i} className=\"shadow-sm\">\n                                        <CardBody>\n                                            <Row>\n                                                <Col xs=\"12\" lg=\"9\">\n                                                    <Row>\n                                                        <Col xs=\"12\">\n                                                            <Link to={`/project/${p.id}`} className=\"text-dark\">\n                                                                <h4>{p.name}</h4>\n                                                            </Link>\n                                                        </Col>\n                                                        <Col xs=\"12\" className=\"d-flex justify-content-between\">\n                                                            <Link to={`/client/${p.projectOwnerId}`} className=\"text-dark\">\n                                                                <p>{p.projectOwnerName}</p>\n                                                            </Link>\n                                                            {/* <p>{p.numberOfAplicants} Application</p> */}\n                                                        </Col>\n                                                        <Col xs=\"6\">\n                                                            <span className=\"text-muted\">Completion Date</span>\n                                                            <p> {moment(p.completeDate).format('DD MMMM YYYY')}</p>\n                                                        </Col>\n                                                        <Col xs=\"6\">\n                                                            <span className=\"text-muted\">Meeting Duration</span>\n                                                            <p>{p.duration} hours</p>\n                                                        </Col>\n                                                        <Col xs=\"6\">\n                                                            <span className=\"text-muted\">Sector</span>\n                                                            <p>\n                                                                {p.sectors.map((s, i) => `${s.sector.name}${p.sectors.length === i + 1 ? '' : ','} `)}\n                                                            </p>\n                                                        </Col>\n                                                        <Col xs=\"6\">\n                                                            <span className=\"text-muted\">Estimated Contract Value</span>\n                                                            <p>{!Number.isInteger(p?.estimatedContractValue) ? p?.estimatedContractValue : `IDR ${convertToRupiah(p?.estimatedContractValue ?? 0)}`}</p>\n                                                        </Col>\n                                                        <Col xs=\"12\">\n                                                            <Progress striped className=\"position-relative\" value={p.skillMatched} style={{ height: '2rem' }}>\n                                                                <div className=\"position-absolute w-100 font-sm font-weight-bold text-dark text-center\"> {p?.skillMatched?.toFixed(2)}% skills matched</div>\n                                                            </Progress>\n                                                        </Col>\n                                                    </Row>\n                                                </Col>\n                                                <Col xs=\"12\" lg=\"3\" className=\"mt-3 mt-lg-0\">\n                                                    {p.projectRequirementSkill.map((s, i) => (\n                                                        <Badge key={i} color={colorSkills[i]} className=\"w-100 text-uppercase font-sm my-1 text-light\" style={{ whiteSpace: 'unset' }}>{s.name}</Badge>\n                                                    ))}\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                ))\n                                : <div className=\"text-center text-muted p-5 mt-5\">\n                                    No Projects\n                                </div>\n                        }\n                    </Col>\n                    <Col xs=\"12\">\n                        {projects?.records?.length > 0 && <PaginationComponent />}\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Project"],"sourceRoot":""}