{"version":3,"sources":["utils/formatter.js","components/DeliverableStatus.js","views/Menu/Projects/ProjectWall/ProjectWall.js","views/Menu/Projects/ProjectWall/shared.js"],"names":["convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","convertNumberCurrencies","n","ranges","divider","suffix","toFixed","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","draft","pending","rejected","approved","FileList","authUser","useAuthUser","matchRoute","useRouteMatch","history","useHistory","deliverableRef","useRef","meetingDateRef","uploadFile","useFilterProjectContext","filter","setFilter","useState","EditorState","createEmpty","editorState","setEditorState","idActivity","comment","reply","setReply","id","status","statusMessage","open","modalVerify","setModalVerify","idProject","date","link","modalMeetingDate","setModalMeetingDate","modalMeetingRequest","setModalMeetingRequest","useSWR","params","projectId","sortActivity","value","category","searchActivity","getData","data","error","mutate","loading","useMemo","push","attendancesOptions","professional","map","pro","name","role","concat","client","deliverableData","activityDetails","act","sort","a","b","deliverableStatus","pop","useFormik","initialValues","content","text","isDraft","files","onSubmit","values","setSubmitting","setValues","setErrors","formData","FormData","append","JSON","stringify","f","file","request","put","then","res","toast","success","catch","err","finally","post","handleSubmit","isSubmitting","handleClickCategory","useCallback","state","attendees","additionalAttendees","meeting","createWithContent","ContentState","createFromBlockArray","convertFromHTML","moment","meetingDetails","format","startTime","endTime","handleChangeAttendance","e","old","handleChangeMeetingEndTime","target","handleClickSubmit","handleVerifyDeliverable","handleUploadFile","preventDefault","preview","URL","createObjectURL","handleDeleteFile","handleChangeFilterCategory","handleChangeFilterSort","handleChangeFilterSearch","loadingDownload","setLoadingDownload","handleDownloadDeliverable","requestDownload","modalAlertMeetingDate","setModalAlertMeetingDate","handleRequestMeetingDate","activeRequestMeetingId","Row","Col","xs","to","className","projectName","md","Card","CardBody","contractValue","stratingDate","closingDate","href","rel","InputGroup","InputGroupAddon","addonType","required","selected","Date","dateFormat","minDate","showTimeInput","disabled","autoComplete","onChangeRaw","InputGroupText","icon","Button","color","onClick","Table","bordered","milestoneDetails","v","key","activities","add","fileDetails","Badge","style","cursor","current","scrollIntoView","block","behavior","statusDeliverable","includes","lg","Label","type","mask","onChange","placeholder","inputProps","Input","att","isClearable","isMulti","isValidNewOption","inputValue","test","String","toLowerCase","formatGroupLabel","display","alignItems","fontWeight","fontSize","letterSpacing","label","noOptionsMessage","components","DropdownIndicator","IndicatorSeparator","editorStyle","height","onEditorStateChange","onContentStateChange","draftToHtml","handleEditorChange","fileName","ref","click","Spinner","size","options","position","top","right","bottom","left","justifyContent","width","activity","replace","createdBy","utc","createdAt","local","htmlParser","fileUrl","textDecoration","replies","ir","rows","borderRadius","onKeyPress","blur","Modal","isOpen","centered","toggle","ModalBody","onChangeModalMeetingDate","onChangeModalMeetingRequest","onChangeModalAlertMeetingDate","maxFiles","Array","fill","UncontrolledPopover","trigger","placement","popperClassName","PopoverBody","Progress","fileList","totalSize","ModalRequestMeetingDate","meetingDate","setMeetingDate","handleSend","ModalChangeMeetingDate","ModalAlertMeetingDate","returnFocusAfterClose"],"mappings":"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","file":"static/js/13.c4ec960a.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'indonesia', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'rb',\n        million: 'jt',\n        billion: 'M',\n        trillion: 'T'\n    },\n    ordinal: function (number) {\n        return number === 1 ? 'er' : 'ème';\n    },\n    currency: {\n        symbol: 'IDR'\n    }\n});\nnumeral.locale('indonesia')\n\nexport function convertToRupiah(angka) {\n    var rupiah = '';\n    var angkarev = angka?.toString().split('').reverse().join('');\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';\n\n    return rupiah.split('', rupiah.length - 1).reverse().join('');\n}\n\nexport function convertNumberCurrencies(n) {\n    const ranges = [\n        { divider: 1e18, suffix: 'E' },\n        { divider: 1e15, suffix: 'P' },\n        { divider: 1e12, suffix: 'T' },\n        { divider: 1e9, suffix: 'B' },\n        { divider: 1e6, suffix: 'M' },\n        { divider: 1e3, suffix: 'k' }\n    ];\n\n    for (var i = 0; i < ranges.length; i++) {\n        if (n >= ranges[i].divider) {\n            return (n / ranges[i].divider).toFixed(0).toString() + ranges[i].suffix;\n        }\n    }\n    return n.toString();\n}\n\nexport function formatDate(date) {\n    let d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (d.toString() === 'Invalid Date') {\n        return null;\n    }\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function dataURIToBlob(dataURI) {\n    const splitDataURI = dataURI.split(',')\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\n\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type: mimeString })\n}\n\nexport function matchWildcard(str, wildcard) {\n    var escapeRegex = (str) => str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n    return new RegExp(\"^\" + wildcard.split(\"*\").map(escapeRegex).join(\".*\") + \"$\").test(str);\n}\n\nexport function convertNumber(numb, format = '0.0a') {\n    return numeral(numb).format(format)\n}\n","export default {\n    draft: 'Draft',\n    pending: 'For Review',\n    rejected: 'To Revise',\n    approved: 'Approved',\n}","import React, { Fragment, useCallback, useMemo, useRef, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, ModalBody, Modal, Badge, Input, InputGroup, InputGroupAddon, InputGroupText, Spinner, Table, Label, UncontrolledPopover, PopoverBody, Progress } from \"reactstrap\";\nimport { useFormik } from \"formik\";\nimport Datepicker from \"react-datepicker\";\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport moment from \"moment\";\nimport { convertToRupiah } from \"../../../../utils/formatter\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { EditorState, ContentState, convertFromHTML } from 'draft-js';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport draftToHtml from 'draftjs-to-html';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport Select from \"react-select\";\nimport CreatableSelect from 'react-select/creatable'\nimport { toast } from \"react-toastify\";\nimport request, { requestDownload } from \"../../../../utils/request\";\nimport htmlParser from \"html-react-parser\";\nimport { validateEmail } from './shared';\nimport ReactInputMask from \"react-input-mask\";\nimport { useAuthUser } from \"../../../../store\";\nimport { useFilterProjectContext } from \"../ProjectContext\";\nimport statusDeliverable from '../../../../components/DeliverableStatus'\n\nexport default () => {\n    const authUser = useAuthUser();\n    const matchRoute = useRouteMatch();\n    const history = useHistory();\n    const deliverableRef = useRef();\n    const meetingDateRef = useRef();\n    const uploadFile = useRef(null)\n    const [filter, setFilter] = useFilterProjectContext()\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\n    const [reply, setReply] = useState({\n        idActivity: '',\n        comment: '',\n    })\n    const [modalVerify, setModalVerify] = useState({ id: 0, status: '', statusMessage: '', open: false });\n    const [modalMeetingDate, setModalMeetingDate] = useState({ idProject: 0, idActivity: 0, status: '', date: '', link: '', open: false });\n    const [modalMeetingRequest, setModalMeetingRequest] = useState({ idProject: 0, date: '', open: false });\n    const { data: getData, error, mutate } = useSWR(() => `v1/project/${matchRoute.params.projectId}/activity?&sort=${filter.sortActivity.value}${filter.category ? `&category=${filter.category.value}` : ''}${filter.searchActivity ? `&search=${filter.searchActivity}` : ''}`);\n    const loading = !getData\n    const data = useMemo(() => {\n        return getData?.data?.data ?? [];\n    }, [getData]);\n\n    if (error) {\n        history.push('/')\n    }\n    const attendancesOptions = useMemo(() => {\n        const attendances = data?.professional?.map(pro => ({ name: pro.name, id: pro.id, role: 'professional' })) ?? [];\n        return attendances.concat([{ name: data?.client?.name, id: data?.client?.id, role: 'client' }]);\n    }, [data])\n\n    const deliverableData = useMemo(() => {\n        return data?.activityDetails?.filter(act => act.category === 'deliverable').sort((a, b) => a.id - b.id) ?? null\n    }, [data])\n\n    const deliverableStatus = useMemo(() => deliverableData?.filter(act => act.status !== 'draft').pop()?.status, [deliverableData])\n\n    const { values, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: {\n            idActivity: 0,\n            category: 'discussion',\n            content: {},\n            text: '',\n            isDraft: 'false',\n            files: [],\n        },\n        // validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors, setValues }) => {\n            setSubmitting(true)\n            let formData = new FormData()\n            if (values.idActivity) {\n                formData.append('idActivity', values.idActivity)\n            }\n            formData.append('category', values.category)\n            formData.append('content', JSON.stringify(values.content))\n            formData.append('text', values.text)\n            formData.append('isDraft', values.isDraft)\n            if (values.files.length > 0) {\n                values.files.filter(f => !f.id).map((file, i) => {\n                    return formData.append('file' + (i + 1), file.file, file.file.name)\n                })\n            }\n\n            if (values.idActivity) {\n                request.put(`v1/project/${matchRoute.params.projectId}/activity`, formData)\n                    .then(res => {\n                        toast.success('Create activity successfully')\n                        setValues({\n                            idActivity: 0,\n                            category: 'discussion',\n                            content: {},\n                            text: '',\n                            isDraft: 'false',\n                            files: [],\n                        })\n                        setEditorState(EditorState.createEmpty())\n                        mutate()\n                    })\n                    .catch(err => {\n                        toast.error('Create activity failed.');\n                    })\n                    .finally(() => {\n                        setSubmitting(false)\n                    })\n            } else {\n                request.post(`v1/project/${matchRoute.params.projectId}/activity`, formData)\n                    .then(res => {\n                        toast.success('Create activity successfully')\n                        setValues({\n                            idActivity: 0,\n                            category: 'discussion',\n                            content: {},\n                            text: '',\n                            isDraft: 'false',\n                            files: [],\n                        })\n                        setEditorState(EditorState.createEmpty())\n                        mutate()\n                    })\n                    .catch(err => {\n                        toast.error('Create activity failed, maybe your file capacity is full.');\n                    })\n                    .finally(() => {\n                        setSubmitting(false)\n                    })\n            }\n        }\n    })\n\n    const handleClickCategory = useCallback((category) => {\n        if (category === 'discussion') {\n            setValues((state) => ({ ...state, category }))\n        } else {\n            if (deliverableData.length > 0) {\n                setValues({ idActivity: deliverableData[deliverableData.length - 1].status === 'draft' ? deliverableData[deliverableData.length - 1].id : 0, category, content: { attendees: attendancesOptions, additionalAttendees: deliverableData[deliverableData.length - 1].content?.additionalAttendees, meeting: deliverableData[deliverableData.length - 1].content?.meeting }, text: deliverableData[deliverableData.length - 1].text, isDraft: 'true', files: deliverableData[deliverableData.length - 1].files })\n                setEditorState(EditorState.createWithContent(\n                    ContentState.createFromBlockArray(\n                        convertFromHTML(deliverableData[deliverableData.length - 1].text)\n                    )\n                ))\n            } else {\n                setValues((state) => ({ ...state, idActivity: 0, category, content: { attendees: attendancesOptions, additionalAttendees: [], meeting: { date: moment(data?.meetingDetails?.date).format('DD MMMM YYYY'), startTime: moment(data?.meetingDetails?.date).format('HH:mm'), endTime: '' } } }))\n            }\n        }\n    }, [setValues, attendancesOptions, deliverableData, data])\n\n    const handleChangeAttendance = useCallback((e) => {\n        setValues(old => ({ ...old, content: { ...old.content, additionalAttendees: e ?? [] } }))\n    }, [setValues])\n\n    const handleChangeMeetingEndTime = useCallback((e) => {\n        const { value } = e.target;\n        setValues(old => ({ ...old, content: { ...old.content, meeting: { ...old.content.meeting, endTime: value } } }))\n    }, [setValues])\n\n    const handleEditorChange = (editorState) => {\n        setValues(state => ({ ...state, text: draftToHtml(editorState) }))\n    }\n\n    const handlePostReply = () => {\n        request.post(`v1/project/${matchRoute.params.projectId}/activity-reply`, reply)\n            .then(res => {\n                toast.success('Reply Successfully')\n                setReply({\n                    idActivity: '',\n                    comment: '',\n                })\n                mutate()\n            })\n            .catch(err => {\n                toast.error('Reply Failed');\n            })\n    }\n\n    const handleClickSubmit = useCallback(async (e) => {\n        await setValues(old => ({ ...old, isDraft: e }))\n        handleSubmit()\n    }, [setValues, handleSubmit])\n\n    const handleVerifyDeliverable = useCallback((id, status, statusMessage) => {\n        request.put(`v1/project/${matchRoute.params.projectId}/activity-status`, {\n            idActivity: id,\n            status,\n            statusMessage\n        })\n            .then(res => {\n                toast.success('Verify Deliverable Successfully')\n                mutate()\n            })\n            .catch(err => {\n                toast.error('Verify Deliverable Failed.');\n            })\n            .finally(() => {\n                setModalVerify({ id: 0, status: '', statusMessage: '', open: false })\n            })\n    }, [matchRoute.params.projectId, mutate])\n\n    const handleUploadFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (values.files >= 3) {\n            toast.error('Maximum upload files exceeded.')\n            return;\n        }\n        setValues(old => ({ ...old, files: [...old.files, { preview: URL.createObjectURL(files[0]), file: files[0] }] }))\n    }, [setValues, values])\n\n    const handleDeleteFile = useCallback((preview) => {\n        setValues(old => ({ ...old, files: old.files.filter(file => file.preview !== preview) }))\n    }, [setValues])\n\n    const handleChangeFilterCategory = useCallback((e) => {\n        setFilter(state => ({ ...state, category: e ?? '' }));\n    }, [setFilter])\n\n    const sorts = [\n        { label: 'Newest to Oldest', value: 'createdAt_DESC' },\n        { label: 'Oldest to Newest', value: 'createdAt_ASC' },\n    ]\n\n    const handleChangeFilterSort = useCallback((e) => {\n        setFilter(state => ({ ...state, sortActivity: e ?? '' }));\n    }, [setFilter])\n\n    const handleChangeFilterSearch = useCallback((e) => {\n        const { value } = e.target;\n        setFilter(state => ({ ...state, searchActivity: value }));\n    }, [setFilter])\n\n    const [loadingDownload, setLoadingDownload] = useState(false)\n    const handleDownloadDeliverable = useCallback((name, id) => {\n        setLoadingDownload(true)\n        requestDownload(`v1/project/activity/${id}/pdf`, name + '.pdf')\n            .then(() => setLoadingDownload(false))\n    }, [])\n\n    const [modalAlertMeetingDate, setModalAlertMeetingDate] = useState(false);\n    const handleRequestMeetingDate = useCallback(() => {\n        if (deliverableStatus === 'approved') return;\n        if (data.activeRequestMeetingId) {\n            setModalAlertMeetingDate(true)\n        } else {\n            setModalMeetingRequest({ idProject: matchRoute.params.projectId, date: data?.meetingDetails?.date, open: true })\n        }\n    }, [data, matchRoute, setModalAlertMeetingDate, deliverableStatus])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Link to={`/project/${matchRoute.params.projectId}`} className=\"font-xl font-weight-bold mb-4 text-dark\">{data.projectName}</Link>\n            </Col>\n            <Col xs=\"12\" md=\"4\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div><span className=\"text-muted\">Client</span> {data?.client?.name}</div>\n                                <div><span className=\"text-muted\">Consultant</span> {data?.professional?.length ? data?.professional[0]?.name : ''}</div>\n                                <div><span className=\"text-muted\">Contract value</span> IDR {convertToRupiah(data?.contractValue ?? 0)}</div>\n                                <div><span className=\"text-muted\">Starting Date</span> {moment(data?.stratingDate).format('DD MMMM YYYY')}</div>\n                                <div><span className=\"text-muted\">Closing Date</span> {moment(data?.closingDate).format('DD MMMM YYYY')}</div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div className=\"font-lg font-weight-bold mb-3\">Meeting</div>\n                                <div className=\"text-muted\">Meeting Link <a href={data?.meetingDetails?.link ?? ''} target=\"_blank\" rel=\"noopener noreferrer\" className=\"font-weight-bold ml-1\">Click here</a> </div>\n                                <div className=\"mt-2\">\n                                    <div className=\"text-muted mb-1\">Meeting Date</div>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\" className=\"w-100\">\n                                            <Datepicker\n                                                required\n                                                name=\"startDate\"\n                                                selected={new Date(data?.meetingDetails?.date ?? moment())}\n                                                dateFormat=\"dd MMMM yyyy HH:mm\"\n                                                minDate={new Date()}\n                                                className=\"form-control bg-white\"\n                                                showTimeInput\n                                                disabled\n                                                autoComplete=\"off\"\n                                                onChangeRaw={(e) => e.preventDefault()}\n                                            />\n                                            <InputGroupText>\n                                                <FontAwesomeIcon icon=\"calendar-alt\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </div>\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-center mt-3\">\n                                <Button color=\"pinion-primary\" onClick={handleRequestMeetingDate} disabled={deliverableStatus === 'approved'}>\n                                    Request Meeting Date\n                                </Button>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\" md=\"8\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div className=\"font-lg font-weight-bold mb-3\">Key Milestone</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Table bordered className=\"text-center\">\n                                    <thead>\n                                        <tr>\n                                            <th>Activities</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {data?.milestoneDetails?.map((v, i) =>\n                                            <tr key={i}>\n                                                <td>{v.activities}</td>\n                                                <td>{moment(v.date).add(i, 'days').format('DD MMMM YYYY')}</td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-between align-items-center\">\n                                <Button color=\"pinion-primary\" className=\"mr-2 text-light\" id=\"popover-file-list\">Project Files</Button>\n                                <FileList data={data?.fileDetails} />\n                                <div>\n                                    <div className=\"mb-1 text-muted\">Status of deliverable</div>\n                                    <div className=\"mb-3 text-center\">\n                                        <Badge\n                                            color={deliverableStatus === 'approved'\n                                                ? 'success'\n                                                : (deliverableStatus === 'rejected' ? 'danger'\n                                                    : (deliverableStatus === 'pending' ? 'warning'\n                                                        : 'secondary'))}\n                                            className=\"font-lg text-light text-uppercase\"\n                                            style={{ cursor: \"pointer\" }}\n                                            onClick={() => deliverableRef.current.scrollIntoView({ block: \"center\", behavior: \"smooth\" })}\n                                        >\n                                            {statusDeliverable[deliverableStatus] ?? 'Draft'}\n                                        </Badge>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            {deliverableStatus !== 'approved' &&\n                <Col xs=\"12\">\n                    <Card className=\"shadow-sm\">\n                        <CardBody>\n                            <Row>\n                                <Col xs=\"12\" className=\"mb-3\">\n                                    <Button color={`${values?.category === 'discussion' ? 'pinion-primary' : 'light'}`} className=\"mr-3\" onClick={() => handleClickCategory('discussion')} disabled={deliverableStatus === 'approved'}>Discussion</Button>\n                                    {authUser.role === 'professional' && ['draft', 'rejected'].includes(deliverableData?.length > 0 ? deliverableData[deliverableData?.length - 1].status : 'draft') && <Button color={`${values?.category === 'deliverable' ? 'pinion-primary' : 'light'}`} onClick={() => handleClickCategory('deliverable')}>Deliverable</Button>}\n                                </Col>\n                                {values.category === 'deliverable' &&\n                                    <Col xs=\"12\">\n                                        <Row className=\"my-3\">\n                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                <Label>Meeting Date</Label>\n                                            </Col>\n                                            <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                                {values?.content?.meeting?.date}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"my-3\">\n                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                <Label>Meeting Time</Label>\n                                            </Col>\n                                            <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                                <InputGroup>\n                                                    <InputGroupAddon addonType=\"prepend\">\n                                                        <InputGroupText className=\"bg-transparent border-0 pl-0\">\n                                                            {values?.content?.meeting?.startTime} -\n                                                        </InputGroupText>\n                                                        <ReactInputMask type=\"text\" mask=\"99:99\" value={values?.content?.meeting?.endTime} onChange={handleChangeMeetingEndTime} placeholder=\"Example 08:00\">\n                                                            {(inputProps) => <Input {...inputProps} />}\n                                                        </ReactInputMask>\n                                                    </InputGroupAddon>\n                                                </InputGroup>\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"my-3\">\n                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                <Label>Attendees</Label>\n                                            </Col>\n                                            <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex\">\n                                                {values?.content?.attendees?.map((att, i) => (\n                                                    <div key={i}> {att.name}{values?.content?.attendees.length === i + 1 ? '' : \", \"}</div>\n                                                ))}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"my-3\">\n                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                <Label>Additional attendees</Label>\n                                            </Col>\n                                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                <CreatableSelect\n                                                    isClearable\n                                                    isMulti\n                                                    placeholder=\"Input attendees email...\"\n                                                    value={values?.content?.additionalAttendees}\n                                                    isValidNewOption={(inputValue) => validateEmail(inputValue)}\n                                                    onChange={handleChangeAttendance}\n                                                    formatGroupLabel={(data) => <div style={{ display: 'flex', alignItems: 'center' }}><span style={{ fontWeight: 'bold', fontSize: '10px', letterSpacing: '1px' }} className=\"text-muted\">{data.label}</span></div>}\n                                                    noOptionsMessage={(inputValue) => <span>Input attendees email</span>}\n                                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                }\n                                <Col xs=\"12\">\n                                    <Editor\n                                        editorState={editorState}\n                                        editorStyle={{ height: '300px' }}\n                                        onEditorStateChange={(editorState) => setEditorState(editorState)}\n                                        onContentStateChange={(editorState) => handleEditorChange(editorState)}\n                                    />\n                                </Col>\n                                <Col xs=\"12\" className=\"my-3\">\n                                    {values?.files?.map((file, i) => (\n                                        <Fragment key={i}>\n                                            <div className=\"rounded border border-dark d-inline p-1\">\n                                                {file?.file?.name && <FontAwesomeIcon icon=\"times\" color=\"#f86c6b\" className=\"mr-1\" onClick={() => handleDeleteFile(file.preview)} style={{ cursor: \"pointer\" }} />} {file?.file?.name ?? file.fileName}\n                                            </div>\n                                            <div className=\"mb-3\"></div>\n                                        </Fragment>\n                                    ))}\n                                </Col>\n                                <Col xs=\"12\">\n                                    <input type='file' ref={uploadFile} style={{ display: 'none' }} onChange={(e) => handleUploadFile(e)} />\n                                    {/* accept=\"image/*,video/mp4,video/x-m4v,video/*,application/*\" */}\n                                    <Button color=\"pinion-secondary\" disabled={values.files >= 3} className=\"text-light\" onClick={() => uploadFile.current.click()}> <FontAwesomeIcon icon=\"upload\" /> Attachment</Button>\n                                    <Button color=\"pinion-primary\" className=\"float-right\" onClick={() => handleClickSubmit('false')} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Post\"}</Button>\n                                    {values.category === 'deliverable' &&\n                                        <Button color=\"secondary\" className=\"float-right mr-2 text-light\" onClick={() => handleClickSubmit('true')} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Draft\"}</Button>\n                                    }\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n            }\n            <Col xs=\"12\">\n                <Row>\n                    <Col xs=\"12\" md=\"3\">\n                        <div className=\"mb-1 text-muted\">Category</div>\n                        <div className=\"mb-3\">\n                            <Select\n                                options={[{ value: 'deliverable', label: 'Deliverable' }, { value: 'discussion', label: 'Discussion' }, { value: 'meeting_date', label: 'Meeting Date' }]}\n                                value={filter.category}\n                                isClearable\n                                onChange={(e) => handleChangeFilterCategory(e)}\n                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                            />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                        <div className=\"mb-1 text-muted\">Date Sort</div>\n                        <div className=\"mb-3\">\n                            <Select\n                                options={sorts}\n                                value={filter.sortActivity}\n                                onChange={(e) => handleChangeFilterSort(e)}\n                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                            />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\" className=\"justify-content-end\">\n                        <div className=\"mb-1 text-muted\">&nbsp;</div>\n                        <div className=\"mb-3\">\n                            <Input type=\"text\" placeholder=\"Search...\" value={filter.searchActivity} onChange={handleChangeFilterSearch} />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\">\n                        {\n                            loading\n                                ?\n                                <Card className=\"shadow-sm\">\n                                    <CardBody className=\"position-relative\">\n                                        <div\n                                            style={{\n                                                position: \"absolute\",\n                                                top: 0,\n                                                right: 0,\n                                                bottom: 0,\n                                                left: 0,\n                                                // background: \"rgba(255,255,255, 0.5)\",\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                            }}\n                                        >\n                                            <Spinner style={{ width: 48, height: 48 }} />\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                                :\n                                <div>\n                                    {data.activityDetails.length <= 0 &&\n                                        <Card className=\"shadow-sm\">\n                                            <CardBody className=\"position-relative\">\n                                                <div style={{ width: '100%', height: '500px' }} className=\"d-flex align-items-center justify-content-center text-muted\"> No Activities </div>\n                                            </CardBody>\n                                        </Card>\n                                    }\n                                    {data.activityDetails.filter(act => act.status !== 'draft').map((activity, i) => (\n                                        <Card className=\"shadow-sm\" key={i}>\n                                            {filter.sortActivity.value === 'createdAt_DESC' && (deliverableData.length > 0 && deliverableData[deliverableData?.length - 1].id === activity.id) && <div ref={deliverableRef}></div>}\n                                            {activity.category === 'meeting_date' && activity.id === data.activeRequestMeetingId && <div ref={meetingDateRef}></div>}\n                                            <CardBody className=\"position-relative\">\n                                                <div className=\"position-absolute\" style={{ right: 20 }}>\n                                                    <Badge className=\"font-lg text-uppercase text-light\" color={`${activity.category === 'meeting_date' ? 'info' : (activity.category === 'discussion' ? 'warning' : 'pinion-primary')}`}>{activity.category.replace('_', ' ')}</Badge>\n                                                </div>\n                                                <div className=\"position-absolute\" style={{ top: 55, right: 20 }}>\n                                                    {activity.category === 'deliverable' &&\n                                                        <Badge\n                                                            color={activity.status === 'approved'\n                                                                ? 'success'\n                                                                : (activity.status === 'rejected' ? 'danger'\n                                                                    : (activity.status === 'pending' ? 'warning'\n                                                                        : 'secondary'))}\n                                                            className=\"font-sm text-light text-uppercase\"\n                                                        >\n                                                            {statusDeliverable[activity.status] ?? 'Draft'}\n                                                        </Badge>\n                                                    }\n                                                </div>\n                                                <div className=\"font-lg font-weight-bold mb-1\">{activity?.createdBy?.name}</div>\n                                                <div className=\"text-muted mb-3\">{moment.utc(activity.createdAt).local().format('DD MMMM YYYY HH:mm')}</div>\n                                                {activity.category === 'deliverable' &&\n                                                    <div>\n                                                        <Row className=\"my-1\">\n                                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                                <Label>Meeting Date</Label>\n                                                            </Col>\n                                                            <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                                                {activity?.content?.meeting?.date}\n                                                            </Col>\n                                                        </Row>\n                                                        <Row className=\"my-1\">\n                                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                                <Label>Meeting Time</Label>\n                                                            </Col>\n                                                            <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                                                {activity?.content?.meeting?.startTime} - {activity?.content?.meeting?.endTime !== '' ? activity?.content?.meeting?.endTime : 'Finish'}\n                                                            </Col>\n                                                        </Row>\n                                                        <Row className=\"my-1\">\n                                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                                <Label>Attendees</Label>\n                                                            </Col>\n                                                            <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex\">\n                                                                {activity?.content?.attendees?.map((att, i) => (\n                                                                    <div key={i}> {att.name}<span className=\"text-capitalize\">({att.role})</span>{activity?.content?.attendees.length === i + 1 ? '' : ','}</div>\n                                                                ))}\n                                                            </Col>\n                                                        </Row>\n                                                        <Row className=\"my-1\">\n                                                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                                <Label>Additional attendees</Label>\n                                                            </Col>\n                                                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                                {activity?.content?.additionalAttendees?.map(attendees => (attendees.label))}\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                }\n                                                <div className=\"mb-3 activity-text\">{activity.category === 'meeting_date' ? 'Requested meeting date change to ' + moment.utc(activity.content.date).local().format('DD MMMM YYYY HH:mm') : htmlParser(activity.text)}</div>\n                                                <div className=\"mb-4\">\n                                                    {activity?.files?.map((file, i) => (\n                                                        <Fragment key={i}>\n                                                            <div className=\"rounded border d-inline p-1\">\n                                                                <a href={file.fileUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-dark\" style={{ textDecoration: \"none\" }}>{file.fileName}</a>\n                                                            </div>\n                                                            <div className=\"mb-3\"></div>\n                                                        </Fragment>\n                                                    ))}\n                                                </div>\n                                                {/* {activity.status === 'rejected' &&\n                                        <Card className=\"border-danger\">\n                                            <CardBody>\n                                                <div className=\"font-weight-bold\">Feedback</div>\n                                                <div>{activity.statusMessage ? activity.statusMessage : '-'}</div>\n                                            </CardBody>\n                                        </Card>\n                                    } */}\n                                                {activity.category === 'deliverable' &&\n                                                    <div className=\"mb-3 d-flex justify-content-end\">\n                                                        {activity.status === 'pending' && authUser.role !== 'professional' && deliverableStatus !== 'approved' &&\n                                                            <>\n                                                                <Button color=\"warning\" onClick={() => setModalVerify({ id: activity.id, status: 'rejected', statusMessage: '', open: true })}>To Revise</Button>\n                                                                <Button color=\"success\" className=\"mx-2\" onClick={() => setModalVerify({ id: activity.id, status: 'approved', statusMessage: '', open: true })}>Approve</Button>\n                                                            </>\n                                                        }\n                                                        {activity.status === 'approved' && <Button color=\"secondary\" disabled={loadingDownload} onClick={() => handleDownloadDeliverable('deliverable', activity.id)}>{loadingDownload ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Download\"}</Button>}\n                                                    </div>\n                                                }\n                                                {activity.category === 'meeting_date' && activity.status === 'pending' && authUser.id !== activity.createdBy.id && deliverableStatus !== 'approved' &&\n                                                    <div className=\"mb-3 d-flex justify-content-end\">\n                                                        <Button color=\"success\" className=\"mx-2\" onClick={() => setModalMeetingDate({ idProject: matchRoute.params.projectId, idActivity: activity.id, status: 'approved', date: activity.content.date, link: data?.meetingDetails?.link ?? '', open: true })}>Approve</Button>\n                                                        <Button color=\"danger\" onClick={() => setModalMeetingDate({ idProject: matchRoute.params.projectId, idActivity: activity.id, status: 'rejected', date: activity.content.date, link: data?.meetingDetails?.link ?? '', open: true })}>Reject</Button>\n                                                    </div>\n                                                }\n                                                {activity.content?.replies?.length > 0 &&\n                                                    <div className=\"pl-5\">\n                                                        {activity.content?.replies?.map((reply, ir) => (\n                                                            <Card className=\"my-1\" key={ir}>\n                                                                <CardBody className=\"p-3\">\n                                                                    <div className=\"font-lg font-weight-bold mb-1\">{reply.createdBy.name}</div>\n                                                                    <div className=\"text-muted mb-3\">{moment.utc(reply.createdAt).local().format('DD MMMM YYYY HH:mm')}</div>\n                                                                    <div>{reply.comment}</div>\n                                                                </CardBody>\n                                                            </Card>\n                                                        ))}\n                                                    </div>\n                                                }\n                                                {deliverableStatus !== 'approved' &&\n                                                    <div className={`${activity.content?.replies?.length > 0 && 'pl-5'}`}>\n                                                        <TextareaAutosize\n                                                            rows=\"3\"\n                                                            name=\"comment\" id=\"comment\"\n                                                            style={{ borderRadius: \"10px\" }}\n                                                            className=\"form-control\"\n                                                            placeholder=\"Type your reply...\"\n                                                            value={activity.id === reply.idActivity ? reply.comment : ''}\n                                                            onChange={(e) => setReply({ idActivity: activity.id, comment: e.target.value })}\n                                                            onKeyPress={(e) => {\n                                                                if (e.key === 'Enter') {\n                                                                    e.target.blur()\n                                                                    handlePostReply()\n                                                                }\n                                                            }}\n                                                        />\n                                                    </div>\n                                                }\n                                            </CardBody>\n                                        </Card>\n                                    ))}\n                                </div>\n                        }\n                        {filter.sortActivity.value === 'createdAt_ASC' && <div ref={deliverableRef}></div>}\n                        <Modal isOpen={modalVerify.open} centered toggle={() => setModalVerify({ id: 0, status: '', statusMessage: '', open: false })}>\n                            <ModalBody className=\"p-5\">\n                                <Row>\n                                    <Col xs=\"12\">\n                                        <div className=\"mb-2\">\n                                            {modalVerify.status === 'approved'\n                                                ? \"You are about to submit your deliverable for approval process.\"\n                                                : \"You are about to reject a submission and request for a revision. Please leave your comments in the reply box. Options: Cancel or OK\"\n                                            }\n                                        </div>\n                                    </Col>\n                                    {/* {modalVerify.status === 'rejected' &&\n                                        <Col xs=\"12\">\n                                            <TextareaAutosize\n                                                minRows={3}\n                                                style={{ borderRadius: \"10px\" }}\n                                                className=\"form-control\"\n                                                placeholder=\"Type your message...\"\n                                                onChange={(e) => setModalVerify(state => ({ ...state, statusMessage: e.target.value }))}\n                                            />\n                                        </Col>\n                                    } */}\n                                    <Col xs=\"12\" className=\"d-flex justify-content-end mt-5\">\n                                        <Button color=\"secondary\" className=\"mr-2\" onClick={() => setModalVerify({ id: 0, status: '', statusMessage: '', open: false })}>Cancel</Button>\n                                        <Button color=\"primary\" className=\"text-capitalize\" disabled={isSubmitting} onClick={() => handleVerifyDeliverable(modalVerify.id, modalVerify.status, modalVerify.statusMessage)}>{modalVerify.status}</Button>\n                                    </Col>\n                                </Row>\n                            </ModalBody>\n                        </Modal>\n                        <ModalChangeMeetingDate modalMeetingDate={modalMeetingDate} onChangeModalMeetingDate={setModalMeetingDate} mutate={mutate} />\n                        <ModalRequestMeetingDate modalMeetingRequest={modalMeetingRequest} onChangeModalMeetingRequest={setModalMeetingRequest} mutate={mutate} />\n                        <ModalAlertMeetingDate modalAlertMeetingDate={modalAlertMeetingDate} onChangeModalAlertMeetingDate={setModalAlertMeetingDate} meetingDateRef={meetingDateRef} />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nconst FileList = ({ data }) => {\n    const maxFiles = Array(9).fill();\n\n    return (\n        <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target=\"popover-file-list\" popperClassName=\"popover-file-list\">\n            <PopoverBody>\n                <Row className=\"p-2\">\n                    <Col xs=\"8\">\n                        <div className=\"font-weight-bold\">Project Files</div>\n                    </Col>\n                    <Col xs=\"4\">\n                        <Progress className=\"mb-2\" value={(data?.fileList?.length ?? 0) / 9 * 100}>\n                            <div className=\"text-dark text-center\">File {data?.fileList?.length}/9</div>\n                        </Progress>\n                        <Progress color=\"pinion-secondary\" value={(data?.totalSize ?? 0) / 100000000 * 100}>\n                            <div className=\"text-dark text-center\">Capacity {data?.totalSize / 1000000}MB/100MB</div>\n                        </Progress>\n                    </Col>\n                    <Col xs=\"12\" className=\"my-3\">\n                        <Row>\n                            {maxFiles.map((file, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <a href={data?.fileList[i]?.fileUrl ?? ''} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-dark\">\n                                        {i + 1}. {data?.fileList[i]?.fileName}\n                                    </a>\n                                </Col>\n                            ))}\n                        </Row>\n                    </Col>\n                    <Col xs=\"12\">\n                        <div className=\"text-muted\">Your project storage is limited at maximum 9 files or 100 MB</div>\n                    </Col>\n                </Row>\n            </PopoverBody>\n        </UncontrolledPopover>\n    )\n}\n\nconst ModalRequestMeetingDate = ({ modalMeetingRequest, onChangeModalMeetingRequest, mutate }) => {\n    const [meetingDate, setMeetingDate] = useState(null);\n\n    const handleChangeMeetingDate = (e) => {\n        setMeetingDate(e)\n    }\n\n    const handleSend = useCallback((e) => {\n        request.post(`v1/project/${modalMeetingRequest.idProject}/activity`, {\n            category: \"meeting_date\",\n            content: {\n                date: moment(meetingDate)\n            },\n            text: \"\",\n            isDraft: \"false\",\n        })\n            .then(res => {\n                toast.success('Change Meeting Date Successfully.')\n                onChangeModalMeetingRequest({ idProject: 0, date: new Date(), open: false })\n                mutate()\n            })\n            .catch(err => {\n                toast.error('Change Meeting Date Failed.');\n            })\n    }, [modalMeetingRequest, mutate, meetingDate, onChangeModalMeetingRequest])\n\n    return (\n        <Modal isOpen={modalMeetingRequest.open} centered toggle={() => onChangeModalMeetingRequest({ idProject: 0, date: new Date(), open: false })}>\n            <ModalBody className=\"p-5\">\n                <Row>\n                    <Col xs=\"12\">\n                        <div className=\"mb-2\">\n                            Choose the meeting date you want.\n                        </div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <div className=\"mb-2\">\n                            <InputGroup>\n                                <InputGroupAddon addonType=\"prepend\" className=\"w-100\">\n                                    <Datepicker\n                                        required\n                                        name=\"startDate\"\n                                        selected={new Date(meetingDate ?? (modalMeetingRequest?.date ?? moment()))}\n                                        dateFormat=\"dd MMMM yyyy HH:mm\"\n                                        minDate={new Date()}\n                                        className=\"form-control bg-white\"\n                                        showTimeInput\n                                        autoComplete=\"off\"\n                                        onChange={handleChangeMeetingDate}\n                                        // onChange={(e) => console.log(e)}\n                                        onChangeRaw={(e) => e.preventDefault()}\n                                    />\n                                    <InputGroupText>\n                                        <FontAwesomeIcon icon=\"calendar-alt\" />\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                            </InputGroup>\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex justify-content-end mt-5\">\n                        <Button color=\"secondary\" className=\"mr-2\" onClick={() => onChangeModalMeetingRequest({ idProject: 0, date: new Date(), open: false })}>Cancel</Button>\n                        <Button color=\"primary\" className=\"text-capitalize\" onClick={() => handleSend()}>Request</Button>\n                    </Col>\n                </Row>\n            </ModalBody>\n        </Modal>\n    )\n}\n\nconst ModalChangeMeetingDate = ({ modalMeetingDate, onChangeModalMeetingDate, mutate }) => {\n\n    const handleSend = useCallback((e) => {\n        request.put(`v1/project/${modalMeetingDate.idProject}/activity-meeting`, {\n            meetingDetails: {\n                link: modalMeetingDate.link,\n                date: moment(modalMeetingDate.date)\n            },\n            status: modalMeetingDate.status,\n            idActivity: modalMeetingDate.idActivity,\n        })\n            .then(res => {\n                toast.success('Change Meeting Date Successfully.')\n                onChangeModalMeetingDate({ idProject: 0, idActivity: 0, status: '', date: '', link: '', open: false })\n                mutate()\n            })\n            .catch(err => {\n                toast.error('Change Meeting Date Failed.');\n            })\n    }, [modalMeetingDate, mutate, onChangeModalMeetingDate])\n\n    return (\n        <Modal isOpen={modalMeetingDate.open} centered toggle={() => onChangeModalMeetingDate({ idProject: 0, idActivity: 0, status: '', date: '', link: '', open: false })}>\n            <ModalBody className=\"p-5\">\n                <Row>\n                    <Col xs=\"12\">\n                        <div className=\"mb-2\">\n                            {modalMeetingDate.status === 'approved'\n                                ? \"You are about to submit the deliverable. Please be aware that this not a reversible process.\"\n                                : \"Are you sure you want to decline the request?\"\n                            }\n                        </div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <div className=\"mb-2\">\n                            {modalMeetingDate.status === 'approved'\n                                ? <InputGroup>\n                                    <InputGroupAddon addonType=\"prepend\" className=\"w-100\">\n                                        <Datepicker\n                                            required\n                                            name=\"startDate\"\n                                            selected={new Date(modalMeetingDate?.date)}\n                                            dateFormat=\"dd MMMM yyyy HH:mm\"\n                                            minDate={new Date()}\n                                            className=\"form-control bg-white\"\n                                            showTimeInput\n                                            autoComplete=\"off\"\n                                            disabled\n                                            onChangeRaw={(e) => e.preventDefault()}\n                                        />\n                                        <InputGroupText>\n                                            <FontAwesomeIcon icon=\"calendar-alt\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                </InputGroup>\n                                : null\n                            }\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex justify-content-end mt-5\">\n                        {modalMeetingDate.status === 'approved'\n                            ? <>\n                                <Button color=\"secondary\" className=\"mr-2\" onClick={() => onChangeModalMeetingDate({ idProject: 0, idActivity: 0, status: '', date: '', link: '', open: false })}>Cancel</Button>\n                                <Button color=\"primary\" className=\"text-capitalize\" onClick={() => handleSend()}>Confirm</Button>\n                            </>\n                            : <>\n                                <Button color=\"secondary\" className=\"mr-2\" onClick={() => onChangeModalMeetingDate({ idProject: 0, idActivity: 0, status: '', date: '', link: '', open: false })}>No</Button>\n                                <Button color=\"primary\" className=\"text-capitalize\" onClick={() => handleSend()}>Yes</Button>\n                            </>\n                        }\n                    </Col>\n                </Row>\n            </ModalBody>\n        </Modal>\n    )\n}\n\nconst ModalAlertMeetingDate = ({ modalAlertMeetingDate, onChangeModalAlertMeetingDate, meetingDateRef }) => {\n    return (\n        <Modal size=\"sm\" centered isOpen={modalAlertMeetingDate} returnFocusAfterClose={false}\n            toggle={() => {\n                onChangeModalAlertMeetingDate(false)\n                meetingDateRef.current.scrollIntoView({ block: \"center\", behavior: \"smooth\" })\n            }}\n        >\n            <ModalBody className=\"p-4\">\n                <Row>\n                    <Col xs=\"12\">\n                        <div className=\"mb-3 text-center\">\n                            There are still unconfirmed meeting date requests !\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex justify-content-center\">\n                        <Button color=\"secondary\" onClick={() => {\n                            onChangeModalAlertMeetingDate(false)\n                            meetingDateRef.current.scrollIntoView({ block: \"center\", behavior: \"smooth\" })\n                        }}\n                        >\n                            Close\n                        </Button>\n                    </Col>\n                </Row>\n            </ModalBody>\n        </Modal>\n    )\n}\n","export const iconClassByOptionType = {\n    'personnel': 'icon-user text-success',\n    'unit'     : 'icon-organization text-info',\n    'job'      : 'icon-briefcase text-pink',\n    'email'    : 'icon-envelope text-muted',\n    'all'      : 'icon-people text-dark',\n};\n\nexport function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n"],"sourceRoot":""}