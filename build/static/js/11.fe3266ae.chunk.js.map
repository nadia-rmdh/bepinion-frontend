{"version":3,"sources":["utils/formatter.js","hooks/usePagination.js","views/DataDummy/SkillsColorsDummy.js","views/Menu/Projects/Sorts/SkillMatchSort.js","views/Menu/Projects/ProjectProfessionals/ProjectProfessionalsContext.js","views/Menu/Projects/ProjectProfessionals/Filters/SkillsFilter.js","views/Menu/Projects/ProjectProfessionals/Filters/SectorsFilter.js","views/Menu/Projects/ProjectProfessionals/Filters/ExperienceFilter.js","views/Menu/Projects/ProjectProfessionals/Sorts/YearExperienceSort.js","views/Menu/Projects/ProjectProfessionals/Sorts/CostSort.js","views/Menu/Projects/ProjectProfessionals/Filters/EducationFilter.js","views/Menu/Projects/ProjectProfessionals/Filters/EducationFieldFilter.js","views/Menu/Projects/ProjectProfessionals/Filters/FeeFilter.js","views/Menu/Projects/ProjectProfessionals/ProjectProfessionalsList.js"],"names":["convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","convertNumberCurrencies","n","ranges","divider","suffix","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","usePagination","totalData","defaultPage","totalPage","onChangedCurrentPage","useState","currentPage","setCurrentPage","useEffect","next","useCallback","prevState","prev","goto","page","PaginationComponent","useMemo","props","CustomHookPaginationComponent","handleFirst","handleLast","handleNext","handlePrev","handleGoto","count","className","disabled","first","onClick","previous","active","last","SkillMatchSort","useFilterProjectContext","filter","setFilter","isSearchable","options","label","value","onChange","e","state","sortSkill","handleChange","components","DropdownIndicator","IndicatorSeparator","filterProjectProfessionalsContext","createContext","setFilterProjectProfessionalsContext","FilterProjectProfessionalsProvider","limit","skills","sectors","exp","degree","education","fee","min","max","disableFee","sortExp","sortCost","sortSkillsMatch","filterProjectProfessionalsCtx","setFilterProjectProfessionalsCtx","Provider","children","useFilterProjectProfessionalsContext","useContext","SkillsFilter","getSkills","useDataSkills","data","map","p","name","id","closeMenuOnSelect","isClearable","isMulti","placeholder","handleChangeSkills","SectorsFilter","getSector","useDataSectors","handleChangeSectors","ExperienceFilter","target","checked","InputGroup","InputGroupAddon","addonType","InputGroupText","CustomInput","type","YearExperienceSort","CostSort","EducationFilter","getData","useDataEducationDegrees","degrees","handleChangeEducation","EducationFieldFilter","useDataEducationFields","educations","FeeFilter","defaultValue","setDefaultValue","maxValue","minValue","onChangeComplete","ProfessionalsList","history","useHistory","matchRoute","useRouteMatch","modalApply","setModalApply","useSWR","params","projectId","error","mutate","loading","useFormik","initialValues","professionalIds","validationSchema","Yup","shape","cost","onSubmit","values","setSubmitting","setErrors","request","post","then","toast","success","catch","finally","setValues","handleSubmit","isSubmitting","push","style","position","top","right","bottom","left","display","justifyContent","alignItems","Spinner","width","height","Row","Col","xs","md","Card","CardBody","moment","completeDate","format","closingDate","sector","duration","minYearExp","projectRequirementSkill","s","Badge","key","color","skillsColours","fontSize","numberOfAplicants","whiteSpace","averageSubmittedCost","averageSkillMatch","onClickAward","project","Modal","isOpen","centered","toggle","ModalBody","submittedCost","Button","size","comparedData","setComparedData","f","refreshInterval","handleChangeCurrentPage","pagination","pageSummary","total","totalPages","handleCompareProfessionals","professionalName","firstName","skillMatched","toFixed","yearOfExperience","d","handleClearOne","handleClearAll","lg","minimumContractValue","estimatedContractValue","onClear","records","DefaultImageUser","text","to","lastName","educationField","CardFooter","backgroundColor","find","c","includes","status","ProfessionalsCompare","lineHeight","icon"],"mappings":"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","file":"static/js/11.fe3266ae.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'indonesia', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'rb',\n        million: 'jt',\n        billion: 'M',\n        trillion: 'T'\n    },\n    ordinal: function (number) {\n        return number === 1 ? 'er' : 'ème';\n    },\n    currency: {\n        symbol: 'IDR'\n    }\n});\nnumeral.locale('indonesia')\n\nexport function convertToRupiah(angka) {\n    var rupiah = '';\n    var angkarev = angka.toString().split('').reverse().join('');\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';\n\n    return 'IDR ' + rupiah.split('', rupiah.length - 1).reverse().join('');\n}\n\nexport function convertNumberCurrencies(n) {\n    const ranges = [\n        { divider: 1e18, suffix: 'E' },\n        { divider: 1e15, suffix: 'P' },\n        { divider: 1e12, suffix: 'T' },\n        { divider: 1e9, suffix: 'G' },\n        { divider: 1e6, suffix: 'M' },\n        { divider: 1e3, suffix: 'k' }\n    ];\n\n    for (var i = 0; i < ranges.length; i++) {\n        if (n >= ranges[i].divider) {\n            return (n / ranges[i].divider).toString() + ranges[i].suffix;\n        }\n    }\n    return n.toString();\n}\n\nexport function formatDate(date) {\n    let d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (d.toString() === 'Invalid Date') {\n        return null;\n    }\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function dataURIToBlob(dataURI) {\n    const splitDataURI = dataURI.split(',')\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\n\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type: mimeString })\n}\n\nexport function matchWildcard(str, wildcard) {\n    var escapeRegex = (str) => str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n    return new RegExp(\"^\" + wildcard.split(\"*\").map(escapeRegex).join(\".*\") + \"$\").test(str);\n}\n\nexport function convertNumber(numb, format = '0.0a') {\n    return numeral(numb).format(format)\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n\nexport default function usePagination(totalData, defaultPage, totalPage, onChangedCurrentPage) {\n    const [currentPage, setCurrentPage] = useState(defaultPage);\n\n    useEffect(() => onChangedCurrentPage(currentPage), [currentPage, onChangedCurrentPage])\n\n    const next = useCallback(() => {\n        setCurrentPage(prevState => prevState === (totalPage - 1) ? prevState : prevState + 1);\n    }, [totalPage])\n\n    const prev = useCallback(() => {\n        setCurrentPage(prevState => prevState === 0 ? prevState : prevState - 1);\n    }, []);\n\n    const goto = useCallback((page) => {\n        setCurrentPage(page);\n    }, [])\n\n    const PaginationComponent = useMemo(() => {\n        return (props) => <CustomHookPaginationComponent\n            handleFirst={() => goto(0)}\n            handleLast={() => goto(totalPage - 1)}\n            handleNext={next}\n            handlePrev={prev}\n            handleGoto={goto}\n            currentPage={currentPage}\n            count={totalPage}\n        />;\n    }, [goto, next, prev, currentPage, totalPage]);\n    return { currentPage, next, prev, goto, totalPage, PaginationComponent };\n}\n\nconst CustomHookPaginationComponent = ({ handleFirst, handleLast, handleNext, handlePrev, handleGoto, count, currentPage }) => {\n    return (\n        <Pagination className=\"pagination-hub d-flex justify-content-center\">\n            {handleFirst && <PaginationItem disabled={currentPage - 1 >= 0 ? false : true}>\n                <PaginationLink first onClick={handleFirst} disabled={currentPage === 0} />\n            </PaginationItem>}\n            {handlePrev && <PaginationItem disabled={currentPage - 1 >= 0 ? false : true}>\n                <PaginationLink previous onClick={handlePrev} disabled={currentPage === 0} />\n            </PaginationItem>}\n            {currentPage - 3 >= 0 &&\n                <PaginationItem disabled>\n                    <PaginationLink className=\"text-dark\">...</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage - 2 >= 0 &&\n                <PaginationItem className=\"d-none d-md-block\">\n                    <PaginationLink onClick={() => handleGoto(currentPage - 2)}>{currentPage - 1}</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage - 1 >= 0 &&\n                <PaginationItem>\n                    <PaginationLink onClick={() => handleGoto(currentPage - 1)}>{currentPage}</PaginationLink>\n                </PaginationItem>\n            }\n            <PaginationItem active disabled>\n                <PaginationLink onClick={() => handleGoto(currentPage)}>{currentPage + 1}</PaginationLink>\n            </PaginationItem>\n            {currentPage + 1 < count &&\n                <PaginationItem>\n                    <PaginationLink onClick={() => handleGoto(currentPage + 1)}>{currentPage + 2}</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage + 2 < count &&\n                <PaginationItem className=\"d-none d-md-block\">\n                    <PaginationLink onClick={() => handleGoto(currentPage + 2)}>{currentPage + 3}</PaginationLink>\n                </PaginationItem>\n            }\n            {/* {[...Array(count).keys()].map(index => (\n                <PaginationItem key={index} active={currentPage === index} disabled={currentPage === index}>\n                    <PaginationLink onClick={() => handleGoto(index)}>{index + 1}</PaginationLink>\n                </PaginationItem>\n            ))} */}\n            {currentPage + 3 < count &&\n                <PaginationItem disabled>\n                    <PaginationLink className=\"text-dark\">...</PaginationLink>\n                </PaginationItem>\n            }\n            <PaginationItem disabled={currentPage + 1 < count ? false : true}>\n                <PaginationLink next onClick={handleNext} disabled={currentPage === count - 1} />\n            </PaginationItem>\n            <PaginationItem disabled={currentPage + 1 < count ? false : true}>\n                <PaginationLink last onClick={handleLast} disabled={currentPage === count - 1} />\n            </PaginationItem>\n        </Pagination>\n    )\n}","export default [\n    'success',\n    'danger',\n    'warning',\n    'secondary',\n    'info',\n    'primary',\n    'dark'\n]","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from '../ProjectContext';\n\nfunction SkillMatchSort() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const skill = [\n        { label: 'Lowest to Highest', value: 'lowest' },\n        { label: 'Highest to Lowest', value: 'highest' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortSkill: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Skill Match</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={skill}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortSkill} />\n        </>\n    )\n}\n\nexport default SkillMatchSort","import React, { createContext } from 'react'\nimport { useState } from 'react'\nimport { useContext } from 'react'\n\nconst filterProjectProfessionalsContext = createContext()\nconst setFilterProjectProfessionalsContext = createContext()\n\nexport default function FilterProjectProfessionalsProvider(props) {\n    const [filterProjectProfessionalsCtx, setFilterProjectProfessionalsCtx] = useState({\n        limit: 10,\n        page: 0,\n        skills: [],\n        sectors: [],\n        exp: '',\n        degree: [],\n        education: [],\n        fee: { min: 500000, max: 1000000 },\n        disableFee: false,\n        sortExp: { label: 'Highest to Lowest', value: 'yearOfExperience_DESC' },\n        sortCost: { label: 'Lowest to Highest', value: 'submittedCost_ASC' },\n        sortSkillsMatch: { label: 'Lowest to Highest', value: 'lowest' },\n    })\n\n    return (\n        <setFilterProjectProfessionalsContext.Provider value={setFilterProjectProfessionalsCtx}>\n            <filterProjectProfessionalsContext.Provider value={filterProjectProfessionalsCtx}>\n                {props.children}\n            </filterProjectProfessionalsContext.Provider>\n        </setFilterProjectProfessionalsContext.Provider>\n    )\n}\n\n\nexport const useFilterProjectProfessionalsContext = () => {\n    return [useContext(filterProjectProfessionalsContext), useContext(setFilterProjectProfessionalsContext)]\n}","import React, { useMemo } from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\nimport useDataSkills from \"../../../../../hooks/useDataSkills\";\n\nfunction SkillsFilter() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const handleChangeSkills = (e) => {\n        setFilter(state => ({ ...state, skills: e ?? [] }))\n    }\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Skills Requirements</div>\n            <div className=\"px-3\">\n                <Select\n                    closeMenuOnSelect={false}\n                    options={skills}\n                    isClearable\n                    isMulti\n                    placeholder=\"Choose some skills...\"\n                    onChange={(e) => handleChangeSkills(e)}\n                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                    value={filter.skills} />\n            </div>\n        </>\n    )\n}\n\nexport default SkillsFilter","import React, { useMemo } from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\nimport useDataSectors from \"../../../../../hooks/useDataSectors\";\n\nfunction SectorsFilter() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeSectors = (e) => {\n        setFilter(state => ({ ...state, sectors: e ?? [] }))\n    }\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Sector</div>\n            <div className=\"px-3\">\n                <Select\n                    closeMenuOnSelect={false}\n                    options={sectors}\n                    isClearable\n                    isMulti\n                    placeholder=\"Choose some sectors...\"\n                    onChange={(e) => handleChangeSectors(e)}\n                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                    value={filter.sectors} />\n            </div>\n        </>\n    )\n}\n\nexport default SectorsFilter","import React, { useCallback } from 'react'\nimport { InputGroup, InputGroupAddon, InputGroupText, CustomInput } from 'reactstrap'\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\n\nfunction ExperienceFilter() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const handleChange = useCallback((e) => {\n        const { value, checked } = e.target;\n        setFilter(state => ({ ...state, exp: checked ? value : '' }));\n    }, [setFilter])\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Years of experience</div>\n            <div className=\"px-3\">\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"<3\" value=\"<3\" checked={filter.exp === '<3'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        Less than 3 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"3-6\" value=\"3-6\" checked={filter.exp === '3-6'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        3-6 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"6-10\" value=\"6-10\" checked={filter.exp === '6-10'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        6-10 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"10-20\" value=\"10-20\" checked={filter.exp === '10-20'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        10-20 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\">20\" value=\">20\" checked={filter.exp === '>20'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        More than 20 years\n                    </div>\n                </InputGroup>\n            </div>\n        </>\n    )\n}\n\nexport default ExperienceFilter","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\n\nfunction YearExperienceSort() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const sorts = [\n        { label: 'Lowest to Highest', value: 'yearOfExperience_ASC' },\n        { label: 'Highest to Lowest', value: 'yearOfExperience_DESC' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortExp: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Years of experience</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={sorts}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortExp} />\n        </>\n    )\n}\n\nexport default YearExperienceSort","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\n\nfunction CostSort() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const sorts = [\n        { label: 'Lowest to Highest', value: 'submittedCost_ASC' },\n        { label: 'Highest to Lowest', value: 'submittedCost_DESC' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortCost: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Cost</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={sorts}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortCost} />\n        </>\n    )\n}\n\nexport default CostSort","import React, { useMemo } from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\nimport useDataEducationDegrees from '../../../../../hooks/useDataEducationDegrees';\n\nfunction EducationFilter() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const { data: getData } = useDataEducationDegrees();\n    const degrees = useMemo(() => getData.map(p => ({ label: p.name, value: p.id })), [getData])\n\n    const handleChangeEducation = (e) => {\n        setFilter(state => ({ ...state, degree: e ?? [] }))\n    }\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Education</div>\n            <div className=\"px-3\">\n                <Select\n                    closeMenuOnSelect={false}\n                    options={degrees}\n                    isClearable\n                    isMulti\n                    placeholder=\"Choose some...\"\n                    onChange={(e) => handleChangeEducation(e)}\n                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                    value={filter.degree} />\n            </div>\n        </>\n    )\n}\n\nexport default EducationFilter","import React, { useMemo } from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\nimport useDataEducationFields from \"../../../../../hooks/useDataEducationFields\";\n\nfunction EducationFieldFilter() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const { data: getData } = useDataEducationFields();\n    const educations = useMemo(() => getData.map(p => ({ label: p.name, value: p.id })), [getData])\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, education: e ?? [] }))\n    }\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Education Field</div>\n            <div className=\"px-3\">\n                <Select\n                    closeMenuOnSelect={false}\n                    options={educations}\n                    isClearable\n                    isMulti\n                    placeholder=\"Choose some...\"\n                    onChange={(e) => handleChange(e)}\n                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                    value={filter.education} />\n            </div>\n        </>\n    )\n}\n\nexport default EducationFieldFilter","import React, { useEffect, useState } from 'react'\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\nimport InputRange from 'react-input-range';\nimport \"react-input-range/lib/css/index.css\";\nimport { CustomInput } from 'reactstrap';\n\nfunction FeeFilter({ min, max }) {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n    const [defaultValue, setDefaultValue] = useState({ min: min + 100, max: max - 100 });\n\n    useEffect(() => {\n        setDefaultValue({ min: min + 100, max: max - 100 })\n    }, [setDefaultValue, min, max]);\n\n    const handleChange = (e) => {\n        setDefaultValue(e)\n    }\n\n    const handleComplete = (e) => {\n        setFilter(state => ({ ...state, fee: e }))\n    }\n\n    const handleChangeCheckbox = (e) => {\n        const { checked } = e.target;\n\n        setFilter(state => ({ ...state, disableFee: checked }))\n    }\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-4 text-center\">Proposed Service Fees</div>\n            <div className=\"px-3 mb-4\">\n                <InputRange\n                    maxValue={max}\n                    minValue={min}\n                    value={defaultValue}\n                    onChange={handleChange}\n                    onChangeComplete={handleComplete} />\n            </div>\n            <div className=\"px-1 d-flex\">\n                <CustomInput type=\"checkbox\" checked={filter.disableFee} onChange={handleChangeCheckbox} id=\"dueDateCheckbox\" /> Remove proposal above estimated contract value\n            </div>\n        </>\n    )\n}\n\nexport default FeeFilter","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, ModalBody, Modal, Badge, CardFooter, CustomInput, Spinner } from \"reactstrap\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport skillsColours from '../../../DataDummy/SkillsColorsDummy'\nimport FilterProjectProfessionalsProvider, { useFilterProjectProfessionalsContext } from \"./ProjectProfessionalsContext\";\nimport SkillsFilter from \"./Filters/SkillsFilter\";\nimport SectorsFilter from \"./Filters/SectorsFilter\";\nimport ExperienceFilter from \"./Filters/ExperienceFilter\";\nimport YearExperienceSort from \"./Sorts/YearExperienceSort\";\nimport { DefaultImageUser } from \"../../../../components/DefaultImageUser/DefaultImageUser\";\nimport CostSort from \"./Sorts/CostSort\";\nimport SkillMatchSort from \"../Sorts/SkillMatchSort\";\nimport { convertNumberCurrencies, convertToRupiah } from \"../../../../utils/formatter\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport usePagination from \"../../../../hooks/usePagination\";\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport moment from \"moment\";\nimport request from \"../../../../utils/request\";\nimport { toast } from \"react-toastify\";\nimport EducationFilter from \"./Filters/EducationFilter\";\nimport EducationFieldFilter from \"./Filters/EducationFieldFilter\";\nimport FeeFilter from \"./Filters/FeeFilter\";\n\nexport default () => {\n    const history = useHistory();\n    const matchRoute = useRouteMatch();\n    const [modalApply, setModalApply] = useState(false);\n    const { data: getData, error, mutate } = useSWR(() => `v1/project/${matchRoute.params.projectId}/selection`);\n    const loading = !getData || error\n    const data = useMemo(() => {\n        return getData?.data?.data ?? [];\n    }, [getData]);\n\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            cost: Yup.number().min(1, 'Min value 1.').label('Duration'),\n        })\n    }\n\n    const { setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: {\n            professionalIds: modalApply?.id,\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            request.post(`v1/project/${matchRoute.params.projectId}/submit`, { professionalIds: [values.professionalIds] })\n                .then(() => {\n                    toast.success(`Successfully submitted`);\n                    mutate()\n                })\n                .catch(() => {\n                    toast.error(`Failed to submit`);\n                })\n                .finally(() => {\n                    setSubmitting(false)\n                    setModalApply(false)\n                });\n        }\n    })\n    if (loading) {\n        if (error) history.push('/')\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                    // background: \"rgba(255,255,255, 0.5)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Spinner style={{ width: 48, height: 48 }} />\n            </div>\n        )\n    }\n\n    return (\n        <FilterProjectProfessionalsProvider>\n            <Row>\n                <Col xs=\"12\" md=\"6\">\n                    <Card className=\"shadow-sm\">\n                        <CardBody>\n                            <Row>\n                                <Col xs=\"12\" className=\"d-flex justify-content-between mb-3\">\n                                    <div className=\"font-xl font-weight-bold\">{data.name}</div>\n                                </Col>\n                                <Col xs=\"7\">\n                                    <div><span className=\"text-muted\">Completion Date</span> {moment(data.completeDate).format('DD MMMM YYYY')}</div>\n                                    <div><span className=\"text-muted\">Closing Date</span> {moment(data.closingDate).format('DD MMMM YYYY')}</div>\n                                    <div><span className=\"text-muted\">Sector</span> {data.sector}</div>\n                                    <div><span className=\"text-muted\">Duration</span> {data.duration} hours</div>\n                                    <div><span className=\"text-muted\">Years of experience</span> {data.minYearExp} Years</div>\n                                    {/* <div><span className=\"text-muted\">Degree</span> {data.requirementEducationDegree}</div>\n                                    <div><span className=\"text-muted\">Field</span> {data.requirementEducationField}</div> */}\n                                </Col>\n                                <Col xs=\"5\">\n                                    {data?.projectRequirementSkill?.map((s, i) => (\n                                        <Badge key={i} color={skillsColours[i]} className=\"w-100 text-uppercase font-sm my-1 text-light\">{s.name}</Badge>\n                                    ))}\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n                <Col xs=\"12\" md=\"6\">\n                    <Card className=\"shadow-sm\">\n                        <CardBody>\n                            <Row>\n                                <Col xs=\"12\">\n                                    <div className=\"font-xl font-weight-bold\">Statistics</div>\n                                </Col>\n                                <Col xs=\"12\" className=\"d-flex my-1 justify-content-center\">\n                                    <Row className=\"text-center\">\n                                        <Col xs=\"12\" md=\"4\">\n                                            <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}>{data.numberOfAplicants ?? 0}</div>\n                                            <p style={{ whiteSpace: 'nowrap' }}>Number of applicant</p>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"4\">\n                                            <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}>{convertNumberCurrencies(data?.averageSubmittedCost ?? 0)}</div>\n                                            <p style={{ whiteSpace: 'nowrap' }}>Average Cost</p>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"4\">\n                                            <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}>{data.averageSkillMatch ?? 0}%</div>\n                                            <p style={{ whiteSpace: 'nowrap' }}>Avarage Skills Match</p>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n                <Col xs=\"12\">\n                    <ProfessionalsList onClickAward={(data) => {\n                        setModalApply(data);\n                        setValues(state => ({ ...state, professionalIds: data.id }))\n                    }} project={data} />\n                </Col>\n                <Modal isOpen={modalApply} centered toggle={() => setModalApply(!modalApply)}>\n                    <ModalBody className=\"p-5\">\n                        <Row>\n                            <Col xs=\"12\" className=\"mb-5\">\n                                <div className=\"mb-2\">\n                                    <div className=\"text-muted\">Sector</div>\n                                    <div>{modalApply?.sectors?.map((s, i) => `${s.name}${modalApply.sectors.length === i + 1 ? '' : ','} `)}</div>\n                                </div>\n                                <div className=\"mb-2\">\n                                    <div className=\"text-muted\">Duration</div>\n                                    <div>{data.duration} Hours</div>\n                                </div>\n                                <div className=\"mb-2\">\n                                    <div className=\"text-muted\">Completion Date</div>\n                                    <div>{moment(data.completeDate).format('DD MMMM YYYY')}</div>\n                                </div>\n                                <div className=\"mb-2\">\n                                    <div className=\"text-muted\">Submited Cost</div>\n                                    <div>\n                                        {convertToRupiah(modalApply.submittedCost ?? 0)}\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                <Button color=\"secondary\" className=\"mr-2\" onClick={() => setModalApply(!modalApply)}>Cancel</Button>\n                                <Button color=\"primary\" disabled={isSubmitting} onClick={handleSubmit}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : 'Apply'}</Button>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                </Modal>\n            </Row>\n        </FilterProjectProfessionalsProvider>\n    );\n}\n\nconst ProfessionalsList = ({ onClickAward, project }) => {\n    const matchRoute = useRouteMatch();\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n    const [comparedData, setComparedData] = useState([])\n    const { data: getData, error } = useSWR(() => \"v1/professional?\" +\n        (filter.limit ? `limit=${filter.limit}` : '') +\n        (filter.project ? `&projectId=${filter.project.value}` : '') +\n        (filter.exp ? `&yearOfExperience=${filter.exp}` : '') +\n        (filter.skills.length > 0 ? `&skillIds=${filter.skills.map(f => f.value).toString()}` : '') +\n        (filter.sectors.length > 0 ? `&sectorIds=${filter.sectors.map(f => f.value).toString()}` : '') +\n        (filter.degree.length > 0 ? `&educationIds=${filter.degree.map(f => f.value).toString()}` : '') +\n        (filter.education.length > 0 ? `&educationFieldIds=${filter.education.map(f => f.value).toString()}` : '') +\n        (filter.fee.min ? `&minSubmittedCost=${filter.fee.min}` : '') +\n        (filter.fee.max && !filter.disableFee ? `&maxSubmittedCost=${filter.fee.max}` : '') +\n        `&sort=${filter.sortExp.value},${filter.sortCost.value}` +\n        `&page=${filter.page + 1}&projectId=${matchRoute.params.projectId}&fromSelection=true`\n        , { refreshInterval: 1800000 });\n    const loading = !getData || error\n    const data = useMemo(() => {\n        return getData?.data?.data ?? [];\n    }, [getData]);\n\n    const handleChangeCurrentPage = useCallback(\n        (page) => {\n            setFilter((state) => ({ ...state, pagination: page }));\n        },\n        [setFilter]\n    );\n\n    const { PaginationComponent } = usePagination(\n        data?.pageSummary?.total,\n        filter.page,\n        data?.pageSummary?.totalPages,\n        handleChangeCurrentPage\n    );\n\n    const handleCompareProfessionals = useCallback((e, p) => {\n        const { checked } = e.target;\n\n        if (checked) {\n            setComparedData(state => [...state, { id: p.id, professionalName: p.firstName, skillMatched: p.skillMatched.toFixed(2), submittedCost: p.submittedCost, yearOfExperience: p.yearOfExperience }])\n        } else {\n            setComparedData(state => state.filter(d => d.id !== p.id))\n        }\n\n    }, [])\n\n    const handleClearOne = useCallback((p) => {\n        setComparedData(state => state.filter(d => d.id !== p.id))\n    }, [])\n\n    const handleClearAll = useCallback((p) => {\n        setComparedData([])\n    }, [])\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\" lg=\"3\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <h5 className=\"font-weight-bold mb-4 text-center\">FILTER</h5>\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <SkillsFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <SectorsFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <ExperienceFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <EducationFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <EducationFieldFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <FeeFilter min={project.minimumContractValue} max={project.estimatedContractValue} />\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\" lg=\"9\">\n                {comparedData.length > 0 &&\n                    <ProfessionalsCompare data={comparedData} onClear={handleClearOne} onClickAward={onClickAward} />\n                }\n                <Row className=\"mb-4\">\n                    <Col xs=\"3\">\n                        <YearExperienceSort />\n                    </Col>\n                    <Col xs=\"3\">\n                        <CostSort />\n                    </Col>\n                    <Col xs=\"3\">\n                        <SkillMatchSort />\n                    </Col>\n                    <Col xs=\"3\" className=\"d-flex align-items-center\">\n                        {comparedData.length > 0 &&\n                            <Button color=\"danger\" onClick={handleClearAll}>\n                                Remove all ticked\n                            </Button>\n                        }\n                    </Col>\n                </Row>\n                <Row className=\"mb-2\">\n                    {loading ?\n                        <div\n                            style={{\n                                position: \"absolute\",\n                                top: 0,\n                                right: 0,\n                                bottom: 0,\n                                left: 0,\n                                // background: \"rgba(255,255,255, 0.5)\",\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <Spinner style={{ width: 48, height: 48 }} />\n                        </div>\n                        :\n                        data?.records?.map((p, i) => (\n                            <Col xs=\"12\" key={i}>\n                                <Card className=\"shadow-sm\">\n                                    <CardBody>\n                                        <Row>\n                                            <Col xs=\"7\">\n                                                <Row>\n                                                    <Col xs=\"4\" className=\"d-flex justify-content-center align-items-center\">\n                                                        <DefaultImageUser text={p.firstName} size={90} />\n                                                    </Col>\n                                                    <Col xs=\"8\">\n                                                        <Row>\n                                                            <Col xs=\"12\">\n                                                                <Link to={`/professional/${p.id}`}>\n                                                                    <h4>{p.firstName} {p.lastName}</h4>\n                                                                </Link>\n                                                            </Col>\n                                                            <Col xs=\"12\">\n                                                                <p>{p.degree} in {p.educationField}</p>\n                                                            </Col>\n                                                            <Col xs=\"12\">\n                                                                <p>{p.yearOfExperience} year experience</p>\n                                                            </Col>\n                                                            <Col xs=\"12\">\n                                                                <span className=\"text-muted\">Sector</span>\n                                                                <br />\n                                                                {p.sectors.map((s, i) => `${s.name}${p.sectors.length === i + 1 ? '' : ','} `)}\n                                                            </Col>\n                                                        </Row>\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                            <Col xs=\"5\">\n                                                {p.skills.map((s, i) => (\n                                                    <Badge key={i} color={skillsColours[i]} className=\"w-100 text-uppercase mx-1 font-sm text-light\">{s.name}</Badge>\n                                                ))}\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                    <CardFooter style={{ backgroundColor: '#fde2c1' }}>\n                                        <Row>\n                                            <Col xs=\"4\" className=\"d-flex align-items-center font-weight-bold\">\n                                                {convertToRupiah(p.submittedCost)}\n                                            </Col>\n                                            <Col xs=\"4\" className=\"d-flex align-items-center font-weight-bold\">\n                                                Skills Match {p.skillMatched.toFixed(2)}%\n                                            </Col>\n                                            <Col xs=\"4\" className=\"d-flex justify-content-end\">\n                                                <div className=\"d-flex align-items-center\">\n                                                    <CustomInput type=\"checkbox\" id={p.id} value={p.id} checked={comparedData.find(c => c.id === p.id)} disabled={comparedData.length === 3 ? (comparedData.find(c => c.id === p.id) ? false : true) : false} onChange={(e) => handleCompareProfessionals(e, p)} />\n                                                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                        Compare\n                                                    </div>\n                                                </div>\n                                                <Button color=\"primary\" size=\"sm\" className=\"ml-2\" disabled={['tnc_review', 'on_going', 'close'].includes(project.status)} onClick={() => onClickAward(p)}>\n                                                    Award\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </CardFooter>\n                                </Card>\n                            </Col>\n                        ))}\n                    <Col xs=\"12\">\n                        <PaginationComponent />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nconst ProfessionalsCompare = ({ data, onClear, onClickAward }) => {\n    return (\n        <Row className=\"mb-4\">\n            <Col xs=\"12\">\n                <Row className=\"text-center px-3\">\n                    <Col xs=\"3\" className=\"p-0\">\n                        <div className=\"border font-weight-bold\" style={{ backgroundColor: '#fde2c1', lineHeight: '25pt' }}>Comparing</div>\n                        <div style={{ lineHeight: '25pt' }} className=\"border font-weight-bold\">Skill Match</div>\n                        <div style={{ lineHeight: '25pt' }} className=\"border font-weight-bold\">Cost</div>\n                        <div style={{ lineHeight: '25pt' }} className=\"border font-weight-bold\">Years of experience</div>\n                        <div style={{ lineHeight: '25pt' }} className=\"border font-weight-bold\">Action</div>\n                    </Col>\n                    {data.map((p, i) => (\n                        <Col xs=\"3\" className=\"p-0\" key={i}>\n                            <div className=\"border font-weight-bold position-relative\" style={{ backgroundColor: '#fde2c1', lineHeight: '25pt' }}>\n                                {p.professionalName}\n                                <Button size=\"sm\" className=\"position-absolute\" color=\"danger\" style={{ top: '2px', right: '4px' }} onClick={() => onClear(p)}>\n                                    <FontAwesomeIcon icon=\"times\" size=\"sm\" />\n                                </Button>\n                            </div>\n                            <div style={{ lineHeight: '25pt' }} className=\"border\">{p.skillMatched}%</div>\n                            <div style={{ lineHeight: '25pt' }} className=\"border\">{convertToRupiah(p.submittedCost)}</div>\n                            <div style={{ lineHeight: '25pt' }} className=\"border\">{p.yearOfExperience}</div>\n                            <div style={{ lineHeight: '25pt' }} className=\"border\">\n                                <Button color=\"primary\" size=\"sm\" className=\"ml-2\" onClick={() => onClickAward(p)}>\n                                    Award\n                                </Button>\n                            </div>\n                        </Col>\n                    ))}\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n"],"sourceRoot":""}