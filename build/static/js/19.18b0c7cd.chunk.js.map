{"version":3,"sources":["views/Menu/Profile/Components/Navigation.js","views/Menu/Profile/Forms/RegistrantForm.js","views/Menu/Profile/Forms/EducationForm.js","views/Menu/Profile/Forms/WorkExprerienceForm.js","views/Menu/Profile/Forms/ProjectExperienceForm.js","views/Menu/Profile/Forms/SkillSectorForm.js","views/Menu/Profile/Forms/DocumentVerificationForm.js","views/Menu/Profile/Forms/CompanyInformationForm.js","views/Menu/Profile/Forms/RegistrantCompanyForm.js","views/Menu/Profile/Profile.js"],"names":["NavigationDot","props","pageName","useCallback","i","role","dots","totalSteps","push","className","Nav","tabs","map","p","NavItem","key","NavLink","active","currentStep","onClick","goToStep","data","currentData","useMemo","firstName","lastName","gender","dateOfBirth","dob","moment","idType","label","value","idNumber","identityNumber","npwpNumber","npwp","address","province","name","id","phone","phoneNumber","email","sector","useFormik","initialValues","validationSchema","optional","registrationForm","Yup","required","shape","oneOf","onSubmit","values","setSubmitting","setErrors","onSubmitForm","nextStep","touched","errors","setValues","handleSubmit","isSubmitting","Row","Col","xs","registrantData","setRegistrantData","contactData","setContactData","RegistrantInformationForm","useState","isEdit","setIsEdit","getSector","useDataSectors","sectors","handleChangeFirstName","e","target","old","handleChangeLastName","handleChangeSector","handleChangeGender","checked","handleChangeDateOfBirth","handleChangeIdType","handleChangeIdNumber","handleChangeNpwpNumber","Card","CardBody","Button","color","disabled","icon","md","lg","Label","for","Input","type","onChange","placeholder","options","isDisabled","components","DropdownIndicator","IndicatorSeparator","InputGroup","InputGroupAddon","addonType","InputGroupText","CustomInput","initialSettings","singleDatePicker","showDropdowns","startDate","Date","maxDate","autoApply","onApply","style","background","cursor","padding","border","width","format","onWheel","blur","onInput","Math","max","parseInt","toString","slice","Spinner","size","ContactInformationForm","getProvince","useDataProvinces","handleChangeProvince","handleChangeAddress","handleChangePhone","handleChangeEmail","minRows","educations","v","degree","educationDegree","school","education","educationField","graduationYear","getDegree","useDataEducationDegrees","getSchool","useDataSchools","getEduField","useDataEducationFields","eduField","of","educationData","setEducationData","handleChangeDegree","edu","handleChangeSchool","handleChangeEducation","handleChangeGraduationYear","handleAddEducationData","length","handleDeleteEducationData","filter","workExperience","job","jobTitle","company","companyName","employementType","employmentType","replace","charAt","toUpperCase","location","endDate","endDatePresent","isStillPresent","skills","skill","provinces","employementTypes","getSkills","useDataSkills","workExperienceData","setWorkExperienceData","work","handleChangeEmployementType","handleChangeLocation","handleChangeJob","handleChangeCompany","handleChangeStartDate","handleChangeEndDate","handleChangePresent","handleChangeSkills","handleAddWorkExperienceData","handleDeleteWorkExperienceData","selected","showMonthYearPicker","showFullMonthYearPicker","showFourColumnMonthYearPicker","dateFormat","placeholderText","wrapperClassName","minDate","closeMenuOnSelect","isClearable","isMulti","projectExperience","projectName","client","clientName","projectRole","country","description","hasProjectExperience","setHasProjectExperience","getCountries","useDataCountries","countries","projectExperienceData","setProjectExperienceData","project","handleChangeCountry","handleChangeProjectName","handleChangeClient","handleChangeProjectRole","handleChangeDescription","handleAddprojectExperienceData","handleDeleteprojectExperienceData","colorSkills","floor","random","min","skillSectorData","setSkillSectorData","colourStyles","multiValue","styles","backgroundColor","multiValueLabel","opt","dataOptions","find","u","isOptionDisabled","option","npwpFile","useRef","regIdFile","photoFile","preview","npwpImageUrl","regId","identityImageUrl","photo","avatar","file","onFinishRegistration","verificationData","setVerificationData","onErrorImage","src","noImage","onerror","onChangeNpwpFile","preventDefault","files","toast","error","URL","createObjectURL","onChangeRegIdFile","onChangePhotoFile","height","alt","objectFit","position","onError","ref","display","accept","current","click","console","log","businessName","companySize","aboutUs","about","companyInformationData","setCompanyInformationData","CompanyInformationForm","handleChangeBusinessName","handleChangecompanySize","handleChangeAboutUs","registrantInformation","handleChangeJobTitle","Biodata","DefaultImageUser","text","createdAt","translate","useLocation","history","useHistory","authUser","useAuthUser","modalSubmitForm","setModalSubmitForm","setInstance","companyInformationForm","registrantForm","educationForm","workExperienceForm","projectExperienceForm","skillSectorForm","verificationForm","formData","FormData","append","password","JSON","stringify","idSchool","idEducationDegree","idEducationField","idProvince","idSector","s","idSkill","idCountry","request","post","then","success","catch","response","message","finally","setRegistrationData","handleFinishRegistration","isHashEnabled","nav","instance","transitions","enterRight","enterLeft","exitRight","exitLeft","intro","RegistrantForm","step","hashKey","stepName","state","EducationForm","WorkExprerienceForm","ProjectExperienceForm","SkillSectorForm","DocumentVerificationForm","RegistrantCompanyForm","Modal","isOpen","centered","toggle","ModalBody"],"mappings":"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","file":"static/js/19.18b0c7cd.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button, Col, Nav, NavItem, NavLink, Row } from 'reactstrap';\nimport { ArcherContainer, ArcherElement } from 'react-archer'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport const NavigationDot = (props) => {\n    const pageName = useCallback((i) => {\n        if (props.role === 'professional') {\n            if (i === 1) return 'Registrant Information'\n            if (i === 2) return 'Education'\n            if (i === 3) return 'Work Experience'\n            if (i === 4) return 'Project Experience'\n            if (i === 5) return 'Skill'\n            if (i === 6) return 'Document Verification'\n        }\n        if (props.role === 'company') {\n            if (i === 1) return 'Company Information'\n            if (i === 2) return 'Registrant Information'\n            if (i === 3) return 'Document Verification'\n        }\n        if (props.role === 'individual') {\n            if (i === 1) return 'Registrant Information'\n            if (i === 2) return 'Document Verification'\n        }\n    }, [props.role])\n\n    const pageIcon = useCallback((i) => {\n        if (props.role === 'professional') {\n            if (i === 1) return 'user'\n            if (i === 2) return 'university'\n            if (i === 3) return 'building'\n            if (i === 4) return 'laptop-house'\n            if (i === 5) return 'briefcase'\n            if (i === 6) return 'book'\n        }\n        if (props.role === 'company') {\n            if (i === 1) return 'building'\n            if (i === 2) return 'user'\n            if (i === 3) return 'book'\n        }\n        if (props.role === 'individual') {\n            if (i === 1) return 'user'\n            if (i === 2) return 'book'\n        }\n    }, [props.role])\n\n    const dots = [];\n    for (let i = 1; i <= props.totalSteps; i += 1) {\n        dots.push(i);\n    }\n\n    return (\n        <div className=\"register-nav mb-4\">\n            <div className={`mb-3 mb-md-3`}>\n                <Nav tabs className=\"text-center border-bottom-0\">\n                    {dots.map((p, i) => (\n                        <NavItem key={i}>\n                            <NavLink className=\"profile-tabs-item\" active={props.currentStep === i + 1} onClick={() => props.goToStep(i + 1)}>\n                                {pageName(i + 1)}\n                            </NavLink>\n                        </NavItem>\n                    ))}\n                </Nav>\n            </div>\n        </div>\n    );\n};","import React, { useCallback, useMemo, useState } from \"react\"\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { Card, CardBody, Row, Col, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Button, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport moment from \"moment\";\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nexport default (props) => {\n    const data = props.data;\n    const currentData = useMemo(() => ({\n        firstName: data.firstName ?? '',\n        lastName: data.lastName ?? '',\n        gender: data.gender ?? '',\n        dateOfBirth: data.dob ? moment(data.dob) : '',\n        idType: { label: 'KTP', value: 'ktp' },\n        idNumber: data.identityNumber ?? '',\n        npwpNumber: data.npwp ?? '',\n        address: data.address ?? '',\n        province: { label: data.province.name, value: data.province.id } ?? '',\n        phone: data.phoneNumber ?? '',\n        email: data.email ?? '',\n        sector: data?.sector?.id ?? '',\n    }), [data])\n\n    const ValidationFormSchema = () => {\n        let optional;\n        if (props.registrationForm === 'individual') optional = { sector: Yup.string().required().label('Sector') }\n        return Yup.object().shape({\n            ...optional,\n            firstName: Yup.string().required().label('First Name'),\n            lastName: Yup.string().required().label('Last Name'),\n            gender: Yup.string().required().oneOf(['L', 'P']).label('Gender'),\n            dateOfBirth: Yup.string().required().label('Date of Birth'),\n            idType: Yup.string().required().label('ID Type'),\n            idNumber: Yup.string().required().label('ID Number'),\n            npwpNumber: Yup.string().required().label('NPWP Number'),\n            address: Yup.string().required().label('Address'),\n            province: Yup.string().required().label('Province'),\n            phone: Yup.string().required().label('Phone'),\n            email: Yup.string().required().email().label('Email'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><RegistrantInformationForm registrantData={values} currentData={currentData} setRegistrantData={setValues} onSubmit={handleSubmit} isSubmitting={isSubmitting} touched={touched} errors={errors} {...props} /></Col>\n            <Col xs=\"12\"><ContactInformationForm contactData={values} currentData={currentData} setContactData={setValues} onSubmit={handleSubmit} isSubmitting={isSubmitting} touched={touched} errors={errors} /></Col>\n        </Row>\n    );\n}\n\nexport const RegistrantInformationForm = ({ registrantData, currentData, setRegistrantData, onSubmit, isSubmitting, touched, errors, registrationForm }) => {\n    const [isEdit, setIsEdit] = useState(false);\n\n    const idType = [\n        { label: 'KTP', value: 'ktp' },\n    ]\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeFirstName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, firstName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeLastName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, lastName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeSector = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, sector: e }))\n    }, [setRegistrantData])\n\n    const handleChangeGender = useCallback((e) => {\n        const { value, checked } = e.target;\n        setRegistrantData(old => ({ ...old, gender: checked ? value : '' }))\n    }, [setRegistrantData])\n\n    const handleChangeDateOfBirth = useCallback((value) => {\n        setRegistrantData(old => ({ ...old, dateOfBirth: value }))\n    }, [setRegistrantData])\n\n    const handleChangeIdType = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, idType: e }))\n    }, [setRegistrantData])\n\n    const handleChangeIdNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, idNumber: value }))\n    }, [setRegistrantData])\n\n    const handleChangeNpwpNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, npwpNumber: value }))\n    }, [setRegistrantData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                        <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                            setIsEdit(!isEdit)\n                            setRegistrantData(currentData)\n                        }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"firstName\">First Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={registrantData.firstName} disabled={!isEdit} onChange={(e) => handleChangeFirstName(e)} placeholder=\"First Name Field...\" />\n                                {touched.firstName && errors.firstName && <small className=\"text-danger\">{errors.firstName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"lastName\">Last Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={registrantData.lastName} disabled={!isEdit} onChange={(e) => handleChangeLastName(e)} placeholder=\"Last Name Field...\" />\n                                {touched.lastName && errors.lastName && <small className=\"text-danger\">{errors.lastName}</small>}\n                            </Col>\n                        </Row>\n                        {registrationForm === 'individual' &&\n                            <Row className=\"my-3\">\n                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                    <Label for=\"sector\">Sector</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                    <Select\n                                        options={sectors}\n                                        placeholder=\"Choose a socter...\"\n                                        value={registrantData.sector}\n                                        isDisabled={!isEdit}\n                                        onChange={(e) => handleChangeSector(e)}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    />\n                                    {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                                </Col>\n                            </Row>\n                        }\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"gender\">Gender</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"male\" value=\"L\" checked={registrantData.gender === \"L\" ? true : false} disabled={!isEdit} onChange={(e) => handleChangeGender(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"male\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Male\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"female\" value=\"P\" checked={registrantData.gender === \"P\" ? true : false} disabled={!isEdit} onChange={(e) => handleChangeGender(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"female\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Female\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.gender && errors.gender && <small className=\"text-danger\">{errors.gender}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"dateOfBirth\">Date of Birth</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                {!isEdit ?\n                                    registrantData.dateOfBirth ? registrantData.dateOfBirth.format('DD/MM/YYYY') : 'DD/MMMM/YYYY'\n                                    :\n                                    <DateRangePicker\n                                        initialSettings={{\n                                            singleDatePicker: true,\n                                            showDropdowns: true,\n                                            startDate: new Date(),\n                                            maxDate: new Date(),\n                                            autoApply: true,\n                                        }}\n                                        onApply={(e, p) => handleChangeDateOfBirth(p.startDate)}\n                                    >\n                                        <div id=\"reportrange\" style={{ background: '#fff', cursor: 'pointer', padding: '5px 10px', border: '1px solid #ccc', width: '100%' }}>\n                                            <i className=\"fa fa-calendar mr-2\"></i><span>{registrantData.dateOfBirth ? registrantData.dateOfBirth.format('DD/MM/YYYY') : 'DD/MMMM/YYYY'}</span> <i className=\"fa fa-caret-down float-right\"></i>\n                                        </div>\n                                    </DateRangePicker>\n                                }\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idType\">ID Type</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={idType}\n                                    placeholder=\"Choose id type...\"\n                                    value={registrantData.idType}\n                                    isDisabled={!isEdit}\n                                    onChange={(e) => handleChangeIdType(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.idType && errors.idType && <small className=\"text-danger\">{errors.idType}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idNumber\">ID Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"idNumber\" id=\"idNumber\" value={registrantData.idNumber} disabled={!isEdit} onChange={(e) => handleChangeIdNumber(e)} placeholder=\"ID Number Field...\"\n                                    onWheel={(e) => { e.target.blur() }} onInput={(e) => { e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 16) }}\n                                />\n                                {touched.idNumber && errors.idNumber && <small className=\"text-danger\">{errors.idNumber}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"npwpNumber\">NPWP Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"npwpNumber\" id=\"npwpNumber\" value={registrantData.npwpNumber} disabled={!isEdit} onChange={(e) => handleChangeNpwpNumber(e)} placeholder=\"NPWP Number Field...\"\n                                    onWheel={(e) => { e.target.blur() }}\n                                />\n                                {touched.npwpNumber && errors.npwpNumber && <small className=\"text-danger\">{errors.npwpNumber}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    {isEdit &&\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"primary\" className=\"float-right\" onClick={onSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                        </Col>\n                    }\n                </Row>\n            </CardBody>\n        </Card >\n    );\n}\n\nexport const ContactInformationForm = ({ contactData, currentData, setContactData, onSubmit, isSubmitting, touched, errors }) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const { data: getProvince } = useDataProvinces();\n    const province = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n    const handleChangeProvince = useCallback((e) => {\n        setContactData(old => ({ ...old, province: e }))\n    }, [setContactData])\n\n    const handleChangeAddress = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, address: value }))\n    }, [setContactData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, phone: value }))\n    }, [setContactData])\n\n    const handleChangeEmail = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, email: value }))\n    }, [setContactData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">CONTACT INFORMATION</div>\n                        <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                            setIsEdit(!isEdit)\n                            setContactData(currentData)\n                        }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"address\">Address</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"address\"\n                                    id=\"address\"\n                                    className=\"form-control\"\n                                    placeholder=\"Address Field...\"\n                                    value={contactData.address}\n                                    disabled={!isEdit}\n                                    onChange={(e) => handleChangeAddress(e)}\n                                />\n                                {touched.address && errors.address && <small className=\"text-danger\">{errors.address}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"province\">Province</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={province}\n                                    placeholder=\"Choose province...\"\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={contactData.province}\n                                    isDisabled={!isEdit}\n                                    onChange={(e) => handleChangeProvince(e)}\n                                />\n                                {touched.province && errors.province && <small className=\"text-danger\">{errors.province}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Mobile Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" value={contactData.phone} disabled={!isEdit} onChange={(e) => handleChangePhone(e)} placeholder=\"Mobile Phone Field...\"\n                                    onWheel={(e) => { e.target.blur() }}\n                                />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"email\">Email</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={contactData.email} disabled={!isEdit} onChange={(e) => handleChangeEmail(e)} placeholder=\"Email Field...\" />\n                                {touched.email && errors.email && <small className=\"text-danger\">{errors.email}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    {isEdit &&\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"primary\" className=\"float-right\" onClick={onSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                        </Col>\n                    }\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport SelectYear from \"../../../../components/SelectYear\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataEducationDegrees from \"../../../../hooks/useDataEducationDegrees\";\nimport useDataEducationFields from \"../../../../hooks/useDataEducationFields\";\nimport useDataSchools from \"../../../../hooks/useDataSchools\";\n\nexport default (props) => {\n    const data = props.data.educations;\n    const [isEdit, setIsEdit] = useState(false);\n    const currentData = useMemo(() => data.map((v, i) => (\n        {\n            id: v.id,\n            degree: { label: v.educationDegree.name, value: v.educationDegree.id } ?? '',\n            school: { label: v.school.name, value: v.school.id } ?? '',\n            education: { label: v.educationField.name, value: v.educationField.id } ?? '',\n            graduationYear: 0,\n        }\n    )), [data])\n\n    const { data: getDegree } = useDataEducationDegrees();\n    const degree = useMemo(() => getDegree.map(p => ({ label: p.name, value: p.id })), [getDegree])\n\n    const { data: getSchool } = useDataSchools();\n    const school = useMemo(() => getSchool.map(p => ({ label: p.name, value: p.id })), [getSchool])\n\n    const { data: getEduField } = useDataEducationFields();\n    const eduField = useMemo(() => getEduField.map(p => ({ label: p.name, value: p.id })), [getEduField])\n\n    const ValidationFormSchema = () => {\n        return Yup.array().of(\n            Yup.object().shape({\n                degree: Yup.string().required().label('Degree'),\n                school: Yup.string().required().label('School'),\n                education: Yup.string().required().label('Education'),\n                graduationYear: Yup.string().required().label('Graduation Year'),\n            })\n        )\n    }\n\n    const { values: educationData, touched, errors, setValues: setEducationData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeDegree = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, degree: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeSchool = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, school: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeEducation = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, education: e }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeGraduationYear = useCallback((e, i) => {\n        const { value } = e.target;\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, graduationYear: value }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleAddEducationData = useCallback(() => {\n        setEducationData(old => ([...old, { id: old[old.length - 1].id + 1, degree: '', school: '', education: '', graduationYear: '' }]))\n    }, [setEducationData])\n\n    const handleDeleteEducationData = useCallback((i) => {\n        setEducationData(old => ([...old].filter(edu => edu.id !== i)))\n    }, [setEducationData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Education</div>\n                                <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                                    setIsEdit(!isEdit)\n                                    setEducationData(currentData)\n                                }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                            </Col>\n                            {educationData.map((edu, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <Card className=\"shadow-sm\">\n                                        <CardBody>\n                                            {i > 0 &&\n                                                <Row className=\"my-3\">\n                                                    <Col xs=\"12\">\n                                                        <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteEducationData(edu.id)} disabled={!isEdit || isSubmitting}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                    </Col>\n                                                </Row>\n                                            }\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"degree\">Degree</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={degree}\n                                                        placeholder=\"Choose degree...\"\n                                                        onChange={(e) => handleChangeDegree(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.degree}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.degree && errors[i]?.degree && <small className=\"text-danger\">{errors[i]?.degree}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"school\">School</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={school}\n                                                        placeholder=\"Choose school...\"\n                                                        onChange={(e) => handleChangeSchool(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.school}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.school && errors[i]?.school && <small className=\"text-danger\">{errors[i]?.school}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"education\">Education</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={eduField}\n                                                        placeholder=\"Choose Education Field...\"\n                                                        onChange={(e) => handleChangeEducation(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.education}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.education && errors[i]?.education && <small className=\"text-danger\">{errors[i]?.education}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"graduationYear\">Graduation year</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"number\" disabled={!isEdit || isSubmitting} name=\"graduationYear\" id=\"graduationYear\" value={edu.graduationYear} onChange={(e) => handleChangeGraduationYear(e, edu.id)} placeholder=\"YYYY\"\n                                                        onWheel={(e) => { e.target.blur() }} onInput={(e) => { e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 4) }}\n                                                    />\n                                                    {touched[i]?.graduationYear && errors[i]?.graduationYear && <small className=\"text-danger\">{errors[i]?.graduationYear}</small>}\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ))}\n                            {isEdit &&\n                                <>\n                                    <Col xs=\"12\" className=\"d-flex justify-content-center\">\n                                        <Button color=\"success\" onClick={handleAddEducationData} disabled={isSubmitting}>Add Education</Button>\n                                    </Col>\n                                    <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                        <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                                    </Col>\n                                </>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Datepicker from \"react-datepicker\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\nimport moment from \"moment\";\n\nexport default (props) => {\n    const data = props.data.workExperience;\n    const [isEdit, setIsEdit] = useState(false);\n    const currentData = useMemo(() => data.map((v) => (\n        {\n            id: v.id,\n            job: v.jobTitle,\n            company: v.companyName,\n            sector: { label: v.sector.name, value: v.sector.id },\n            employementType: { label: v.employmentType.replace(/_/g, ' ').charAt(0).toUpperCase() + v.employmentType.replace(/_/g, ' ').slice(1), value: v.employmentType },\n            location: { label: v.province.name, value: v.province.id },\n            startDate: new Date(v.startDate),\n            endDate: new Date(v.endDate),\n            endDatePresent: v.isStillPresent ? true : false,\n            skills: v.skills.map(skill => ({ label: skill.skill.name, value: skill.skill.id })),\n        }\n    )), [data])\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const { data: getProvince } = useDataProvinces();\n    const provinces = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const employementTypes = [\n        { label: 'Self employed', value: 'self_employed' },\n        { label: 'Employee', value: 'employee' },\n        { label: 'Public servant', value: 'public_servant' },\n        { label: 'Retiree', value: 'retiree' },\n        { label: 'Unemployed', value: 'unemployed' },\n    ]\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const ValidationFormSchema = () => {\n        return Yup.array().of(\n            Yup.object().shape({\n                job: Yup.string().required().label('Job'),\n                company: Yup.string().required().label('Company Name'),\n                sector: Yup.string().required().label('Sector'),\n                employementType: Yup.string().required().label('Employement Type'),\n                location: Yup.string().required().label('Location'),\n                startDate: Yup.string().required().label('Start Date'),\n                endDate: Yup.string().required().label('End Date'),\n                skills: Yup.string().required().label('Skills'),\n            })\n        )\n    }\n\n    const { values: workExperienceData, touched, errors, setValues: setWorkExperienceData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeSector = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, sector: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeEmployementType = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, employementType: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeLocation = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, location: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeJob = useCallback((e, i) => {\n        const { value } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, job: value }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeCompany = useCallback((e, i) => {\n        const { value } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, company: value }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeStartDate = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, startDate: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeEndDate = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, endDate: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangePresent = useCallback((e, i) => {\n        const { value, checked } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, endDate: new Date(), endDatePresent: checked ? value : '' }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeSkills = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, skills: e ?? [] }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleAddWorkExperienceData = useCallback(() => {\n        setWorkExperienceData(old => ([...old, { id: old[old.length - 1].id + 1, job: '', company: '', sector: '', employementType: '', location: '', startDate: '', endDate: '', endDatePresent: '', skills: [], }]))\n    }, [setWorkExperienceData])\n\n    const handleDeleteWorkExperienceData = useCallback((i) => {\n        setWorkExperienceData(old => ([...old].filter(work => work.id !== i)))\n    }, [setWorkExperienceData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Work Experience</div>\n                                <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                                    setIsEdit(!isEdit)\n                                    setWorkExperienceData(currentData)\n                                }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                            </Col>\n                            {workExperienceData.map((work, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <Card className=\"shadow-sm\">\n                                        <CardBody>\n                                            {i > 0 &&\n                                                <Row className=\"my-3\">\n                                                    <Col xs=\"12\">\n                                                        <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteWorkExperienceData(work.id)} disabled={!isEdit || isSubmitting}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                    </Col>\n                                                </Row>\n                                            }\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"job\">Job Title</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"text\" name=\"job\" id=\"job\" value={work.job} disabled={!isEdit || isSubmitting} onChange={(e) => handleChangeJob(e, work.id)} placeholder=\"Job Title Field...\" />\n                                                    {touched[i]?.job && errors[i]?.job && <small className=\"text-danger\">{errors[i]?.job}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"job\">Company Name</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"text\" name=\"company\" id=\"company\" value={work.company} disabled={!isEdit || isSubmitting} onChange={(e) => handleChangeCompany(e, work.id)} placeholder=\"Company Name Field...\" />\n                                                    {touched[i]?.company && errors[i]?.company && <small className=\"text-danger\">{errors[i]?.company}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"sector\">Sector</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={sectors}\n                                                        placeholder=\"Choose sector...\"\n                                                        onChange={(e) => handleChangeSector(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.sector}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.sector && errors[i]?.sector && <small className=\"text-danger\">{errors[i]?.sector}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"employementType\">Employment Type</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={employementTypes}\n                                                        placeholder=\"Choose Employment Type...\"\n                                                        onChange={(e) => handleChangeEmployementType(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.employementType}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.employementType && errors[i]?.employementType && <small className=\"text-danger\">{errors[i]?.employementType}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"location\">Location</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={provinces}\n                                                        placeholder=\"Choose Location...\"\n                                                        onChange={(e) => handleChangeLocation(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.location}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.location && errors[i]?.location && <small className=\"text-danger\">{errors[i]?.location}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"startDate\">Start Date</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Datepicker\n                                                        required\n                                                        name=\"startDate\"\n                                                        selected={work.startDate}\n                                                        onChange={(e) => handleChangeStartDate(e, work.id)}\n                                                        showMonthYearPicker\n                                                        showFullMonthYearPicker\n                                                        showFourColumnMonthYearPicker\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMMM yyyy\"\n                                                        maxDate={new Date()}\n                                                        placeholderText=\"Select a date\"\n                                                        wrapperClassName=\"form-control\"\n                                                        disabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.startDate && errors[i]?.startDate && <small className=\"text-danger\">{errors[i]?.startDate}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"endDate\">End Date</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Row>\n                                                        {!work.endDatePresent &&\n                                                            <Col xs=\"6\" md=\"4\" lg=\"5\">\n                                                                <Datepicker\n                                                                    required\n                                                                    name=\"endDate\"\n                                                                    selected={work.endDate}\n                                                                    onChange={(e) => handleChangeEndDate(e, work.id)}\n                                                                    showMonthYearPicker\n                                                                    showFullMonthYearPicker\n                                                                    showFourColumnMonthYearPicker\n                                                                    className=\"form-control\"\n                                                                    dateFormat=\"MMMM yyyy\"\n                                                                    minDate={work.startDate}\n                                                                    maxDate={new Date()}\n                                                                    placeholderText=\"Select a date\"\n                                                                    wrapperClassName=\"form-control\"\n                                                                    disabled={!isEdit || isSubmitting}\n                                                                />\n                                                            </Col>\n                                                        }\n                                                        <Col xs=\"6\" md=\"4\" lg=\"4\">\n                                                            <InputGroup>\n                                                                <InputGroupAddon addonType=\"prepend\">\n                                                                    <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                                        <CustomInput type=\"checkbox\" id={`present-${work.id}`} value=\"present\" disabled={!isEdit || isSubmitting} checked={work.endDatePresent} onChange={(e) => handleChangePresent(e, work.id)} />\n                                                                    </InputGroupText>\n                                                                </InputGroupAddon>\n                                                                <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                                    Present\n                                                                </div>\n                                                            </InputGroup>\n                                                        </Col>\n                                                        <Col xs=\"12\">\n                                                            {touched[i]?.endDate && errors[i]?.endDate && <small className=\"text-danger\">{errors[i]?.endDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"skill\">Skill</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        closeMenuOnSelect={false}\n                                                        options={skills}\n                                                        isClearable\n                                                        isMulti\n                                                        placeholder=\"Choose some skills...\"\n                                                        onChange={(e) => handleChangeSkills(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.skills}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.skills && errors[i]?.skills && <small className=\"text-danger\">{errors[i]?.skills}</small>}\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ))}\n                            {isEdit &&\n                                <>\n                                    <Col xs=\"12\" className=\"d-flex justify-content-center\">\n                                        <Button color=\"success\" className=\"float-right\" onClick={handleAddWorkExperienceData}>Add Work Experience</Button>\n                                    </Col>\n                                    <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                        <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                                    </Col>\n                                </>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Datepicker from \"react-datepicker\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\nimport useDataCountries from \"../../../../hooks/useDataCountries\";\n\nexport default (props) => {\n    const data = props.data.projectExperience;\n    const [isEdit, setIsEdit] = useState(false);\n    const currentData = useMemo(() => data.map((v) => (\n        {\n            id: v.id,\n            projectName: v.projectName,\n            client: v.clientName,\n            projectRole: v.projectRole,\n            sector: { label: v.sector.name, value: v.sector.id },\n            province: { label: v.province.name, value: v.province.id },\n            country: { label: v.country.name, value: v.country.id },\n            startDate: new Date(v.startDate),\n            endDate: new Date(v.endDate),\n            description: v.description,\n            skills: v.skills.map(skill => ({ label: skill.skill.name, value: skill.skill.id })),\n        }\n    )), [data]);\n\n    const [hasProjectExperience, setHasProjectExperience] = useState(data.length > 0 ? true : false);\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const { data: getProvince } = useDataProvinces();\n    const provinces = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const { data: getCountries } = useDataCountries();\n    const countries = useMemo(() => getCountries.map(p => ({ label: p.name, value: p.id })), [getCountries])\n\n    const ValidationFormSchema = () => {\n        if (!hasProjectExperience) return Yup.array().of(\n            Yup.object().shape({\n                projectName: Yup.string().label('Project Name'),\n            })\n        )\n        return Yup.array().of(\n            Yup.object().shape({\n                projectName: Yup.string().required().label('Project Name'),\n                client: Yup.string().required().label('Client Name'),\n                projectRole: Yup.string().required().label('Project Role'),\n                sector: Yup.string().required().label('Sector'),\n                province: Yup.string().required().label('province'),\n                startDate: Yup.string().required().label('Start Date'),\n                endDate: Yup.string().required().label('End Date'),\n                description: Yup.string().required().label('Description'),\n                skills: Yup.string().required().label('Skills'),\n            })\n        )\n    }\n\n    const { values: projectExperienceData, touched, errors, setValues: setProjectExperienceData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeSector = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, sector: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProvince = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, province: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeCountry = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, country: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProjectName = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, projectName: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeClient = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, client: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProjectRole = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, projectRole: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeStartDate = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, startDate: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeEndDate = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, endDate: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeDescription = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, description: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeSkills = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, skills: e ?? [] }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleAddprojectExperienceData = useCallback(() => {\n        setProjectExperienceData(old => ([...old, { id: old[old.length - 1].id + 1, projectName: '', client: '', projectRole: '', sector: '', province: '', startDate: '', endDate: '', description: '', skills: [], }]))\n    }, [setProjectExperienceData])\n\n    const handleDeleteprojectExperienceData = useCallback((i) => {\n        setProjectExperienceData(old => ([...old].filter(project => project.id !== i)))\n    }, [setProjectExperienceData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Project Experience</div>\n                                <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                                    setIsEdit(!isEdit)\n                                    setProjectExperienceData(currentData)\n                                }} disabled={isEdit && isSubmitting} > <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                            </Col>\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <InputGroup>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                            <CustomInput type=\"checkbox\" id=\"hasProjectExperience\" value=\"hasProjectExperience\" checked={hasProjectExperience} onChange={(e) => setHasProjectExperience(e.target.checked)} disabled={!isEdit || isSubmitting} />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Label for=\"hasProjectExperience\" className=\"d-flex bg-transparent m-0 align-items-center\">\n                                        Do you have project experience?\n                                    </Label>\n                                </InputGroup>\n                            </Col>\n                            {hasProjectExperience &&\n                                <>\n                                    {projectExperienceData.map((project, i) => (\n                                        <Col xs=\"12\" key={i}>\n                                            <Card className=\"shadow-sm\">\n                                                <CardBody>\n                                                    {i > 0 &&\n                                                        <Row className=\"my-3\">\n                                                            <Col xs=\"12\">\n                                                                <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteprojectExperienceData(project.id)} disabled={!isEdit || isSubmitting}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                            </Col>\n                                                        </Row>\n                                                    }\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"projectName\">Project Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"projectName\" id=\"projectName\" disabled={!isEdit || isSubmitting} value={project.projectName} onChange={(e) => handleChangeProjectName(e, project.id)} placeholder=\"Job Title Field...\" />\n                                                            {touched[i]?.projectName && errors[i]?.projectName && <small className=\"text-danger\">{errors[i]?.projectName}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"client\">Client Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"client\" id=\"client\" disabled={!isEdit || isSubmitting} value={project.client} onChange={(e) => handleChangeClient(e, project.id)} placeholder=\"Client Name Field...\" />\n                                                            {touched[i]?.client && errors[i]?.client && <small className=\"text-danger\">{errors[i]?.client}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"projectRole\">Project Role</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"projectRole\" id=\"projectRole\" disabled={!isEdit || isSubmitting} value={project.projectRole} onChange={(e) => handleChangeProjectRole(e, project.id)} placeholder=\"Project Role Field...\" />\n                                                            {touched[i]?.projectRole && errors[i]?.projectRole && <small className=\"text-danger\">{errors[i]?.projectRole}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"sector\">Sector</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={sectors}\n                                                                placeholder=\"Choose sector...\"\n                                                                onChange={(e) => handleChangeSector(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.sector}\n                                                                isDisabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.sector && errors[i]?.sector && <small className=\"text-danger\">{errors[i]?.sector}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"province\">Province</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={provinces}\n                                                                placeholder=\"Choose a Province...\"\n                                                                onChange={(e) => handleChangeProvince(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.province}\n                                                                isDisabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.province && errors[i]?.province && <small className=\"text-danger\">{errors[i]?.province}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"countries\">Country</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={countries}\n                                                                placeholder=\"Choose a Country...\"\n                                                                onChange={(e) => handleChangeCountry(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.country}\n                                                                isDisabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.country && errors[i]?.country && <small className=\"text-danger\">{errors[i]?.country}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"startDate\">Start Date</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"startDate\"\n                                                                selected={project.startDate}\n                                                                onChange={(e) => handleChangeStartDate(e, project.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                className=\"form-control\"\n                                                                disabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.startDate && errors[i]?.startDate && <small className=\"text-danger\">{errors[i]?.startDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"endDate\">End Date</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"endDate\"\n                                                                selected={project.endDate}\n                                                                onChange={(e) => handleChangeEndDate(e, project.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                minDate={project.startDate}\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                className=\"form-control\"\n                                                                disabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.endDate && errors[i]?.endDate && <small className=\"text-danger\">{errors[i]?.endDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"description\">Description</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <TextareaAutosize\n                                                                minRows={3}\n                                                                name=\"description\"\n                                                                id=\"description\"\n                                                                className=\"form-control\"\n                                                                placeholder=\"Description Field...\"\n                                                                value={project.description}\n                                                                onChange={(e) => handleChangeDescription(e, project.id)}\n                                                                disabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.description && errors[i]?.description && <small className=\"text-danger\">{errors[i]?.description}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"skill\">Skill</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                closeMenuOnSelect={false}\n                                                                options={skills}\n                                                                isClearable\n                                                                isMulti\n                                                                placeholder=\"Choose some skills...\"\n                                                                onChange={(e) => handleChangeSkills(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.skills}\n                                                                isDisabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.skills && errors[i]?.skills && <small className=\"text-danger\">{errors[i]?.skills}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                    ))}\n                                    {isEdit &&\n                                        <>\n                                            <Col xs=\"12\" className=\"d-flex justify-content-center\">\n                                                <Button color=\"success\" className=\"float-right rounded-circle shadow-sm\" onClick={handleAddprojectExperienceData}><FontAwesomeIcon icon=\"plus\" /></Button>\n                                            </Col>\n                                            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                                <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                                            </Col>\n                                        </>\n                                    }\n                                </>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row >\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst colorSkills = [\n    '#1372BA',\n    '#5380a2',\n    '#8453a2',\n    '#53a276',\n    '#a25353',\n    '#bfb327',\n    '#2733bf',\n    '#27bf4f'\n]\n\nexport default (props) => {\n    const data = props.data;\n    const [isEdit, setIsEdit] = useState(false);\n    const currentData = useMemo(() => ({\n        skills: data.skills.map(p => ({ label: p.skill.name, value: p.skill.id, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })),\n        sectors: data.sectors.map(p => ({ label: p.sector.name, value: p.sector.id, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })),\n    }), [data])\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            sectors: Yup.array().min(1).max(3).label('Sector'),\n            skills: Yup.array().min(1).max(5).label('Skills'),\n        })\n    }\n\n    const { values: skillSectorData, touched, errors, setValues: setSkillSectorData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n    const colourStyles = {\n        multiValue: (styles, { data }) => {\n            const color = data.color;\n            return {\n                ...styles,\n                backgroundColor: color,\n            };\n        },\n        multiValueLabel: (styles, { data }) => ({\n            ...styles,\n            color: '#fff',\n        }),\n    };\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => {\n        const opt = []\n        const dataSectors = getSector.map(p => ({ label: p.name, value: p.id }))\n        dataSectors.map((v) => {\n            const dataOptions = skillSectorData.sectors?.find(u => u.value === v.value);\n            if (!dataOptions) opt.push({ ...v, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })\n            return dataOptions;\n        })\n\n        return opt\n    }, [skillSectorData.sectors, getSector])\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => {\n        const opt = []\n        const dataSkills = getSkills.map(p => ({ label: p.name, value: p.id }))\n        dataSkills.map((v) => {\n            const dataOptions = skillSectorData.skills?.find(u => u.value === v.value);\n            if (!dataOptions) opt.push({ ...v, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })\n            return dataOptions;\n        })\n\n        return opt\n    }, [skillSectorData.skills, getSkills])\n\n    const handleChangeSector = useCallback((e) => {\n        setSkillSectorData(old => ({ ...old, sectors: e ?? [] }))\n    }, [setSkillSectorData])\n\n    const handleChangeSkills = useCallback((e) => {\n        setSkillSectorData(old => ({ ...old, skills: e ?? [] }))\n    }, [setSkillSectorData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">My Top 5 Skills</div>\n                                <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                                    setIsEdit(!isEdit)\n                                    setSkillSectorData(currentData)\n                                }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                            </Col>\n                            {/* <Col xs=\"12\">\n                                <Card className=\"shadow-sm\">\n                                    <CardBody>\n                                        {skillSectorData.skills.map((skill, i) => (\n                                            <Badge key={i} color={colorSkills[i]} className=\"text-uppercase font-sm mx-1 text-light\">{skill.label}</Badge>\n                                        ))}\n                                    </CardBody>\n                                </Card>\n                            </Col> */}\n                            <Col xs=\"12\">\n                                <Select\n                                    closeMenuOnSelect={false}\n                                    options={skills}\n                                    isClearable\n                                    isMulti\n                                    placeholder=\"Choose some skills...\"\n                                    onChange={(e) => handleChangeSkills(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={skillSectorData.skills}\n                                    styles={colourStyles}\n                                    isDisabled={!isEdit || isSubmitting}\n                                    isOptionDisabled={(option) => skillSectorData.skills.length >= 5}\n                                />\n                                {touched.skills && errors.skills && <small className=\"text-danger\">{errors.skills}</small>}\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">My top 3 Sectors</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\">\n                                        <Select\n                                            closeMenuOnSelect={false}\n                                            options={sectors}\n                                            isClearable\n                                            isMulti\n                                            placeholder=\"Choose some sectors...\"\n                                            onChange={(e) => handleChangeSector(e)}\n                                            components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                            value={skillSectorData.sectors}\n                                            styles={colourStyles}\n                                            isDisabled={!isEdit || isSubmitting}\n                                            isOptionDisabled={(option) => skillSectorData.sectors.length >= 3}\n                                        />\n                                        {touched.sectors && errors.sectors && <small className=\"text-danger\">{errors.sectors}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                            {isEdit &&\n                                <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                    <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                                </Col>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo, useRef, useState } from \"react\"\nimport { toast } from \"react-toastify\";\nimport { Card, CardBody, Row, Col, Button, Label, Input, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Spinner } from \"reactstrap\";\nimport noImage from '../../../../assets/illustrations/image-error.png'\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default (props) => {\n    const npwpFile = useRef(null)\n    const regIdFile = useRef(null)\n    const photoFile = useRef(null)\n    const data = props.data;\n\n    const [isEdit, setIsEdit] = useState(false);\n    const currentData = useMemo(() => ({\n        npwp: { preview: data.npwpImageUrl ?? 'a' },\n        regId: { preview: data.identityImageUrl ?? 'a' },\n        photo: { preview: data.avatar ?? 'a' },\n    }), [data])\n\n    const ValidationFormSchema = () => {\n        let file;\n        if (props.registrationForm === 'professional') file = { npwp: Yup.string().required().label('Npwp File'), regId: Yup.string().required().label('Registrant ID File'), photo: Yup.string().required().label('Photo Profile File') }\n        if (props.registrationForm === 'business') file = { npwp: Yup.string().required().label('Npwp File') }\n        if (props.registrationForm === 'individual') file = { npwp: Yup.string().required().label('Npwp File'), regId: Yup.string().required().label('Registrant ID File') }\n\n        return Yup.object().shape({\n            ...file,\n        })\n    }\n\n    const { values: verificationData, touched, errors, setValues: setVerificationData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.onFinishRegistration()\n        }\n    })\n\n    const onErrorImage = useCallback((e) => {\n        e.target.src = noImage;\n        e.target.onerror = null;\n    }, [])\n\n    const onChangeNpwpFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, npwp: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangeRegIdFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, regId: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangePhotoFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, photo: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm verification-process-form\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Verification Process</div>\n                                <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                                    setIsEdit(!isEdit)\n                                    setVerificationData(currentData)\n                                }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                        <Label>Registrant NPWP</Label>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                        <div style={{ width: '200px', height: '200px' }}>\n                                            {verificationData?.npwp?.preview && <img src={verificationData?.npwp?.preview} alt=\"npwp\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                            <input type='file' ref={npwpFile} style={{ display: 'none' }} disabled={!isEdit || isSubmitting} onChange={(e) => onChangeNpwpFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                            {!(!isEdit || isSubmitting) &&\n                                                <Button\n                                                    className={`btn border-0 upload-file-button ${verificationData?.npwp?.preview && 'filled'}`}\n                                                    onClick={() => npwpFile.current.click()}\n                                                >\n                                                    <i className=\"fa fa-2x fa-camera\" />\n                                                    <br />\n                                                    <div className=\"text-center d-none d-md-block\">\n                                                        Upload\n                                                        <br />\n                                                        <small>Max. 5 MB</small>\n                                                    </div>\n                                                </Button>\n                                            }\n                                        </div>\n                                        {touched.npwp && errors.npwp && <small className=\"text-danger\">{errors.npwp}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                            {(props.registrationForm === 'professional' || props.registrationForm === 'individual') &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Registrant ID</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <div style={{ width: '200px', height: '200px' }}>\n                                                {verificationData?.regId?.preview && <img src={verificationData?.regId?.preview} alt=\"regId\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                                <input type='file' ref={regIdFile} style={{ display: 'none' }} disabled={!isEdit || isSubmitting} onChange={(e) => onChangeRegIdFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                                {!(!isEdit || isSubmitting) &&\n                                                    <Button\n                                                        className={`btn border-0 upload-file-button ${verificationData?.regId?.preview && 'filled'}`}\n                                                        onClick={() => regIdFile.current.click()}\n                                                    >\n                                                        <i className=\"fa fa-2x fa-camera\" />\n                                                        <br />\n                                                        <div className=\"text-center d-none d-md-block\">\n                                                            Upload\n                                                            <br />\n                                                            <small>Max. 5 MB</small>\n                                                        </div>\n                                                    </Button>\n                                                }\n                                            </div>\n                                            {touched.regId && errors.regId && <small className=\"text-danger\">{errors.regId}</small>}\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                            {props.registrationForm === 'professional' &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Photo Profile</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <div style={{ width: '200px', height: '200px' }}>\n                                                {verificationData?.photo?.preview && <img src={verificationData?.photo?.preview} alt=\"profile\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                                <input type='file' ref={photoFile} style={{ display: 'none' }} disabled={!isEdit || isSubmitting} onChange={(e) => onChangePhotoFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                                {!(!isEdit || isSubmitting) &&\n                                                    <Button\n                                                        className={`btn border-0 upload-file-button ${verificationData?.photo?.preview && 'filled'}`}\n                                                        onClick={() => photoFile.current.click()}\n                                                    >\n                                                        <i className=\"fa fa-2x fa-camera\" />\n                                                        <br />\n                                                        <div className=\"text-center d-none d-md-block\">\n                                                            Upload\n                                                            <br />\n                                                            <small>Max. 5 MB</small>\n                                                        </div>\n                                                    </Button>\n                                                }\n                                            </div>\n                                            {touched.photo && errors.photo && <small className=\"text-danger\">{errors.photo}</small>}\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                            {isEdit &&\n                                <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                    <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                                </Col>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Button, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nexport default (props) => {\n    const data = props.data;\n\n    console.log(data)\n    const currentData = useMemo(() => ({\n        businessName: data.name ?? '',\n        sector: { label: data.sector.name, value: data.sector.id } ?? '',\n        companySize: data.size ?? '',\n        aboutUs: data.about ?? '',\n        npwpNumber: data.npwp ?? '',\n        address: data.address ?? '',\n        province: { label: data.province.name, value: data.province.id } ?? '',\n        phone: data.phoneNumber ?? '',\n    }), [data])\n\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            businessName: Yup.string().required().label('Business Name'),\n            sector: Yup.string().required().label('Sector'),\n            companySize: Yup.string().required().oneOf(['<10', '11-50', '50-100', '100-500', '>500']).label('Company Size'),\n            aboutUs: Yup.string().required().label('About Us'),\n            npwpNumber: Yup.string().required().label('NPWP Number'),\n            address: Yup.string().required().label('Address'),\n            province: Yup.string().required().label('Province'),\n            phone: Yup.string().required().label('Phone'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><CompanyInformationForm currentData={currentData} companyInformationData={values} setCompanyInformationData={setValues} handleSubmit={handleSubmit} isSubmitting={isSubmitting} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><ContactInformationForm currentData={currentData} contactData={values} setContactData={setValues} handleSubmit={handleSubmit} isSubmitting={isSubmitting} touched={touched} errors={errors} /></Col>\n        </Row>\n    );\n}\n\nconst CompanyInformationForm = ({ currentData, companyInformationData, setCompanyInformationData, handleSubmit, isSubmitting, touched, errors }) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeBusinessName = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, businessName: value }))\n    }, [setCompanyInformationData])\n\n    const handleChangecompanySize = useCallback((e) => {\n        const { value, checked } = e.target;\n        setCompanyInformationData(old => ({ ...old, companySize: checked ? value : '' }))\n    }, [setCompanyInformationData])\n\n    const handleChangeSector = useCallback((e) => {\n        setCompanyInformationData(old => ({ ...old, sector: e }))\n    }, [setCompanyInformationData])\n\n    const handleChangeNpwpNumber = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, npwpNumber: value }))\n    }, [setCompanyInformationData])\n\n    const handleChangeAboutUs = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, aboutUs: value }))\n    }, [setCompanyInformationData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">COMPANY INFORMATION</div>\n                        <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                            setIsEdit(!isEdit)\n                            setCompanyInformationData(currentData)\n                        }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"businessName\">Business Entity</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"businessName\" id=\"businessName\" disabled={!isEdit || isSubmitting} value={companyInformationData.businessName} onChange={(e) => handleChangeBusinessName(e)} placeholder=\"Business Entity Field...\" />\n                                {touched.businessName && errors.businessName && <small className=\"text-danger\">{errors.businessName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"sector\">Sector</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={sectors}\n                                    placeholder=\"Choose a socter...\"\n                                    value={companyInformationData.sector}\n                                    onChange={(e) => handleChangeSector(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    isDisabled={!isEdit || isSubmitting}\n                                />\n                                {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"companySize\">Company Size</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size1\" value=\"<10\" disabled={!isEdit || isSubmitting} checked={companyInformationData.companySize === \"<10\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size1\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            {\"<10\"}\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size2\" value=\"11-50\" disabled={!isEdit || isSubmitting} checked={companyInformationData.companySize === \"11-50\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size2\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            11-50\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size3\" value=\"50-100\" disabled={!isEdit || isSubmitting} checked={companyInformationData.companySize === \"50-100\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size3\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            50-100\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size4\" value=\"100-500\" disabled={!isEdit || isSubmitting} checked={companyInformationData.companySize === \"100-500\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size4\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            100-500\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size1\" value=\">500\" disabled={!isEdit || isSubmitting} checked={companyInformationData.companySize === \">500\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size1\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            {\">500\"}\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.companySize && errors.companySize && <small className=\"text-danger\">{errors.companySize}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"aboutUs\">About Us</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"aboutUs\"\n                                    id=\"aboutUs\"\n                                    className=\"form-control\"\n                                    placeholder=\"About Us Field...\"\n                                    value={companyInformationData.aboutUs}\n                                    onChange={(e) => handleChangeAboutUs(e)}\n                                    disabled={!isEdit || isSubmitting}\n                                />\n                                {touched.aboutUs && errors.aboutUs && <small className=\"text-danger\">{errors.aboutUs}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"npwpNumber\">NPWP Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"npwpNumber\" id=\"npwpNumber\" disabled={!isEdit || isSubmitting} value={companyInformationData.npwpNumber} onChange={(e) => handleChangeNpwpNumber(e)} placeholder=\"NPWP Number Field...\" />\n                                {touched.npwpNumber && errors.npwpNumber && <small className=\"text-danger\">{errors.npwpNumber}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    {isEdit &&\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                        </Col>\n                    }\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nconst ContactInformationForm = ({ currentData, contactData, setContactData, handleSubmit, isSubmitting, touched, errors }) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const { data: getProvince } = useDataProvinces();\n    const province = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const handleChangeProvince = useCallback((e) => {\n        setContactData(old => ({ ...old, province: e }))\n    }, [setContactData])\n\n    const handleChangeAddress = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, address: value }))\n    }, [setContactData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, phone: value }))\n    }, [setContactData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">CONTACT INFORMATION</div>\n                        <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                            setIsEdit(!isEdit)\n                            setContactData(currentData)\n                        }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"address\">Address</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"address\"\n                                    id=\"address\"\n                                    className=\"form-control\"\n                                    placeholder=\"Address Field...\"\n                                    value={contactData.address}\n                                    onChange={(e) => handleChangeAddress(e)}\n                                    disabled={!isEdit || isSubmitting}\n                                />\n                                {touched.address && errors.address && <small className=\"text-danger\">{errors.address}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"province\">Province</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={province}\n                                    placeholder=\"Choose province...\"\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={contactData.province}\n                                    onChange={(e) => handleChangeProvince(e)}\n                                    isDisabled={!isEdit || isSubmitting}\n                                />\n                                {touched.province && errors.province && <small className=\"text-danger\">{errors.province}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Mobile Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" disabled={!isEdit || isSubmitting} value={contactData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Mobile Phone Field...\"\n                                    onWheel={(e) => { e.target.blur() }} onInput={(e) => { e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 16) }}\n                                />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    {isEdit &&\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                        </Col>\n                    }\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Input, Label, Button, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nexport default (props) => {\n    const data = props.data;\n\n    const currentData = useMemo(() => ({\n        firstName: data.registrantInformation.firstName ?? '',\n        lastName: data.registrantInformation.lastName ?? '',\n        email: data.registrantInformation.email ?? '',\n        phone: data.registrantInformation.phoneNumber ?? '',\n        idType: { label: 'KTP', value: 'ktp' },\n        idNumber: data.registrantInformation.identityNumber ?? '',\n        jobTitle: data.registrantInformation.jobTitle ?? '',\n    }), [data])\n\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            firstName: Yup.string().required().label('First Name'),\n            lastName: Yup.string().required().label('Last Name'),\n            email: Yup.string().required().email().label('Email'),\n            phone: Yup.string().required().label('Phone'),\n            idType: Yup.string().required().label('ID Type'),\n            idNumber: Yup.string().required().label('ID Number'),\n            jobTitle: Yup.string().required().label('Job Title'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><RegistrantInformationForm currentData={currentData} registrantData={values} setRegistrantData={setValues} handleSubmit={handleSubmit} isSubmitting={isSubmitting} touched={touched} errors={errors} /></Col>\n        </Row>\n    );\n}\n\nexport const RegistrantInformationForm = ({ currentData, registrantData, setRegistrantData, handleSubmit, isSubmitting, touched, errors }) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const idType = [\n        { label: 'KTP', value: 'ktp' },\n    ]\n\n    const handleChangeFirstName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, firstName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeLastName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, lastName: value }))\n    }, [setRegistrantData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, phone: value }))\n    }, [setRegistrantData])\n\n    const handleChangeEmail = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, email: value }))\n    }, [setRegistrantData])\n\n    const handleChangeIdType = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, idType: e }))\n    }, [setRegistrantData])\n\n    const handleChangeIdNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, idNumber: value }))\n    }, [setRegistrantData])\n\n    const handleChangeJobTitle = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, jobTitle: value }))\n    }, [setRegistrantData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                        <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                            setIsEdit(!isEdit)\n                            setRegistrantData(currentData)\n                        }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"firstName\">First Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" disabled={!isEdit || isSubmitting} value={registrantData.firstName} onChange={(e) => handleChangeFirstName(e)} placeholder=\"First Name Field...\" />\n                                {touched.firstName && errors.firstName && <small className=\"text-danger\">{errors.firstName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"lastName\">Last Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" disabled={!isEdit || isSubmitting} value={registrantData.lastName} onChange={(e) => handleChangeLastName(e)} placeholder=\"Last Name Field...\" />\n                                {touched.lastName && errors.lastName && <small className=\"text-danger\">{errors.lastName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"email\">Email</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"email\" name=\"email\" id=\"email\" disabled={!isEdit || isSubmitting} value={registrantData.email} onChange={(e) => handleChangeEmail(e)} placeholder=\"Email Field...\" />\n                                {touched.email && errors.email && <small className=\"text-danger\">{errors.email}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Mobile Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" disabled={!isEdit || isSubmitting} value={registrantData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Mobile Phone Field...\"\n                                    onWheel={(e) => { e.target.blur() }} onInput={(e) => { e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 16) }} />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idType\">ID Type</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={idType}\n                                    placeholder=\"Choose id type...\"\n                                    value={registrantData.idType}\n                                    onChange={(e) => handleChangeIdType(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    isDisabled={!isEdit || isSubmitting}\n                                />\n                                {touched.idType && errors.idType && <small className=\"text-danger\">{errors.idType}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idNumber\">ID Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"idNumber\" id=\"idNumber\"\n                                    disabled={!isEdit || isSubmitting} value={registrantData.idNumber} onChange={(e) => handleChangeIdNumber(e)} placeholder=\"ID Number Field...\"\n                                    onWheel={(e) => { e.target.blur() }} onInput={(e) => { e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 16) }}\n                                />\n                                {touched.idNumber && errors.idNumber && <small className=\"text-danger\">{errors.idNumber}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"jobTitle\">Job Title</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"jobTitle\" id=\"jobTitle\" disabled={!isEdit || isSubmitting} value={registrantData.jobTitle} onChange={(e) => handleChangeJobTitle(e)} placeholder=\"Job Title Field...\" />\n                                {touched.jobTitle && errors.jobTitle && <small className=\"text-danger\">{errors.jobTitle}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    {isEdit &&\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                        </Col>\n                    }\n                </Row>\n            </CardBody>\n        </Card >\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\"\n// import Select from 'react-select';\nimport {\n    translate,\n} from 'react-switch-lang';\nimport StepWizard from 'react-step-wizard';\nimport { NavigationDot } from \"./Components/Navigation\";\nimport RegistrantForm from \"./Forms/RegistrantForm\";\nimport EducationForm from \"./Forms/EducationForm\";\nimport WorkExprerienceForm from \"./Forms/WorkExprerienceForm\";\nimport ProjectExperienceForm from \"./Forms/ProjectExperienceForm\";\nimport SkillSectorForm from \"./Forms/SkillSectorForm\";\nimport DocumentVerificationForm from \"./Forms/DocumentVerificationForm\";\nimport { useFormik } from \"formik\";\nimport { Button, Card, CardBody, Col, Modal, ModalBody, Row, Spinner } from \"reactstrap\";\nimport CompanyInformationForm from \"./Forms/CompanyInformationForm\";\nimport RegistrantCompanyForm from \"./Forms/RegistrantCompanyForm\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport request from \"../../../utils/request\";\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\nimport { useAuthUser } from \"../../../store\";\nimport noImage from '../../../assets/illustrations/image-error.png'\nimport { DefaultImageUser } from '../../../components/DefaultImageUser/DefaultImageUser';\n\n\nfunction Profile(props) {\n    const location = useLocation();\n    const history = useHistory();\n    const authUser = useAuthUser();\n    const registrationForm = authUser.role\n    const [modalSubmitForm, setModalSubmitForm] = useState(false);\n    const [instance, setInstance] = useState(null);\n\n    const { values: registrationData, setValues: setRegistrationData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: {\n            companyInformationForm: '',\n            registrantForm: '',\n            educationForm: '',\n            workExperienceForm: '',\n            projectExperienceForm: '',\n            skillSectorForm: '',\n            verificationForm: '',\n        },\n        // validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            // if (!validationForm(instance, registrationForm, registrationData)) setModalSubmitForm(false)\n\n            let formData = new FormData()\n            formData.append('role', registrationForm)\n            formData.append('email', values.registrantForm.email)\n            formData.append('password', values.verificationForm.password)\n            formData.append('firstName', values.registrantForm.firstName)\n            formData.append('lastName', values.registrantForm.lastName)\n            formData.append('phoneNumber', values.registrantForm.phone)\n            formData.append('identityType', values.registrantForm.idType.value)\n            formData.append('identityNumber', values.registrantForm.idNumber)\n\n            if (registrationForm === 'company') {\n                formData.append('clientIdSector', values.companyInformationForm.sector.value)\n                formData.append('companyName', values.companyInformationForm.businessName)\n                formData.append('companySize', values.companyInformationForm.companySize)\n                formData.append('about', values.companyInformationForm.aboutUs)\n                formData.append('npwp', values.companyInformationForm.npwpNumber)\n                formData.append('address', values.companyInformationForm.address)\n                formData.append('idProvince', values.companyInformationForm.province.value)\n                formData.append('companyPhoneNumber', values.companyInformationForm.phone)\n                formData.append('jobTitle', values.registrantForm.jobTitle)\n            } else {\n                formData.append('idProvince', values.registrantForm.province.value)\n                formData.append('address', values.registrantForm.address)\n                formData.append('dob', moment(values.registrantForm.dateOfBirth).format('YYYY-MM-DD'))\n                formData.append('gender', values.registrantForm.gender)\n                formData.append('npwp', values.registrantForm.npwpNumber)\n\n                if (registrationForm === 'individual') {\n                    formData.append('clientIdSector', values.registrantForm.sector.value)\n                }\n\n                if (registrationForm === 'professional') {\n                    formData.append('educations', JSON.stringify(values.educationForm.map(v => ({ idSchool: v.school.value, idEducationDegree: v.degree.value, idEducationField: v.education.value, graduationYear: v.graduationYear.value }))))\n                    formData.append('workExperiences', JSON.stringify(values.workExperienceForm.map(v => ({ idProvince: v.location.value, idSector: v.sector.value, jobTitle: v.job, companyName: v.company, employmentType: v.employementType.value, startDate: moment(v.startDate).format('YYYY-MM-DD'), endDate: moment(v.endDate).format('YYYY-MM-DD'), isStillPresent: v.endDatePresent, skills: v.skills.map(s => ({ idSkill: s.value })) }))))\n                    formData.append('projectExperiences', JSON.stringify(values.projectExperienceForm.map(v => ({ idProvince: v.province.value, idCountry: v.country.value, idSector: v.sector.value, clientName: v.client, projectName: v.projectName, projectRole: v.projectRole, description: v.description, startDate: moment(v.startDate).format('YYYY-MM-DD'), endDate: moment(v.endDate).format('YYYY-MM-DD'), skills: v.skills.map(s => ({ idSkill: s.value })) }))))\n                    formData.append('skills', JSON.stringify(values.skillSectorForm.skills.map(v => ({ idSkill: v.value }))))\n                    formData.append('sectors', JSON.stringify(values.skillSectorForm.sectors.map(v => ({ idSector: v.value }))))\n                }\n            }\n\n            if (values.verificationForm.photo) formData.append('avatar', values.verificationForm.photo.file, values.verificationForm.photo.file.name)\n            if (values.verificationForm.npwp) formData.append('npwp', values.verificationForm.npwp.file, values.verificationForm.npwp.file.name)\n            if (values.verificationForm.regId) formData.append('identity', values.verificationForm.regId.file, values.verificationForm.regId.file.name)\n            request.post(`v1/auth/signup`, formData)\n                .then(() => {\n                    toast.success('Register success')\n                    setModalSubmitForm(false)\n                    history.push('/')\n                })\n                .catch((error) => toast.error(error.response.data.message))\n                .finally(() => setSubmitting(false))\n        }\n    })\n\n    // useEffect(() => {\n    //     if (instance) {\n    //         validationForm(instance, registrationForm, registrationData)\n    //     }\n    //     // eslint-disable-next-line\n    // }, [instance, registrationForm])\n\n    const handleFinishRegistration = () => {\n        setModalSubmitForm(!modalSubmitForm)\n    }\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\">\n                <Biodata data={authUser} />\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <StepWizard\n                            isHashEnabled\n                            className=\"register-form\"\n                            nav={<NavigationDot role={registrationForm} />}\n                            instance={setInstance}\n                            transitions={{\n                                enterRight: ``,\n                                enterLeft: ``,\n                                exitRight: ``,\n                                exitLeft: ``,\n                                intro: ``,\n                            }}\n                        >\n                            {registrationForm === 'professional' && <RegistrantForm data={authUser} step={1} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n                            {registrationForm === 'professional' && <EducationForm data={authUser} step={2} registrationForm={registrationForm} hashKey=\"education\" stepName=\"education\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, educationForm: data }))} />}\n                            {registrationForm === 'professional' && <WorkExprerienceForm data={authUser} step={3} registrationForm={registrationForm} hashKey=\"workExperience\" stepName=\"workExperience\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, workExperienceForm: data }))} />}\n                            {registrationForm === 'professional' && <ProjectExperienceForm data={authUser} step={4} registrationForm={registrationForm} hashKey=\"projectExperience\" stepName=\"projectExperience\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, projectExperienceForm: data }))} />}\n                            {registrationForm === 'professional' && <SkillSectorForm data={authUser} step={5} registrationForm={registrationForm} hashKey=\"skillSector\" stepName=\"skillSector\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, skillSectorForm: data }))} />}\n                            {registrationForm === 'professional' && <DocumentVerificationForm data={authUser} step={6} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n\n                            {registrationForm === 'company' && <CompanyInformationForm data={authUser} step={1} registrationForm={registrationForm} hashKey=\"companyInformation\" stepName=\"companyInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, companyInformationForm: data }))} />}\n                            {registrationForm === 'company' && <RegistrantCompanyForm data={authUser} step={2} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n                            {registrationForm === 'company' && <DocumentVerificationForm data={authUser} step={3} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n\n                            {registrationForm === 'individual' && <RegistrantForm data={authUser} step={1} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n                            {registrationForm === 'individual' && <DocumentVerificationForm data={authUser} step={2} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n                        </StepWizard>\n                    </CardBody>\n                </Card>\n                <Modal isOpen={modalSubmitForm} centered toggle={handleFinishRegistration}>\n                    <ModalBody className=\"p-5\">\n                        <Row>\n                            <Col xs=\"12\" className=\"mb-5\">\n                                Are you sure with your registration data?\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                <Button color=\"secondary\" className=\"mr-2\" onClick={handleFinishRegistration}>Cancel</Button>\n                                <Button color=\"primary\" disabled={isSubmitting} onClick={handleSubmit}>\n                                    {isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : 'Submit'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                </Modal>\n            </Col>\n        </Row>\n    );\n}\n\nconst Biodata = ({ data }) => {\n    const onErrorImage = useCallback((e) => {\n        e.target.src = noImage;\n        e.target.onerror = null;\n    }, [])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"d-flex py-3\">\n                        {data.avatar ?\n                            <img src={data.avatar} className=\"rounded-circle shadow-sm ml-4\" alt=\"avatar\" style={{ objectFit: 'cover', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />\n                            :\n                            <DefaultImageUser text={data?.name ?? data.firstName} size={200} className=\"ml-4\" />\n                        }\n                        <div className=\"ml-5 w-100\">\n                            {data.role === 'professional' ?\n                                <div className=\"font-2xl font-weight-bold mb-2\">{data.firstName} {data.lastName}</div>\n                                :\n                                <>\n                                    <div className=\"font-2xl font-weight-bold mb-2\">{data.name}</div>\n                                    <div className=\"font-lg mb-2\">{data.registrantInformation.firstName} {data.registrantInformation.lastName}</div>\n                                </>\n                            }\n                            <Row className=\"mb-2\">\n                                <Col xs=\"3\">\n                                    <small>Phone number</small>\n                                    <div className=\"font-weight-bold\">{data.phoneNumber}</div>\n                                </Col>\n                                <Col xs=\"3\">\n                                    <small>Joined at</small>\n                                    <div className=\"font-weight-bold\">{moment(data.createdAt).format('DD MMMM YYYY')}</div>\n                                </Col>\n                                <Col xs=\"6\">\n                                    <small>\n                                        About me\n                                    </small>\n                                    <div>\n                                        {data.about ?? 'Nothing about me'}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst validationForm = (instance, registrationForm, registrationData) => {\n    if (registrationForm === 'professional') {\n        if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n        if (!registrationData.educationForm) { instance.goToNamedStep('education'); return false; }\n        if (!registrationData.workExperienceForm) { instance.goToNamedStep('workExperience'); return false; }\n        if (!registrationData.projectExperienceForm) { instance.goToNamedStep('projectExperience'); return false; }\n        if (!registrationData.skillSectorForm) { instance.goToNamedStep('skillSector'); return false; }\n        if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n    }\n    if (registrationForm === 'company') {\n        if (!registrationData.companyInformationForm) { instance.goToNamedStep('companyInformation'); return false; }\n        if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n        if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n    }\n    if (registrationForm === 'individual') {\n        if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n        if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n    }\n    return true;\n}\nexport default translate(Profile);\n"],"sourceRoot":""}