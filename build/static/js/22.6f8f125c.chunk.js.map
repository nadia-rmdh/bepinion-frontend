{"version":3,"sources":["views/Menu/Projects/ProjectCreate.js"],"names":["ProjectInformation","projectInformationData","setProjectInformationData","touched","errors","getSector","useDataSectors","data","sectors","useMemo","map","p","label","name","value","id","handleChangeProjectName","useCallback","e","target","old","projectName","handleChangeProjectOwnerVisibility","checked","projectOwnerVisibility","handleChangeSector","handleChangeDescription","description","handleChangePrerequisite","prerequisite","className","xs","md","lg","for","type","onChange","placeholder","addonType","closeMenuOnSelect","isClearable","isMulti","options","components","DropdownIndicator","IndicatorSeparator","isOptionDisabled","option","length","sector","minRows","ProjectSchedule","projectScheduleData","setProjectScheduleData","handleChangeDuration","budget","duration","onWheel","blur","ProjectTimelines","projectTimelinesData","setProjectTimelinesData","ProjectRequirements","projectRequirementsData","setProjectRequirementsData","getSkills","useDataSkills","skills","getDegree","useDataEducationDegrees","degrees","getEduField","useDataEducationFields","educations","handleChangeSkills","handleChangeDegree","degree","handleChangeYearExperience","yearExperience","handleChangeEducation","education","ProjectDetails","projectDetailsData","setProjectDetailsData","useState","mcv","setMcv","handleChangeMinimum","minimumContractValue","handleChangeEstimated","estimatedContractValue","handleChangeBudgetVisibility","budgetVisibility","handleChangeClosingDate","closingDate","handleChangeMeetingDate","meetingDate","completionDate","moment","add","relations","style","backgroundColor","border","width","height","targetId","targetAnchor","sourceAnchor","strokeColor","strokeWidth","endMarker","format","initialSettings","singleDatePicker","showDropdowns","startDate","Date","minDate","autoApply","drops","onApply","background","cursor","padding","marginTop","subtract","ProjectCreate","props","history","useHistory","modalSubmitForm","setModalSubmitForm","useFormik","initialValues","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setErrors","request","post","isOwnerDisplayed","sectorIds","isBudgetVisible","completeDate","idEducationDegree","idEducationField","minYearExp","requirementSkills","skill","idSkill","meetingDetails","link","date","then","res","toast","success","push","catch","err","error","finally","setValues","handleSubmit","isSubmitting","color","onClick","isOpen","centered","toggle","disabled"],"mappings":"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","file":"static/js/22.6f8f125c.chunk.js","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Label, Input, InputGroup, InputGroupAddon, InputGroupText, CustomInput, ModalBody, Modal } from \"reactstrap\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport Select from 'react-select'\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { toast } from \"react-toastify\";\nimport request from \"../../../utils/request\";\nimport useDataEducationDegrees from \"../../../hooks/useDataEducationDegrees\";\nimport useDataEducationFields from \"../../../hooks/useDataEducationFields\";\nimport useDataSectors from \"../../../hooks/useDataSectors\";\nimport useDataSkills from \"../../../hooks/useDataSkills\";\nimport { useHistory } from \"react-router-dom\";\nimport { ArcherContainer, ArcherElement } from 'react-archer'\nimport moment from 'moment'\n\n\nfunction ProjectCreate(props) {\n    const history = useHistory();\n    const [modalSubmitForm, setModalSubmitForm] = useState(false);\n\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            projectName: Yup.string().required().label('Business Name'),\n            projectOwnerVisibility: Yup.string().required().label('Project Owner Visibility'),\n            sectors: Yup.string().required().label('Sector'),\n            description: Yup.string().required().label('Description'),\n            prerequisite: Yup.string().required().label('Supporting Materials'),\n            duration: Yup.number().min(1, 'Min value 1.').label('Duration'),\n            estimatedContractValue: Yup.number().min(500000, 'Min value 500.000').label('Estimated Contract Value'),\n            budgetVisibility: Yup.string().required().label('Budget Visibility'),\n            completionDate: Yup.string().required().label('Completion Date'),\n            closingDate: Yup.string().required().label('Tender Closing Date'),\n            meetingDate: Yup.string().required().label('Meeting Date'),\n            skills: Yup.string().required().label('Skills Requirements'),\n            yearExperience: Yup.number().min(1, 'Min value 1.').label('Year Experience'),\n            degree: Yup.string().required().label('Degree'),\n            education: Yup.string().required().label('Education Field'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: {\n            projectName: '',\n            projectOwnerVisibility: '',\n            sectors: [],\n            description: '',\n            prerequisite: '',\n            duration: 0,\n            budget: 500000,\n            minimumContractValue: 0,\n            estimatedContractValue: 0,\n            budgetVisibility: '',\n            completionDate: '',\n            closingDate: '',\n            meetingDate: '',\n            skills: [],\n            yearExperience: 0,\n            degree: '',\n            education: '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n\n            request.post(`v1/project`, {\n                name: values.projectName,\n                isOwnerDisplayed: values.projectOwnerVisibility === 'displayed' ? true : false,\n                sectorIds: values.sectors.map((sector) => sector.value),\n                description: values.description,\n                prerequisite: values.prerequisite,\n                duration: values.duration,\n                budget: values.budget,\n                minimumContractValue: values.minimumContractValue,\n                estimatedContractValue: values.estimatedContractValue,\n                isBudgetVisible: values.budgetVisibility === 'displayed' ? true : false,\n                completeDate: values.completionDate,\n                closingDate: values.closingDate,\n                idEducationDegree: values.degree.value,\n                idEducationField: values.education.value,\n                minYearExp: values.yearExperience,\n                requirementSkills: values.skills.map((skill) => ({ idSkill: skill.value })),\n                meetingDetails: {\n                    link: \"\",\n                    date: values.meetingDate\n                },\n            })\n                .then(res => {\n                    toast.success('Create Project Successfully')\n                    history.push('/')\n                })\n                .catch(err => {\n                    toast.error('Create project failed.');\n                })\n                .finally(() => {\n                    setModalSubmitForm(!modalSubmitForm)\n                    setSubmitting(false)\n                })\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><ProjectInformation projectInformationData={values} setProjectInformationData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><ProjectSchedule projectScheduleData={values} setProjectScheduleData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><ProjectRequirements projectRequirementsData={values} setProjectRequirementsData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><ProjectDetails projectDetailsData={values} setProjectDetailsData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                <Button color=\"secondary\" className=\"mr-2\">Cancel</Button>\n                <Button color=\"primary\" onClick={() => setModalSubmitForm(!modalSubmitForm)}>\n                    Create\n                </Button>\n            </Col>\n            <Modal isOpen={modalSubmitForm} centered toggle={() => setModalSubmitForm(!modalSubmitForm)}>\n                <ModalBody className=\"p-5\">\n                    <Row>\n                        <Col xs=\"12\" className=\"mb-5\">\n                            Are you sure with this data?\n                        </Col>\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"secondary\" className=\"mr-2\" onClick={() => setModalSubmitForm(!modalSubmitForm)}>Cancel</Button>\n                            <Button color=\"primary\" disabled={isSubmitting} onClick={handleSubmit}>Create</Button>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n        </Row>\n    );\n}\n\nconst ProjectInformation = ({ projectInformationData, setProjectInformationData, touched, errors }) => {\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeProjectName = useCallback((e) => {\n        const { value } = e.target;\n        setProjectInformationData(old => ({ ...old, projectName: value }))\n    }, [setProjectInformationData])\n\n    const handleChangeProjectOwnerVisibility = useCallback((e) => {\n        const { value, checked } = e.target;\n        setProjectInformationData(old => ({ ...old, projectOwnerVisibility: checked ? value : '' }))\n    }, [setProjectInformationData])\n\n    const handleChangeSector = useCallback((e) => {\n        setProjectInformationData(old => ({ ...old, sectors: e ?? [] }))\n    }, [setProjectInformationData])\n\n    const handleChangeDescription = useCallback((e) => {\n        const { value } = e.target;\n        setProjectInformationData(old => ({ ...old, description: value }))\n    }, [setProjectInformationData])\n\n    const handleChangePrerequisite = useCallback((e) => {\n        const { value } = e.target;\n        setProjectInformationData(old => ({ ...old, prerequisite: value }))\n    }, [setProjectInformationData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">PROJECT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"projectName\">Project Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"projectName\" id=\"projectName\" value={projectInformationData.projectName} onChange={(e) => handleChangeProjectName(e)} placeholder=\"Business Entity Field...\" />\n                                {touched.projectName && errors.projectName && <small className=\"text-danger\">{errors.projectName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"projectOwnerVisibility\">Project Owner Visibility</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"displayed\" value=\"displayed\" checked={projectInformationData.projectOwnerVisibility === \"displayed\" ? true : false} onChange={(e) => handleChangeProjectOwnerVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"displayed\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Displayed\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"undisclosed\" value=\"undisclosed\" checked={projectInformationData.projectOwnerVisibility === \"undisclosed\" ? true : false} onChange={(e) => handleChangeProjectOwnerVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"undisclosed\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Undisclosed\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.projectOwnerVisibility && errors.projectOwnerVisibility && <small className=\"text-danger\">{errors.projectOwnerVisibility}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"sector\">Sector</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    closeMenuOnSelect={false}\n                                    isClearable\n                                    isMulti\n                                    options={sectors}\n                                    placeholder=\"Choose max 3 sectors...\"\n                                    value={projectInformationData.sectors}\n                                    onChange={(e) => handleChangeSector(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    isOptionDisabled={(option) => projectInformationData.sectors.length >= 3}\n                                />\n                                {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" className=\"d-flex align-items-center\">\n                                <Label for=\"description\" className=\"mb-1\">Description</Label>\n                            </Col>\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <small className=\"text-muted\">\n                                    1. Tell us about the background story of this project. <br />\n                                    2. Tell us about your objectives of this project. <br />\n                                    3. Tell us about the important decisions you need to make based on the result of this project. <br />\n                                    4. Tell us where to focus our attention to. <br />\n                                    5. Tell us about the boundary conditions of this issue (if any). <br />\n                                </small>\n                            </Col>\n                            <Col xs=\"12\">\n                                <TextareaAutosize\n                                    minRows={5}\n                                    name=\"description\"\n                                    id=\"description\"\n                                    className=\"form-control\"\n                                    placeholder=\"Description Field...\"\n                                    value={projectInformationData.description}\n                                    onChange={(e) => handleChangeDescription(e)}\n                                />\n                                {touched.description && errors.description && <small className=\"text-danger\">{errors.description}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" className=\"d-flex align-items-center\">\n                                <Label for=\"prerequisite\">Supporting Materials</Label>\n                            </Col>\n                            <Col xs=\"12\">\n                                <TextareaAutosize\n                                    minRows={5}\n                                    name=\"prerequisite\"\n                                    id=\"prerequisite\"\n                                    className=\"form-control\"\n                                    placeholder=\"Supporting Materials Field...\"\n                                    value={projectInformationData.prerequisite}\n                                    onChange={(e) => handleChangePrerequisite(e)}\n                                />\n                                {touched.prerequisite && errors.prerequisite && <small className=\"text-danger\">{errors.prerequisite}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nconst ProjectSchedule = ({ projectScheduleData, setProjectScheduleData, touched, errors }) => {\n    const handleChangeDuration = useCallback((e) => {\n        const { value } = e.target;\n        const budget = (500 + ((value - 1) * 300)) * 1000;\n        setProjectScheduleData(old => ({ ...old, duration: value, budget }))\n    }, [setProjectScheduleData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">PROJECT SCHEDULE</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"duration\">Meeting Duration</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <InputGroup>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <Input type=\"number\" name=\"duration\" id=\"duration\" value={projectScheduleData.duration} onChange={(e) => handleChangeDuration(e)} placeholder=\"Duration Field...\"\n                                            onWheel={(e) => { e.target.blur() }}\n                                        />\n                                        <InputGroupText>\n                                            hours\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                </InputGroup>\n                                {touched.duration && errors.duration && <small className=\"text-danger\">{errors.duration}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col xs=\"12\" className=\"mt-5\"><ProjectTimelines projectTimelinesData={projectScheduleData} setProjectTimelinesData={setProjectScheduleData} touched={touched} errors={errors} /></Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst ProjectRequirements = ({ projectRequirementsData, setProjectRequirementsData, touched, errors }) => {\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const { data: getDegree } = useDataEducationDegrees();\n    const degrees = useMemo(() => getDegree.map(p => ({ label: p.name, value: p.id })), [getDegree])\n\n    const { data: getEduField } = useDataEducationFields();\n    const educations = useMemo(() => getEduField.map(p => ({ label: p.name, value: p.id })), [getEduField])\n\n    const handleChangeSkills = useCallback((e) => {\n        setProjectRequirementsData(old => ({ ...old, skills: e ?? [] }))\n    }, [setProjectRequirementsData])\n\n    const handleChangeDegree = useCallback((e) => {\n        setProjectRequirementsData(old => ({ ...old, degree: e ?? [] }))\n    }, [setProjectRequirementsData])\n\n    const handleChangeYearExperience = useCallback((e) => {\n        const { value } = e.target;\n        setProjectRequirementsData(old => ({ ...old, yearExperience: value }))\n    }, [setProjectRequirementsData])\n\n    const handleChangeEducation = useCallback((e) => {\n        setProjectRequirementsData(old => ({ ...old, education: e ?? [] }))\n    }, [setProjectRequirementsData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">CONSULTANT REQUIREMENTS</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"skills\">Skiils</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    closeMenuOnSelect={false}\n                                    options={skills}\n                                    isClearable\n                                    isMulti\n                                    placeholder=\"Choose some skills...\"\n                                    onChange={(e) => handleChangeSkills(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={projectRequirementsData.skills} />\n                                {touched.skills && errors.skills && <small className=\"text-danger\">{errors.skills}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"yearExperience\">Minimum years of experience</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"yearExperience\" id=\"yearExperience\" value={projectRequirementsData.yearExperience} onChange={(e) => handleChangeYearExperience(e)} placeholder=\"Minimum year Field...\"\n                                    onWheel={(e) => { e.target.blur() }}\n                                />\n                                {touched.yearExperience && errors.yearExperience && <small className=\"text-danger\">{errors.yearExperience}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"degree\">Degree</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={degrees}\n                                    placeholder=\"Choose a degree...\"\n                                    value={projectRequirementsData.degree}\n                                    onChange={(e) => handleChangeDegree(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.degree && errors.degree && <small className=\"text-danger\">{errors.degree}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"education\">Field of study</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={educations}\n                                    placeholder=\"Choose a education field...\"\n                                    value={projectRequirementsData.education}\n                                    onChange={(e) => handleChangeEducation(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.education && errors.education && <small className=\"text-danger\">{errors.education}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nconst ProjectDetails = ({ projectDetailsData, setProjectDetailsData, touched, errors }) => {\n    const [mcv, setMcv] = useState(0);\n    const handleChangeMinimum = useCallback((e) => {\n        const { value } = e.target;\n        setMcv(value)\n        setProjectDetailsData(old => ({ ...old, minimumContractValue: value }))\n    }, [setProjectDetailsData])\n\n    const handleChangeEstimated = useCallback((e) => {\n        const { value } = e.target;\n        setProjectDetailsData(old => ({ ...old, estimatedContractValue: value }))\n    }, [setProjectDetailsData])\n\n    const handleChangeBudgetVisibility = useCallback((e) => {\n        const { value } = e.target;\n        setProjectDetailsData(old => ({ ...old, budgetVisibility: value }))\n    }, [setProjectDetailsData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">COMMERCIAL DETAILS</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"minimumContractValue\">Minimum Contract Value (Optional)</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <InputGroup>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            IDR\n                                        </InputGroupText>\n                                        <Input type=\"number\" name=\"minimumContractValue\" id=\"minimumContractValue\" value={projectDetailsData.minimumContractValue} onChange={(e) => handleChangeMinimum(e)}\n                                            onWheel={(e) => { e.target.blur() }}\n                                        />\n                                    </InputGroupAddon>\n                                </InputGroup>\n                                {mcv > 0 && mcv < 500000 && <small className=\"text-danger\">Min value 500.000</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"estimatedContractValue\">Estimated Contract Value</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <InputGroup>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            IDR\n                                        </InputGroupText>\n                                        <Input type=\"number\" name=\"estimatedContractValue\" id=\"estimatedContractValue\" value={projectDetailsData.estimatedContractValue} onChange={(e) => handleChangeEstimated(e)}\n                                            onWheel={(e) => { e.target.blur() }}\n                                        />\n                                    </InputGroupAddon>\n                                </InputGroup>\n                                {touched.estimatedContractValue && errors.estimatedContractValue && <small className=\"text-danger\">{errors.estimatedContractValue}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"budgetVisibility\">Budget Visibility</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"displayedbudget\" value=\"displayed\" checked={projectDetailsData.budgetVisibility === \"displayed\" ? true : false} onChange={(e) => handleChangeBudgetVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"displayedbudget\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Displayed\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"undisclosedbudget\" value=\"undisclosed\" checked={projectDetailsData.budgetVisibility === \"undisclosed\" ? true : false} onChange={(e) => handleChangeBudgetVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"undisclosedbudget\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Undisclosed\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.budgetVisibility && errors.budgetVisibility && <small className=\"text-danger\">{errors.budgetVisibility}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst ProjectTimelines = ({ projectTimelinesData, setProjectTimelinesData, touched, errors }) => {\n    const handleChangeClosingDate = useCallback((value) => {\n        setProjectTimelinesData(old => ({ ...old, closingDate: value }))\n    }, [setProjectTimelinesData])\n\n    const handleChangeMeetingDate = useCallback((value) => {\n        setProjectTimelinesData(old => ({ ...old, meetingDate: value, completionDate: moment(value).add(7, 'days') }))\n    }, [setProjectTimelinesData])\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <ArcherContainer>\n                    <div className=\"text-center d-flex justify-content-between\">\n                        <div>\n                            <div>\n                                Create Project\n                            </div>\n                            <ArcherElement\n                                id={`step-1-1`}\n                                relations={[]}\n                            >\n                                <div\n                                    className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div className=\"mt-2\" style={{ height: '26px' }}>\n                            </div>\n                            <ArcherElement\n                                id={`step-1`}\n                                relations={[\n                                    {\n                                        targetId: `step-1-1`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#000000', strokeWidth: 2, endMarker: false },\n                                    },\n                                    {\n                                        targetId: `step-2`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#20a8d7', strokeWidth: 5, endMarker: false },\n                                    },\n                                ]}\n                            >\n                                <div\n                                    className={`mx-auto text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <span className=\"mt-2\">\n                                <br />\n                                {moment().format('DD-MM-YYYY')}\n                            </span>\n                        </div>\n                        <div>\n                            <span className=\"mb-3\">\n                                <DateRangePicker\n                                    initialSettings={{\n                                        singleDatePicker: true,\n                                        showDropdowns: true,\n                                        startDate: new Date(),\n                                        minDate: new Date(),\n                                        autoApply: true,\n                                        drops: \"up\",\n                                    }}\n                                    onApply={(e, p) => handleChangeClosingDate(p.startDate)}\n                                >\n                                    <div id=\"reportrange\" style={{ background: '#fff', cursor: 'pointer', padding: '5px 10px', border: '1px solid #ccc', width: '100%' }}>\n                                        <i className=\"fa fa-calendar mr-2\"></i><span>{projectTimelinesData.closingDate ? projectTimelinesData.closingDate.format('DD-MM-YYYY') : 'DD-MM-YYY'}</span> <i className=\"fa fa-caret-down float-right\"></i>\n                                    </div>\n                                </DateRangePicker>\n                                {touched.closingDate && errors.closingDate && <small className=\"text-danger\">{errors.closingDate}</small>}\n                            </span>\n                            <ArcherElement\n                                id={`step-2`}\n                                relations={[\n                                    {\n                                        targetId: `step-2-1`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#000000', strokeWidth: 2, endMarker: false },\n                                    },\n                                    {\n                                        targetId: `step-3`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#20a8d7', strokeWidth: 5, endMarker: false },\n                                    },\n                                ]}\n                            >\n                                <div\n                                    className={`mx-auto text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px', marginTop: '30px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div className=\"mt-2\" style={{ height: '30px' }}>\n                            </div>\n                            <ArcherElement\n                                id={`step-2-1`}\n                                relations={[]}\n                            >\n                                <div\n                                    className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div>\n                                Tender Closing Date\n                            </div>\n                        </div>\n                        <div>\n                            <div>\n                                Project Wall Access\n                            </div>\n                            <ArcherElement\n                                id={`step-3-1`}\n                                relations={[]}\n                            >\n                                <div\n                                    className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div className=\"mt-2\" style={{ height: '26px' }}>\n                            </div>\n                            <ArcherElement\n                                id={`step-3`}\n                                relations={[\n                                    {\n                                        targetId: `step-3-1`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#000000', strokeWidth: 2, endMarker: false },\n                                    },\n                                    {\n                                        targetId: `step-4`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#20a8d7', strokeWidth: 5, endMarker: false },\n                                    },\n                                ]}\n                            >\n                                <div\n                                    className={`mx-auto text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <span className=\"mt-2\">\n                                <br />\n                                {projectTimelinesData.meetingDate ? moment(projectTimelinesData.meetingDate).subtract(7, 'day').format('DD-MM-YYYY') : 'DD-MM-YYYY'}\n                            </span>\n                        </div>\n                        <div>\n                            <span className=\"mb-3\">\n                                <DateRangePicker\n                                    initialSettings={{\n                                        singleDatePicker: true,\n                                        showDropdowns: true,\n                                        startDate: new Date(),\n                                        minDate: new Date(),\n                                        autoApply: true,\n                                        drops: \"up\",\n                                    }}\n                                    onApply={(e, p) => handleChangeMeetingDate(p.startDate)}\n                                >\n                                    <div id=\"reportrange\" style={{ background: '#fff', cursor: 'pointer', padding: '5px 10px', border: '1px solid #ccc', width: '100%' }}>\n                                        <i className=\"fa fa-calendar mr-2\"></i><span>{projectTimelinesData.meetingDate ? projectTimelinesData.meetingDate.format('DD-MM-YYYY') : 'DD-MM-YYY'}</span> <i className=\"fa fa-caret-down float-right\"></i>\n                                    </div>\n                                </DateRangePicker>\n                                {touched.meetingDate && errors.meetingDate && <small className=\"text-danger\">{errors.meetingDate}</small>}\n                            </span>\n                            <ArcherElement\n                                id={`step-4`}\n                                relations={[\n                                    {\n                                        targetId: `step-4-1`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#000000', strokeWidth: 2, endMarker: false },\n                                    },\n                                    {\n                                        targetId: `step-5`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#20a8d7', strokeWidth: 5, endMarker: false },\n                                    },\n                                ]}\n                            >\n                                <div\n                                    className={`mx-auto text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px', marginTop: '30px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div className=\"mt-2\" style={{ height: '26px' }}>\n                            </div>\n                            <ArcherElement\n                                id={`step-4-1`}\n                                relations={[]}\n                            >\n                                <div\n                                    className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div>\n                                Meeting Date\n                            </div>\n                        </div>\n                        <div>\n                            <div>\n                                Project Completion\n                            </div>\n                            <ArcherElement\n                                id={`step-5-1`}\n                                relations={[]}\n                            >\n                                <div\n                                    className={`mx-auto round-100 text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <div className=\"mt-2\" style={{ height: '26px' }}>\n                            </div>\n                            <ArcherElement\n                                id={`step-5`}\n                                relations={[\n                                    {\n                                        targetId: `step-5-1`,\n                                        targetAnchor: 'middle',\n                                        sourceAnchor: 'middle',\n                                        style: { strokeColor: '#000000', strokeWidth: 2, endMarker: false },\n                                    },\n                                ]}\n                            >\n                                <div\n                                    className={`mx-auto text-center d-flex justify-content-center align-items-center`}\n                                    style={{ backgroundColor: '#000000', border: 'solid 1px #000000', width: '10px', height: '10px' }}\n                                >\n                                </div>\n                            </ArcherElement>\n                            <span className=\"mt-2\">\n                                <br />\n                                {projectTimelinesData.completionDate ? projectTimelinesData.completionDate.format('DD-MM-YYYY') : 'DD-MM-YYYY'}\n                            </span>\n                        </div>\n                    </div>\n                </ArcherContainer>\n            </Col>\n        </Row>\n    )\n}\nexport default ProjectCreate;\n"],"sourceRoot":""}