{"version":3,"sources":["utils/formatter.js","components/DeliverableStatus.js","components/StatusProject.js","views/Menu/Professionals/ProfessionalDashboard.js"],"names":["convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","convertNumberCurrencies","n","ranges","divider","suffix","toFixed","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","draft","pending","rejected","approved","open","expired","under_review","tnc_review","on_going","close","void","deliverable_approved","localizer","momentLocalizer","moment","ProjectStatus","data","useState","filter","setFilter","handleChangeFilter","useCallback","e","target","value","checked","state","d","filteredData","useMemo","filtered","projectList","includes","approvalStatus","className","xs","md","lg","addonType","type","id","onChange","hover","responsive","map","p","key","to","projectStatus","idProject","isAlreadyRated","projectName","clientName","completeDate","format","DeliverableStatus","activityStatus","StatusProject","colSpan","ProjectStatistics","style","whiteSpace","fontSize","color","width","height","applied","onGoing","MyCalendar","events","modalDetail","setModalDetail","handleDetailEvent","event","popup","defaultDate","Date","messages","previous","next","components","title","replace","project","placement","agenda","name","defaultView","views","onSelectEvent","position","top","right","bottom","left","background","display","justifyContent","alignItems","centered","size","isOpen","toggle","aria-label","onClick","aria-hidden","start","Trends","dataSkills","labels","skillList","skill","datasets","label","backgroundColor","borderWidth","dataSectors","sectorList","sector","minHeight","totalDurationCloseProject","totalClosedProject","bidSuccessRate","totalSuccessBid","totalBidProject","options","maintainAspectRatio","legend","tooltips","mode","scales","xAxes","responsiveAnimationDuration","intersect","onHover","chartElement","cursor","Finance","fontWeight","totalAR","averageAR","estimateAR","ProfessionalDashboard","props","user","useAuthUser","useSWR","getData","error","loading","firstName","lastName","projectStatistics","calenderDetails","trendDetails","financeStatistics"],"mappings":"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","file":"static/js/3.aca158e2.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'indonesia', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'rb',\n        million: 'jt',\n        billion: 'M',\n        trillion: 'T'\n    },\n    ordinal: function (number) {\n        return number === 1 ? 'er' : 'ème';\n    },\n    currency: {\n        symbol: 'IDR'\n    }\n});\nnumeral.locale('indonesia')\n\nexport function convertToRupiah(angka) {\n    var rupiah = '';\n    var angkarev = angka?.toString().split('').reverse().join('');\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';\n\n    return rupiah.split('', rupiah.length - 1).reverse().join('');\n}\n\nexport function convertNumberCurrencies(n) {\n    const ranges = [\n        { divider: 1e18, suffix: 'E' },\n        { divider: 1e15, suffix: 'P' },\n        { divider: 1e12, suffix: 'T' },\n        { divider: 1e9, suffix: 'B' },\n        { divider: 1e6, suffix: 'M' },\n        { divider: 1e3, suffix: 'k' }\n    ];\n\n    for (var i = 0; i < ranges.length; i++) {\n        if (n >= ranges[i].divider) {\n            return (n / ranges[i].divider).toFixed(0).toString() + ranges[i].suffix;\n        }\n    }\n    return n.toString();\n}\n\nexport function formatDate(date) {\n    let d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (d.toString() === 'Invalid Date') {\n        return null;\n    }\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function dataURIToBlob(dataURI) {\n    const splitDataURI = dataURI.split(',')\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\n\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type: mimeString })\n}\n\nexport function matchWildcard(str, wildcard) {\n    var escapeRegex = (str) => str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n    return new RegExp(\"^\" + wildcard.split(\"*\").map(escapeRegex).join(\".*\") + \"$\").test(str);\n}\n\nexport function convertNumber(numb, format = '0.0a') {\n    return numeral(numb).format(format)\n}\n","export default {\n    draft: 'Draft',\n    pending: 'For Review',\n    rejected: 'To Revise',\n    approved: 'Approved',\n}","export default {\n    open: 'Open',\n    expired: 'Expired',\n    under_review: 'Under Review',\n    tnc_review: 'T&C Review',\n    on_going: 'Ongoing',\n    close: 'Closed',\n    void: 'Void',\n    deliverable_approved: 'Approved'\n}","import React, { useCallback, useMemo, useState } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport { Col, Row, Card, CardBody, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Table, Badge, Progress, Input, Spinner, Modal, ModalBody, UncontrolledTooltip } from 'reactstrap'\nimport moment from 'moment'\nimport { Bar } from 'react-chartjs-2';\nimport { useAuthUser } from '../../../store';\nimport useSWR from 'swr';\nimport { Link } from 'react-router-dom';\nimport { convertNumberCurrencies } from '../../../utils/formatter';\nimport DeliverableStatus from '../../../components/DeliverableStatus'\nimport StatusProject from '../../../components/StatusProject';\n\nconst localizer = momentLocalizer(moment);\nfunction ProfessionalDashboard(props) {\n    const user = useAuthUser()\n    const { data: getData, error, } = useSWR(() => `v1/user/me/dashboard`);\n    const loading = !getData || error\n    const data = useMemo(() => {\n        return getData?.data?.data ?? [];\n    }, [getData]);\n\n\n    if (loading) {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                    background: \"rgba(255,255,255, 0.5)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Spinner style={{ width: 48, height: 48 }} />\n            </div>\n        )\n    }\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\">\n                                <h2 className=\"font-weight-bold mb-4\">{user.firstName} {user.lastName}</h2>\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatus data={data} />\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatistics data={data?.projectStatistics} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"5\">\n                                <MyCalendar events={data?.calenderDetails} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"7\">\n                                <Trends data={data?.trendDetails} />\n                            </Col>\n                            <Col xs=\"12\">\n                                <Finance data={data?.financeStatistics} />\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nconst ProjectStatus = ({ data }) => {\n    const [filter, setFilter] = useState([]);\n    const handleChangeFilter = useCallback((e) => {\n        const { value, checked } = e.target;\n        if (checked) {\n            setFilter(state => ([...state, value]))\n        } else {\n            setFilter(state => state.filter(d => d !== value))\n        }\n    }, [setFilter]);\n\n    const filteredData = useMemo(() => {\n        const filtered = filter.length > 0 ? data?.projectList?.filter(d => filter.includes(d.approvalStatus)) : data?.projectList;\n\n        return filtered ?? [];\n    }, [data, filter])\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Status</h4>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"applied\" value=\"applied\" checked={filter.includes('applied')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Applied\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"under_review\" value=\"under_review\" checked={filter.includes('under_review')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Under Review\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"tnc_review\" value=\"tnc_review\" checked={filter.includes('tnc_review')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                T&C Review\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"on_going\" value=\"on_going\" checked={filter.includes('on_going')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Ongoing\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"deliverable_approved\" value=\"deliverable_approved\" checked={filter.includes('deliverable_approved')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Approved\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"6\" md=\"4\" lg=\"2\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"close\" value=\"close\" checked={filter.includes('close')} onChange={handleChangeFilter} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Closed\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"12\" className=\"my-1\">\n                        <Table hover responsive className=\"text-center\">\n                            <thead>\n                                <tr>\n                                    <th className=\"text-left\">Project Name</th>\n                                    <th>Client Name</th>\n                                    <th>Completion Date</th>\n                                    <th>Deliverable Status</th>\n                                    <th>Project Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {filteredData.length > 0\n                                    ? filteredData.map((p, i) =>\n                                        <tr key={i}>\n                                            <td className=\"text-left\">\n                                                <Link to={`${['on_going', 'deliverable_approved'].includes(p.projectStatus)\n                                                    ? `/project/${p.idProject}/wall`\n                                                    : (['close'].includes(p.projectStatus)\n                                                        ? (p.isAlreadyRated ? `/project/${p.idProject}/wall` : `/rate/${p.idProject}`)\n                                                        : `/project/${p.idProject}`)}`}\n                                                    className={`${p.isAlreadyRated ? 'text-dark' : (p.projectStatus === 'close' ? 'text-pinion-secondary' : 'text-dark')}`}\n                                                >\n                                                    {p.projectName}\n                                                </Link>\n                                            </td>\n                                            <td>{p.clientName}</td>\n                                            <td>{moment(p?.completeDate ?? '').format('DD-MM-YYYY')}</td>\n                                            {/* <td>{['on_going', 'close', 'tnc_review', 'deliverable_approved'].includes(p.projectStatus) ? moment(p?.completeDate ?? '').format('DD-MM-YYYY') : '-'}</td> */}\n                                            <td className=\"text-uppercase\">{DeliverableStatus[p?.activityStatus] ?? '-'}</td>\n                                            <td className=\"text-uppercase\">{StatusProject[p?.projectStatus]}</td>\n                                        </tr>\n                                    )\n                                    : <tr>\n                                        <td colSpan=\"5\" className=\"text-center text-muted\">No Data</td>\n                                    </tr>\n                                }\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card >\n    )\n}\n\nconst ProjectStatistics = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Statistics</h4>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex my-1 justify-content-center text-center\">\n                        <Row>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of projects in tender</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.applied}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of active projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.onGoing}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of completed projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{data.close}</Badge></div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst MyCalendar = ({ events }) => {\n    const [modalDetail, setModalDetail] = useState(null);\n\n    const handleDetailEvent = (event) => {\n        setModalDetail(event)\n    }\n\n    const tooltipsEvent = (e) => {\n        return (\n            <div>\n                <div id={`${e.title.replace(' ', '')}-${e.event.project.id}`} className=\"title-calendar\">{e.title}</div>\n                <UncontrolledTooltip\n                    placement=\"bottom\"\n                    target={`${e.title.replace(' ', '')}-${e.event.project.id}`}\n                >\n                    {e.title}\n                </UncontrolledTooltip>\n            </div>\n        )\n    }\n\n    const agendaEvent = (e) => {\n        return (\n            <div>\n                <small className=\"text-muted\">{e.event.project.name}</small>\n                <div className=\"text-dark\">{e.title}</div>\n            </div>\n        )\n    }\n\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ height: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">My Calendar</h4>\n                        {events\n                            ? <Calendar\n                                popup={true}\n                                localizer={localizer}\n                                defaultDate={new Date()}\n                                messages={{\n                                    previous: <i className=\"fa fa-angle-left\"></i>,\n                                    next: <i className=\"fa fa-angle-right\"></i>,\n                                }}\n                                components={{\n                                    event: tooltipsEvent,\n                                    agenda: {\n                                        event: agendaEvent,\n                                    },\n                                }}\n                                defaultView=\"month\"\n                                views={[\"month\", 'agenda']}\n                                events={events}\n                                style={{ height: \"50vh\" }}\n                                onSelectEvent={event => handleDetailEvent(event)}\n                            />\n                            : <div\n                                style={{\n                                    position: \"absolute\",\n                                    top: 0,\n                                    right: 0,\n                                    bottom: 0,\n                                    left: 0,\n                                    background: \"rgba(255,255,255, 0.5)\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                <Spinner style={{ width: 48, height: 48 }} />\n                            </div>\n                        }\n                    </Col>\n                </Row>\n                <Modal centered size=\"sm\" isOpen={!!modalDetail} toggle={() => handleDetailEvent(null)}>\n                    <ModalBody className=\"p-4 text-center\">\n                        <Row>\n                            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => handleDetailEvent(null)}><span aria-hidden=\"true\">×</span></button>\n                            </Col>\n                            <Col xs=\"12\" className=\"mb-2\">\n                                <div className=\"text-muted\">Activity</div>\n                                <div className=\"font-weight-bold\">{modalDetail?.title}</div>\n                            </Col>\n                            <Col xs=\"12\" className=\"mb-2\">\n                                <div className=\"text-muted\">Date</div>\n                                <div className=\"font-weight-bold\">{moment(modalDetail?.start).format('DD MMMM YYYY')}</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <div className=\"text-muted\">Project</div>\n                                <Link to={`/project/${modalDetail?.project?.id}/wall`} className=\"font-weight-bold\">{modalDetail?.project?.name}</Link>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                </Modal>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Trends = ({ data }) => {\n    const color = [\n        'rgba(255, 99, 132, 0.7)',\n        'rgba(54, 162, 235, 0.7)',\n        'rgba(255, 206, 86, 0.7)',\n        'rgba(75, 192, 192, 0.7)',\n        'rgba(153, 102, 255, 0.7)',\n        'rgba(255, 159, 64, 0.7)',\n    ];\n\n    const dataSkills = {\n        labels: data.skillList.map(skill => skill.name),\n        datasets: [\n            {\n                label: 'Skills',\n                data: data.skillList.map(skill => skill.value),\n                backgroundColor: data.skillList.map((skill, i) => color[i % data.skillList.length]),\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    const dataSectors = {\n        labels: data.sectorList.map(sector => sector.name),\n        datasets: [\n            {\n                label: 'Sectors',\n                data: data.sectorList.map(sector => sector.value),\n                backgroundColor: data.sectorList.map((sector, i) => color[i % data.sectorList.length]),\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ minHeight: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">Trends</h4>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row>\n                            <Col xs=\"12\" md=\"6\" className=\"px-0 mb-3 mb-md-0\">\n                                <h6>Average Time per Project</h6>\n                                <div style={{ fontSize: '30pt' }}>{data.totalDurationCloseProject ? (data.totalDurationCloseProject / data.totalClosedProject).toFixed(2) : 0} hrs</div>\n                                <small className=\"text-muted\">Total {data.totalDurationCloseProject} hours</small>\n                            </Col>\n                            <Col xs=\"12\" md=\"6\" className=\"px-0\">\n                                <h6>Bid Success Rate</h6>\n                                <div style={{ fontSize: '30pt' }}>{data.bidSuccessRate?.toFixed(2)}%</div>\n                                <small className=\"text-muted\">{data.totalSuccessBid}/{data.totalBidProject} projects</small>\n                            </Col>\n                            <Col xs=\"12\" md=\"12\" className=\"mt-2\">\n                                <div>Skills</div>\n                                <div>\n                                    <Bar data={dataSkills} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        scales: {\n                                            xAxes: [{ display: false }],\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={200} width={700} />\n                                </div>\n                            </Col>\n                            <Col xs=\"12\" md=\"12\" className=\"mt-2\">\n                                <div>Sectors</div>\n                                <div>\n                                    <Bar data={dataSectors} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        scales: {\n                                            xAxes: [{ display: false }],\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={200} />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Finance = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Finance</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Total AR</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{convertNumberCurrencies(data?.totalAR ?? 0)}</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Average AR per project</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{convertNumberCurrencies(data?.averageAR ?? 0)}</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Estimated AR based on applied projects</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>{convertNumberCurrencies(data?.estimateAR ?? 0)}</div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\n// eslint-disable-next-line\nconst Projects = ({ data, activities }) => {\n\n    const dataStats = {\n        labels: ['Project 1', 'Project 2', 'Project 3', 'Project 4', 'Project 5', 'Project 6'],\n        datasets: [\n            {\n                label: 'Projects',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Projects</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <Row className=\"my-2\">\n                            <Col xs=\"5\">\n                                <div>Overall</div>\n                            </Col>\n                            <Col xs=\"7\">\n                                <Progress color='#555' value={60}>\n                                    <b style={{ color: \"#555\" }}>{60}%</b>\n                                </Progress>\n                            </Col>\n                        </Row>\n                        {data.map((d, i) => (\n                            <Row key={i} className=\"my-2\">\n                                <Col xs=\"5\">\n                                    <div>{d.projectName}</div>\n                                </Col>\n                                <Col xs=\"7\">\n                                    <Progress color='#555' value={d.progress}>\n                                        <b style={{ color: \"#555\" }}>{d.progress}%</b>\n                                    </Progress>\n                                </Col>\n                            </Row>\n                        ))}\n                    </Col>\n                    <Col xs=\"12\" lg=\"8\">\n                        <div>\n                            <Bar data={dataStats} options={{\n                                maintainAspectRatio: false,\n                                legend: false,\n                                tooltips: {\n                                    mode: \"label\",\n                                },\n                                responsive: true,\n                                responsiveAnimationDuration: 2000,\n                                hover: {\n                                    intersect: true,\n                                    mode: \"point\",\n                                },\n                                onHover: (event, chartElement) => {\n                                    event.target.style.cursor = chartElement[0]\n                                        ? \"pointer\"\n                                        : \"default\";\n                                },\n                            }} height={250} />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" className=\"mt-3\">\n                        <Row>\n                            <Col xs=\"12\" lg=\"4\">\n                                <Row>\n                                    <Col xs=\"6\" className=\"d-flex align-items-center\">\n                                        <div>Show for upcoming</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <Input min={0} max={100} type=\"number\" step=\"1\" />\n                                            <InputGroupAddon addonType=\"append\">days</InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-3\">\n                                    <Col xs=\"6\">\n                                        <div>Category Filter</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Deliverable\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                A/R & A/P\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Meeting\n                                            </div>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\" lg=\"8\">\n                                <Table hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Project</th>\n                                            <th>Category</th>\n                                            <th>Action</th>\n                                            <th>Due Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {activities.map((p, i) =>\n                                            <tr key={i}>\n                                                <td>{p.projectName}</td>\n                                                <td>{p.category}</td>\n                                                <td>{p.action}</td>\n                                                <td>{p.dueDate}</td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default ProfessionalDashboard"],"sourceRoot":""}