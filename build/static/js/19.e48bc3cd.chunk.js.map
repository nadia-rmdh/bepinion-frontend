{"version":3,"sources":["views/Menu/Projects/ProjectCreate.js"],"names":["ProjectInformation","projectInformationData","setProjectInformationData","touched","errors","getSector","useDataSectors","data","sectors","useMemo","map","p","label","name","value","id","handleChangeProjectName","useCallback","e","target","old","projectName","handleChangeProjectOwnerVisibility","checked","projectOwnerVisibility","handleChangeSector","sector","handleChangeDescription","description","handleChangeDuration","duration","handleChangeBudget","budget","handleChangeBudgetVisibility","budgetVisibility","handleChangeCompletionDate","completionDate","handleChangeClosingDate","closingDate","className","xs","md","lg","for","type","onChange","placeholder","addonType","options","components","DropdownIndicator","IndicatorSeparator","minRows","initialSettings","singleDatePicker","showDropdowns","startDate","Date","minDate","autoApply","onApply","style","background","cursor","padding","border","width","format","ProjectRequirements","projectRequirementsData","setProjectRequirementsData","getSkills","useDataSkills","skills","getDegree","useDataEducationDegrees","degrees","getEduField","useDataEducationFields","educations","handleChangeSkills","handleChangeDegree","degree","handleChangeYearExperience","yearExperience","handleChangeEducation","education","closeMenuOnSelect","isClearable","isMulti","ProjectCreate","props","history","useHistory","useState","modalSubmitForm","setModalSubmitForm","useFormik","initialValues","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setErrors","request","post","isOwnerDisplayed","idSector","isBudgetVisible","completeDate","idEducationDegree","idEducationField","minYearExp","requirementSkills","skill","idSkill","then","res","toast","success","push","catch","err","error","finally","setValues","handleSubmit","isSubmitting","color","onClick","isOpen","centered","toggle","disabled"],"mappings":"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","file":"static/js/19.e48bc3cd.chunk.js","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Label, Input, InputGroup, InputGroupAddon, InputGroupText, CustomInput, ModalBody, Modal } from \"reactstrap\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport Select from 'react-select'\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { toast } from \"react-toastify\";\nimport request from \"../../../utils/request\";\nimport useDataEducationDegrees from \"../../../hooks/useDataEducationDegrees\";\nimport useDataEducationFields from \"../../../hooks/useDataEducationFields\";\nimport useDataSectors from \"../../../hooks/useDataSectors\";\nimport useDataSkills from \"../../../hooks/useDataSkills\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction ProjectCreate(props) {\n    const history = useHistory();\n    const [modalSubmitForm, setModalSubmitForm] = useState(false);\n\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            projectName: Yup.string().required().label('Business Name'),\n            projectOwnerVisibility: Yup.string().required().label('Project Owner Visibility'),\n            sector: Yup.string().required().label('Sector'),\n            description: Yup.string().required().label('Description'),\n            duration: Yup.number().min(1, 'Min value 1.').label('Duration'),\n            budget: Yup.number().min(1, 'Min value 1.').label('budget'),\n            budgetVisibility: Yup.string().required().label('Budget Visibility'),\n            completionDate: Yup.string().required().label('Completion Date'),\n            closingDate: Yup.string().required().label('Tender Closing Date'),\n            skills: Yup.string().required().label('Skills Requirements'),\n            yearExperience: Yup.number().min(1, 'Min value 1.').label('Year Experience'),\n            degree: Yup.string().required().label('Degree'),\n            education: Yup.string().required().label('Education Field'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: {\n            projectName: '',\n            projectOwnerVisibility: '',\n            sector: '',\n            description: '',\n            duration: 0,\n            budget: 0,\n            budgetVisibility: '',\n            completionDate: '',\n            closingDate: '',\n            skills: [],\n            yearExperience: 0,\n            degree: '',\n            education: '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n\n            request.post(`v1/project`, {\n                name: values.projectName,\n                isOwnerDisplayed: values.projectOwnerVisibility === 'displayed' ? true : false,\n                idSector: values.sector.value,\n                description: values.description,\n                duration: values.duration,\n                budget: values.budget,\n                isBudgetVisible: values.budgetVisibility === 'displayed' ? true : false,\n                completeDate: values.completionDate,\n                closingDate: values.closingDate,\n                idEducationDegree: values.degree.value,\n                idEducationField: values.education.value,\n                minYearExp: values.yearExperience,\n                requirementSkills: values.skills.map((skill) => ({ idSkill: skill.value }))\n            })\n                .then(res => {\n                    toast.success('Create Project Successfully')\n                    history.push('/')\n                })\n                .catch(err => {\n                    toast.error('Create project failed.');\n                })\n                .finally(() => {\n                    setModalSubmitForm(!modalSubmitForm)\n                    setSubmitting(false)\n                })\n        }\n    })\n\n    return (\n        <div>\n            <Row>\n                <Col xs=\"12\"><ProjectInformation projectInformationData={values} setProjectInformationData={setValues} touched={touched} errors={errors} /></Col>\n                <Col xs=\"12\"><ProjectRequirements projectRequirementsData={values} setProjectRequirementsData={setValues} touched={touched} errors={errors} /></Col>\n                <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                    <Button color=\"secondary\" className=\"mr-2\">Cancel</Button>\n                    <Button color=\"primary\" onClick={() => setModalSubmitForm(!modalSubmitForm)}>\n                        Create\n                    </Button>\n                </Col>\n            </Row>\n            <Modal isOpen={modalSubmitForm} centered toggle={() => setModalSubmitForm(!modalSubmitForm)}>\n                <ModalBody className=\"p-5\">\n                    <Row>\n                        <Col xs=\"12\" className=\"mb-5\">\n                            Are you sure with this data?\n                        </Col>\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"secondary\" className=\"mr-2\" onClick={() => setModalSubmitForm(!modalSubmitForm)}>Cancel</Button>\n                            <Button color=\"primary\" disabled={isSubmitting} onClick={handleSubmit}>Create</Button>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n}\n\nconst ProjectInformation = ({ projectInformationData, setProjectInformationData, touched, errors }) => {\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeProjectName = useCallback((e) => {\n        const { value } = e.target;\n        setProjectInformationData(old => ({ ...old, projectName: value }))\n    }, [setProjectInformationData])\n\n    const handleChangeProjectOwnerVisibility = useCallback((e) => {\n        const { value, checked } = e.target;\n        setProjectInformationData(old => ({ ...old, projectOwnerVisibility: checked ? value : '' }))\n    }, [setProjectInformationData])\n\n    const handleChangeSector = useCallback((e) => {\n        setProjectInformationData(old => ({ ...old, sector: e }))\n    }, [setProjectInformationData])\n\n    const handleChangeDescription = useCallback((e) => {\n        const { value } = e.target;\n        setProjectInformationData(old => ({ ...old, description: value }))\n    }, [setProjectInformationData])\n\n    const handleChangeDuration = useCallback((e) => {\n        const { value } = e.target;\n        setProjectInformationData(old => ({ ...old, duration: value }))\n    }, [setProjectInformationData])\n\n    const handleChangeBudget = useCallback((e) => {\n        const { value } = e.target;\n        setProjectInformationData(old => ({ ...old, budget: value }))\n    }, [setProjectInformationData])\n\n    const handleChangeBudgetVisibility = useCallback((e) => {\n        const { value } = e.target;\n        setProjectInformationData(old => ({ ...old, budgetVisibility: value }))\n    }, [setProjectInformationData])\n\n    const handleChangeCompletionDate = useCallback((value) => {\n        setProjectInformationData(old => ({ ...old, completionDate: value }))\n    }, [setProjectInformationData])\n\n    const handleChangeClosingDate = useCallback((value) => {\n        setProjectInformationData(old => ({ ...old, closingDate: value }))\n    }, [setProjectInformationData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">PROJECT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"projectName\">Project Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"projectName\" id=\"projectName\" value={projectInformationData.projectName} onChange={(e) => handleChangeProjectName(e)} placeholder=\"Business Entity Field...\" />\n                                {touched.projectName && errors.projectName && <small className=\"text-danger\">{errors.projectName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"projectOwnerVisibility\">Project Owner Visibility</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"displayed\" value=\"displayed\" checked={projectInformationData.projectOwnerVisibility === \"displayed\" ? true : false} onChange={(e) => handleChangeProjectOwnerVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"displayed\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Displayed\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"undisclosed\" value=\"undisclosed\" checked={projectInformationData.projectOwnerVisibility === \"undisclosed\" ? true : false} onChange={(e) => handleChangeProjectOwnerVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"undisclosed\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Undisclosed\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.projectOwnerVisibility && errors.projectOwnerVisibility && <small className=\"text-danger\">{errors.projectOwnerVisibility}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"sector\">Sector</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={sectors}\n                                    placeholder=\"Choose a sector...\"\n                                    value={projectInformationData.sector}\n                                    onChange={(e) => handleChangeSector(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"description\">Description</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"description\"\n                                    id=\"description\"\n                                    className=\"form-control\"\n                                    placeholder=\"Description Field...\"\n                                    value={projectInformationData.description}\n                                    onChange={(e) => handleChangeDescription(e)}\n                                />\n                                {touched.description && errors.description && <small className=\"text-danger\">{errors.description}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"duration\">Duration</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"duration\" id=\"duration\" value={projectInformationData.duration} onChange={(e) => handleChangeDuration(e)} placeholder=\"Duration Field...\" />\n                                {touched.duration && errors.duration && <small className=\"text-danger\">{errors.duration}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"budget\">Budget</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"budget\" id=\"budget\" value={projectInformationData.budget} onChange={(e) => handleChangeBudget(e)} placeholder=\"Budget Field...\" />\n                                {touched.budget && errors.budget && <small className=\"text-danger\">{errors.budget}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"budgetVisibility\">Budget Visibility</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"displayedbudget\" value=\"displayed\" checked={projectInformationData.budgetVisibility === \"displayed\" ? true : false} onChange={(e) => handleChangeBudgetVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"displayedbudget\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Displayed\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"undisclosedbudget\" value=\"undisclosed\" checked={projectInformationData.budgetVisibility === \"undisclosed\" ? true : false} onChange={(e) => handleChangeBudgetVisibility(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"undisclosedbudget\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Undisclosed\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.budgetVisibility && errors.budgetVisibility && <small className=\"text-danger\">{errors.budgetVisibility}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"completionDate\">Completion Date</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <DateRangePicker\n                                    initialSettings={{\n                                        singleDatePicker: true,\n                                        showDropdowns: true,\n                                        startDate: new Date(),\n                                        minDate: new Date(),\n                                        autoApply: true,\n                                    }}\n                                    onApply={(e, p) => handleChangeCompletionDate(p.startDate)}\n                                >\n                                    <div id=\"reportrange\" style={{ background: '#fff', cursor: 'pointer', padding: '5px 10px', border: '1px solid #ccc', width: '100%' }}>\n                                        <i className=\"fa fa-calendar mr-2\"></i><span>{projectInformationData.completionDate ? projectInformationData.completionDate.format('DD/MM/YYYY') : 'DD/MMMM/YYYY'}</span> <i className=\"fa fa-caret-down float-right\"></i>\n                                    </div>\n                                </DateRangePicker>\n                                {touched.completionDate && errors.completionDate && <small className=\"text-danger\">{errors.completionDate}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"closingDate\">Tender Closing Date</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <DateRangePicker\n                                    initialSettings={{\n                                        singleDatePicker: true,\n                                        showDropdowns: true,\n                                        startDate: new Date(),\n                                        minDate: new Date(),\n                                        autoApply: true,\n                                    }}\n                                    onApply={(e, p) => handleChangeClosingDate(p.startDate)}\n                                >\n                                    <div id=\"reportrange\" style={{ background: '#fff', cursor: 'pointer', padding: '5px 10px', border: '1px solid #ccc', width: '100%' }}>\n                                        <i className=\"fa fa-calendar mr-2\"></i><span>{projectInformationData.closingDate ? projectInformationData.closingDate.format('DD/MM/YYYY') : 'DD/MMMM/YYYY'}</span> <i className=\"fa fa-caret-down float-right\"></i>\n                                    </div>\n                                </DateRangePicker>\n                                {touched.closingDate && errors.closingDate && <small className=\"text-danger\">{errors.closingDate}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nconst ProjectRequirements = ({ projectRequirementsData, setProjectRequirementsData, touched, errors }) => {\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const { data: getDegree } = useDataEducationDegrees();\n    const degrees = useMemo(() => getDegree.map(p => ({ label: p.name, value: p.id })), [getDegree])\n\n    const { data: getEduField } = useDataEducationFields();\n    const educations = useMemo(() => getEduField.map(p => ({ label: p.name, value: p.id })), [getEduField])\n\n    const handleChangeSkills = useCallback((e) => {\n        setProjectRequirementsData(old => ({ ...old, skills: e ?? [] }))\n    }, [setProjectRequirementsData])\n\n    const handleChangeDegree = useCallback((e) => {\n        setProjectRequirementsData(old => ({ ...old, degree: e ?? [] }))\n    }, [setProjectRequirementsData])\n\n    const handleChangeYearExperience = useCallback((e) => {\n        const { value } = e.target;\n        setProjectRequirementsData(old => ({ ...old, yearExperience: value }))\n    }, [setProjectRequirementsData])\n\n    const handleChangeEducation = useCallback((e) => {\n        setProjectRequirementsData(old => ({ ...old, education: e ?? [] }))\n    }, [setProjectRequirementsData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">REQUIREMENTS</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"skills\">Skiils</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    closeMenuOnSelect={false}\n                                    options={skills}\n                                    isClearable\n                                    isMulti\n                                    placeholder=\"Choose some skills...\"\n                                    onChange={(e) => handleChangeSkills(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={projectRequirementsData.skills} />\n                                {touched.skills && errors.skills && <small className=\"text-danger\">{errors.skills}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"yearExperience\">Minimum years of experience</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"yearExperience\" id=\"yearExperience\" value={projectRequirementsData.yearExperience} onChange={(e) => handleChangeYearExperience(e)} placeholder=\"Budget Field...\" />\n                                {touched.yearExperience && errors.yearExperience && <small className=\"text-danger\">{errors.yearExperience}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"degree\">Degree</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={degrees}\n                                    placeholder=\"Choose a degree...\"\n                                    value={projectRequirementsData.degree}\n                                    onChange={(e) => handleChangeDegree(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.degree && errors.degree && <small className=\"text-danger\">{errors.degree}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"education\">Field of study</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={educations}\n                                    placeholder=\"Choose a education field...\"\n                                    value={projectRequirementsData.education}\n                                    onChange={(e) => handleChangeEducation(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.education && errors.education && <small className=\"text-danger\">{errors.education}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nexport default ProjectCreate;\n"],"sourceRoot":""}