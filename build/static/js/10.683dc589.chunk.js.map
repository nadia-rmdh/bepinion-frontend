{"version":3,"sources":["utils/formatter.js","hooks/usePagination.js","views/Menu/Projects/Sorts/SkillMatchSort.js","views/Menu/Projects/Filters/CompletionDateFilter.js","views/Menu/Projects/Filters/ExperienceFilter.js","views/Menu/Projects/Filters/SectorsFilter.js","views/Menu/Projects/Filters/SkillsFilter.js","views/Menu/Projects/Sorts/ClosingDateSort.js","views/Menu/Projects/Sorts/DurationSort.js","views/Menu/Projects/Sorts/BudgetarySort.js","views/Menu/Projects/Project.js"],"names":["convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","convertNumberCurrencies","n","ranges","divider","suffix","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","usePagination","totalData","defaultPage","totalPage","onChangedCurrentPage","useState","currentPage","setCurrentPage","useEffect","next","useCallback","prevState","prev","goto","page","PaginationComponent","useMemo","props","CustomHookPaginationComponent","handleFirst","handleLast","handleNext","handlePrev","handleGoto","count","className","disabled","first","onClick","previous","active","last","SkillMatchSort","useFilterProjectContext","filter","setFilter","isSearchable","options","label","value","onChange","e","state","sortSkill","handleChange","components","DropdownIndicator","IndicatorSeparator","CompletionDateFilter","target","checked","date","InputGroup","InputGroupAddon","addonType","InputGroupText","CustomInput","type","id","ExperienceFilter","exp","SectorsFilter","getSector","useDataSectors","data","sectors","map","p","name","closeMenuOnSelect","isClearable","isMulti","placeholder","handleChangeSectors","SkillsFilter","getSkills","useDataSkills","skills","handleChangeSkills","ClosingDateSort","sortClosing","DurationSort","sortDuration","BudgetarySort","sortBudgetary","colorSkills","Project","useSWR","limit","f","refreshInterval","getProjects","errorProjects","error","loading","mutate","projects","handleChangeCurrentPage","pageSummary","total","totalPages","Row","Col","xs","lg","Card","CardBody","style","position","top","right","bottom","left","display","justifyContent","alignItems","Spinner","width","height","records","key","to","projectOwnerId","projectOwnerName","moment","completeDate","format","duration","s","sector","budget","projectRequirementSkill","Badge","color"],"mappings":"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","file":"static/js/10.683dc589.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'indonesia', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'rb',\n        million: 'jt',\n        billion: 'M',\n        trillion: 'T'\n    },\n    ordinal: function (number) {\n        return number === 1 ? 'er' : 'ème';\n    },\n    currency: {\n        symbol: 'IDR'\n    }\n});\nnumeral.locale('indonesia')\n\nexport function convertToRupiah(angka) {\n    var rupiah = '';\n    var angkarev = angka.toString().split('').reverse().join('');\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';\n\n    return 'IDR ' + rupiah.split('', rupiah.length - 1).reverse().join('');\n}\n\nexport function convertNumberCurrencies(n) {\n    const ranges = [\n        { divider: 1e18, suffix: 'E' },\n        { divider: 1e15, suffix: 'P' },\n        { divider: 1e12, suffix: 'T' },\n        { divider: 1e9, suffix: 'G' },\n        { divider: 1e6, suffix: 'M' },\n        { divider: 1e3, suffix: 'k' }\n    ];\n\n    for (var i = 0; i < ranges.length; i++) {\n        if (n >= ranges[i].divider) {\n            return (n / ranges[i].divider).toString() + ranges[i].suffix;\n        }\n    }\n    return n.toString();\n}\n\nexport function formatDate(date) {\n    let d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (d.toString() === 'Invalid Date') {\n        return null;\n    }\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function dataURIToBlob(dataURI) {\n    const splitDataURI = dataURI.split(',')\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\n\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type: mimeString })\n}\n\nexport function matchWildcard(str, wildcard) {\n    var escapeRegex = (str) => str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n    return new RegExp(\"^\" + wildcard.split(\"*\").map(escapeRegex).join(\".*\") + \"$\").test(str);\n}\n\nexport function convertNumber(numb, format = '0.0a') {\n    return numeral(numb).format(format)\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n\nexport default function usePagination(totalData, defaultPage, totalPage, onChangedCurrentPage) {\n    const [currentPage, setCurrentPage] = useState(defaultPage);\n\n    useEffect(() => onChangedCurrentPage(currentPage), [currentPage, onChangedCurrentPage])\n\n    const next = useCallback(() => {\n        setCurrentPage(prevState => prevState === (totalPage - 1) ? prevState : prevState + 1);\n    }, [totalPage])\n\n    const prev = useCallback(() => {\n        setCurrentPage(prevState => prevState === 0 ? prevState : prevState - 1);\n    }, []);\n\n    const goto = useCallback((page) => {\n        setCurrentPage(page);\n    }, [])\n\n    const PaginationComponent = useMemo(() => {\n        return (props) => <CustomHookPaginationComponent\n            handleFirst={() => goto(0)}\n            handleLast={() => goto(totalPage - 1)}\n            handleNext={next}\n            handlePrev={prev}\n            handleGoto={goto}\n            currentPage={currentPage}\n            count={totalPage}\n        />;\n    }, [goto, next, prev, currentPage, totalPage]);\n    return { currentPage, next, prev, goto, totalPage, PaginationComponent };\n}\n\nconst CustomHookPaginationComponent = ({ handleFirst, handleLast, handleNext, handlePrev, handleGoto, count, currentPage }) => {\n    return (\n        <Pagination className=\"pagination-hub d-flex justify-content-center\">\n            {handleFirst && <PaginationItem disabled={currentPage - 1 >= 0 ? false : true}>\n                <PaginationLink first onClick={handleFirst} disabled={currentPage === 0} />\n            </PaginationItem>}\n            {handlePrev && <PaginationItem disabled={currentPage - 1 >= 0 ? false : true}>\n                <PaginationLink previous onClick={handlePrev} disabled={currentPage === 0} />\n            </PaginationItem>}\n            {currentPage - 3 >= 0 &&\n                <PaginationItem disabled>\n                    <PaginationLink className=\"text-dark\">...</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage - 2 >= 0 &&\n                <PaginationItem className=\"d-none d-md-block\">\n                    <PaginationLink onClick={() => handleGoto(currentPage - 2)}>{currentPage - 1}</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage - 1 >= 0 &&\n                <PaginationItem>\n                    <PaginationLink onClick={() => handleGoto(currentPage - 1)}>{currentPage}</PaginationLink>\n                </PaginationItem>\n            }\n            <PaginationItem active disabled>\n                <PaginationLink onClick={() => handleGoto(currentPage)}>{currentPage + 1}</PaginationLink>\n            </PaginationItem>\n            {currentPage + 1 < count &&\n                <PaginationItem>\n                    <PaginationLink onClick={() => handleGoto(currentPage + 1)}>{currentPage + 2}</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage + 2 < count &&\n                <PaginationItem className=\"d-none d-md-block\">\n                    <PaginationLink onClick={() => handleGoto(currentPage + 2)}>{currentPage + 3}</PaginationLink>\n                </PaginationItem>\n            }\n            {/* {[...Array(count).keys()].map(index => (\n                <PaginationItem key={index} active={currentPage === index} disabled={currentPage === index}>\n                    <PaginationLink onClick={() => handleGoto(index)}>{index + 1}</PaginationLink>\n                </PaginationItem>\n            ))} */}\n            {currentPage + 3 < count &&\n                <PaginationItem disabled>\n                    <PaginationLink className=\"text-dark\">...</PaginationLink>\n                </PaginationItem>\n            }\n            <PaginationItem disabled={currentPage + 1 < count ? false : true}>\n                <PaginationLink next onClick={handleNext} disabled={currentPage === count - 1} />\n            </PaginationItem>\n            <PaginationItem disabled={currentPage + 1 < count ? false : true}>\n                <PaginationLink last onClick={handleLast} disabled={currentPage === count - 1} />\n            </PaginationItem>\n        </Pagination>\n    )\n}","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from '../ProjectContext';\n\nfunction SkillMatchSort() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const skill = [\n        { label: 'Lowest to Highest', value: 'lowest' },\n        { label: 'Highest to Lowest', value: 'highest' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortSkill: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Skill Match</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={skill}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortSkill} />\n        </>\n    )\n}\n\nexport default SkillMatchSort","import React, { useCallback } from 'react'\nimport { InputGroup, InputGroupAddon, InputGroupText, CustomInput } from 'reactstrap'\nimport { useFilterProjectContext } from './../ProjectContext';\n\nfunction CompletionDateFilter() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const handleChange = useCallback((e) => {\n        const { value, checked } = e.target;\n        setFilter(state => ({ ...state, date: checked ? value : '' }));\n    }, [setFilter])\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Completion Date</div>\n            <div className=\"px-3\">\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"this-week\" value=\"this-week\" checked={filter.date === 'this-week'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        This Week\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"next-week\" value=\"next-week\" checked={filter.date === 'next-week'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        Next Week\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"this-month\" value=\"this-month\" checked={filter.date === 'this-month'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        This month\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"next-month\" value=\"next-month\" checked={filter.date === 'next-month'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        Next month\n                    </div>\n                </InputGroup>\n            </div>\n        </>\n    )\n}\n\nexport default CompletionDateFilter","import React, { useCallback } from 'react'\nimport { InputGroup, InputGroupAddon, InputGroupText, CustomInput } from 'reactstrap'\nimport { useFilterProjectContext } from './../ProjectContext';\n\nfunction ExperienceFilter() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const handleChange = useCallback((e) => {\n        const { value, checked } = e.target;\n        setFilter(state => ({ ...state, exp: checked ? value : '' }));\n    }, [setFilter])\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Years of experience</div>\n            <div className=\"px-3\">\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"<3\" value=\"<3\" checked={filter.exp === '<3'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        Less than 3 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"3-6\" value=\"3-6\" checked={filter.exp === '3-6'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        3-6 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"6-10\" value=\"6-10\" checked={filter.exp === '6-10'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        6-10 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"10-20\" value=\"10-20\" checked={filter.exp === '10-20'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        10-20 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\">20\" value=\">20\" checked={filter.exp === '>20'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        More than 20 years\n                    </div>\n                </InputGroup>\n            </div>\n        </>\n    )\n}\n\nexport default ExperienceFilter","import React, { useMemo } from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from './../ProjectContext';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\n\nfunction SectorsFilter() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeSectors = (e) => {\n        setFilter(state => ({ ...state, sectors: e ?? [] }))\n    }\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Sector</div>\n            <div className=\"px-3\">\n                <Select\n                    closeMenuOnSelect={false}\n                    options={sectors}\n                    isClearable\n                    isMulti\n                    placeholder=\"Choose some sectors...\"\n                    onChange={(e) => handleChangeSectors(e)}\n                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                    value={filter.sectors} />\n            </div>\n        </>\n    )\n}\n\nexport default SectorsFilter","import React, { useMemo } from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from './../ProjectContext';\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\n\nfunction SkillsFilter() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const handleChangeSkills = (e) => {\n        setFilter(state => ({ ...state, skills: e ?? [] }))\n    }\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Skills Requirements</div>\n            <div className=\"px-3\">\n                <Select\n                    closeMenuOnSelect={false}\n                    options={skills}\n                    isClearable\n                    isMulti\n                    placeholder=\"Choose some skills...\"\n                    onChange={(e) => handleChangeSkills(e)}\n                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                    value={filter.skills} />\n            </div>\n        </>\n    )\n}\n\nexport default SkillsFilter","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from '../ProjectContext';\n\nfunction ClosingDateSort() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const closing = [\n        { label: 'Newest to Oldest', value: 'newest' },\n        { label: 'Oldest to Newest', value: 'oldest' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortClosing: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Closing Date</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={closing}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortClosing} />\n        </>\n    )\n}\n\nexport default ClosingDateSort","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from '../ProjectContext';\n\nfunction DurationSort() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const duration = [\n        { label: 'Shortest to Longest', value: 'shortest' },\n        { label: 'Longest to Shortest', value: 'longest' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortDuration: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Duration</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={duration}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortDuration} />\n        </>\n    )\n}\n\nexport default DurationSort","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from '../ProjectContext';\n\nfunction BudgetarySort() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const budgetary = [\n        { label: 'Lowest to Highest', value: 'lowest' },\n        { label: 'Highest to Lowest', value: 'highest' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortBudgetary: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Budgetary</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={budgetary}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortBudgetary} />\n        </>\n    )\n}\n\nexport default BudgetarySort","import React, { useCallback, useMemo } from 'react'\nimport { Col, Row, Card, CardBody, Badge, Spinner } from 'reactstrap'\nimport moment from 'moment'\nimport { useFilterProjectContext } from './ProjectContext';\nimport CompletionDateFilter from './Filters/CompletionDateFilter';\nimport ExperienceFilter from './Filters/ExperienceFilter';\nimport SectorsFilter from './Filters/SectorsFilter';\nimport SkillsFilter from './Filters/SkillsFilter';\nimport ClosingDateSort from './Sorts/ClosingDateSort';\nimport DurationSort from './Sorts/DurationSort';\nimport BudgetarySort from './Sorts/BudgetarySort';\nimport SkillMatchSort from './Sorts/SkillMatchSort';\nimport { convertToRupiah } from '../../../utils/formatter';\nimport { Link } from 'react-router-dom';\nimport useSWR from 'swr';\nimport usePagination from \"../../../hooks/usePagination\";\n\nconst colorSkills = [\n    'success',\n    'danger',\n    'warning',\n    'secondary',\n    'info',\n    'primary',\n    'light',\n    'dark'\n]\n\nfunction Project() {\n    const [filter, setFilter] = useFilterProjectContext()\n    const { data: getProjects, error: errorProjects, mutate: mutateProjects } = useSWR(() => `v1/project?${filter.limit ? `limit=${filter.limit}` : ''}${filter.date ? `&completeDate=${filter.date}` : ''}${filter.exp ? `&yearOfExperience=${filter.exp}` : ''}${filter.skills.length > 0 ? `&skillIds=${filter.skills.map(f => f.value).toString()}` : ''}${filter.sectors.length > 0 ? `&sectorIds=${filter.sectors.map(f => f.value).toString()}` : ''}${`&page=${filter.page + 1}`}`, { refreshInterval: 1800000 });\n\n    const loading = !getProjects || errorProjects;\n    const projects = useMemo(() => {\n        return getProjects?.data?.data ?? [];\n    }, [getProjects]);\n\n    const handleChangeCurrentPage = useCallback(\n        (page) => {\n            setFilter((state) => ({ ...state, page: page }));\n        },\n        [setFilter]\n    );\n\n    const { PaginationComponent } = usePagination(\n        projects?.pageSummary?.total,\n        filter.page,\n        projects?.pageSummary?.totalPages,\n        handleChangeCurrentPage\n    );\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\" lg=\"3\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <h5 className=\"font-weight-bold mb-4 text-center\">FILTER</h5>\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <SectorsFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <CompletionDateFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <ExperienceFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <SkillsFilter />\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\" lg=\"9\">\n                <Row className=\"mb-4\">\n                    <Col xs=\"3\">\n                        <ClosingDateSort />\n                    </Col>\n                    <Col xs=\"3\">\n                        <DurationSort />\n                    </Col>\n                    <Col xs=\"3\">\n                        <BudgetarySort />\n                    </Col>\n                    <Col xs=\"3\">\n                        <SkillMatchSort />\n                    </Col>\n                </Row>\n\n                <Row className=\"mb-2\">\n                    <Col xs=\"12\">\n                        {loading ?\n                            <div\n                                style={{\n                                    position: \"absolute\",\n                                    top: 0,\n                                    right: 0,\n                                    bottom: 0,\n                                    left: 0,\n                                    // background: \"rgba(255,255,255, 0.5)\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                <Spinner style={{ width: 48, height: 48 }} />\n                            </div>\n                            :\n                            projects?.records?.map((p, i) => (\n                                <Card key={i} className=\"shadow-sm\">\n                                    <CardBody>\n                                        <Row>\n                                            <Col xs=\"9\">\n                                                <Row>\n                                                    <Col xs=\"12\">\n                                                        <Link to={`/project/${p.id}`} className=\"text-dark\">\n                                                            <h4>{p.name}</h4>\n                                                        </Link>\n                                                    </Col>\n                                                    <Col xs=\"12\" className=\"d-flex justify-content-between\">\n                                                        <Link to={`/client/${p.projectOwnerId + 1}`} className=\"text-dark\">\n                                                            <p>{p.projectOwnerName}</p>\n                                                        </Link>\n                                                        {/* <p>{p.numberOfAplicants} Application</p> */}\n                                                    </Col>\n                                                    <Col xs=\"6\">\n                                                        <span className=\"text-muted\">Completion Date</span>\n                                                        <p> {moment(p.completeDate).format('DD MMMM YYYY')}</p>\n                                                    </Col>\n                                                    <Col xs=\"6\">\n                                                        <span className=\"text-muted\">Duration</span>\n                                                        <p>{p.duration} hours</p>\n                                                    </Col>\n                                                    <Col xs=\"6\">\n                                                        <span className=\"text-muted\">Sector</span>\n                                                        <p>\n                                                            {p.sectors.map((s, i) => `${s.sector.name}${p.sectors.length === i + 1 ? '' : ','} `)}\n                                                        </p>\n                                                    </Col>\n                                                    <Col xs=\"6\">\n                                                        <span className=\"text-muted\">Budget</span>\n                                                        <p>{convertToRupiah(p.budget)}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                            <Col xs=\"3\">\n                                                {p.projectRequirementSkill.map((s, i) => (\n                                                    <Badge key={i} color={colorSkills[i]} className=\"w-100 text-uppercase font-sm my-1 text-light\">{s.name}</Badge>\n                                                ))}\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            ))}\n                    </Col>\n                    <Col xs=\"12\">\n                        <PaginationComponent />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Project"],"sourceRoot":""}