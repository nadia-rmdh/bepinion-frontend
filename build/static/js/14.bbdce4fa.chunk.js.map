{"version":3,"sources":["utils/formatter.js","views/Menu/Projects/ProjectWall/dummyData.js","views/Menu/Projects/ProjectWall/ProjectWall.js","views/Menu/Projects/ProjectWall/shared.js"],"names":["convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","convertNumberCurrencies","n","ranges","divider","suffix","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","projectName","client","id","name","professional","contractValue","stratingDate","closingDate","keyMilestones","activities","date","meeting","link","startTime","endTime","category","createdAt","createdBy","attendees","additionalAttendees","values","files","replies","status","url","mime","statusDeliverable","draft","pending","rejected","approved","FileList","authUser","useAuthUser","matchRoute","useRouteMatch","deliverableRef","useRef","uploadFile","useState","EditorState","createEmpty","editorState","setEditorState","idActivity","comment","reply","setReply","statusMessage","open","modalVerify","setModalVerify","useSWR","params","projectId","getData","data","error","mutate","loading","useMemo","attendancesOptions","map","pro","role","concat","deliverableData","activityDetails","filter","act","sort","a","b","useFormik","initialValues","content","text","isDraft","onSubmit","setSubmitting","setValues","setErrors","formData","FormData","append","JSON","stringify","f","file","request","put","then","res","toast","success","catch","err","finally","handleSubmit","isSubmitting","handleClickCategory","useCallback","state","pop","createWithContent","ContentState","createFromBlockArray","convertFromHTML","moment","format","console","log","handleChangeAttendance","e","old","handleChangeMeetingEndTime","value","target","handleClickSubmit","handleVerifyDeliverable","handleUploadFile","preventDefault","size","preview","URL","createObjectURL","handleDeleteFile","handleChangeMeetingDate","meetingDetails","style","position","top","right","bottom","left","display","justifyContent","alignItems","Spinner","width","height","Row","Col","xs","className","md","Card","CardBody","dummyData","href","rel","InputGroup","InputGroupAddon","addonType","required","selected","Date","dateFormat","minDate","placeholderText","showTimeInput","autoComplete","onSelect","onChangeRaw","InputGroupText","icon","Table","bordered","v","key","add","Button","color","fileDetails","Badge","cursor","onClick","current","scrollIntoView","behavior","includes","lg","Label","type","mask","onChange","placeholder","inputProps","Input","att","isClearable","isMulti","isValidNewOption","inputValue","test","String","toLowerCase","formatGroupLabel","fontWeight","fontSize","letterSpacing","label","noOptionsMessage","components","DropdownIndicator","IndicatorSeparator","editorStyle","onEditorStateChange","onContentStateChange","draftToHtml","handleEditorChange","fileName","ref","click","disabled","closeMenuOnSelect","activity","utc","local","htmlParser","fileUrl","textDecoration","ir","rows","borderRadius","onKeyPress","blur","post","Modal","isOpen","centered","toggle","ModalBody","minRows","maxFiles","Array","fill","UncontrolledPopover","trigger","placement","popperClassName","PopoverBody","Progress","striped","fileList"],"mappings":"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","file":"static/js/14.bbdce4fa.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'indonesia', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'rb',\n        million: 'jt',\n        billion: 'M',\n        trillion: 'T'\n    },\n    ordinal: function (number) {\n        return number === 1 ? 'er' : 'ème';\n    },\n    currency: {\n        symbol: 'IDR'\n    }\n});\nnumeral.locale('indonesia')\n\nexport function convertToRupiah(angka) {\n    var rupiah = '';\n    var angkarev = angka.toString().split('').reverse().join('');\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';\n\n    return 'IDR ' + rupiah.split('', rupiah.length - 1).reverse().join('');\n}\n\nexport function convertNumberCurrencies(n) {\n    const ranges = [\n        { divider: 1e18, suffix: 'E' },\n        { divider: 1e15, suffix: 'P' },\n        { divider: 1e12, suffix: 'T' },\n        { divider: 1e9, suffix: 'G' },\n        { divider: 1e6, suffix: 'M' },\n        { divider: 1e3, suffix: 'k' }\n    ];\n\n    for (var i = 0; i < ranges.length; i++) {\n        if (n >= ranges[i].divider) {\n            return (n / ranges[i].divider).toString() + ranges[i].suffix;\n        }\n    }\n    return n.toString();\n}\n\nexport function formatDate(date) {\n    let d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (d.toString() === 'Invalid Date') {\n        return null;\n    }\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function dataURIToBlob(dataURI) {\n    const splitDataURI = dataURI.split(',')\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\n\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type: mimeString })\n}\n\nexport function matchWildcard(str, wildcard) {\n    var escapeRegex = (str) => str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n    return new RegExp(\"^\" + wildcard.split(\"*\").map(escapeRegex).join(\".*\") + \"$\").test(str);\n}\n\nexport function convertNumber(numb, format = '0.0a') {\n    return numeral(numb).format(format)\n}\n","export default {\n    projectName: 'Project Name',\n    client: {\n        id: 1,\n        name: 'John Smith',\n    },\n    professional: {\n        id: 2,\n        name: 'John Smurf',\n    },\n    contractValue: 1000000000,\n    stratingDate: '2021-09-07',\n    closingDate: '2021-09-08',\n    keyMilestones: [\n        { activities: 'Meeting Date', date: '2021-09-07' },\n        { activities: 'MoM Submission', date: '2021-09-07' },\n        { activities: 'Submission Approval', date: '2021-09-07' },\n        { activities: 'Payment Date', date: '2021-09-07' },\n        { activities: 'Payment acknowledgement', date: '2021-09-07' },\n    ],\n    meeting: {\n        link: 'https://www.google.com/',\n        date: '2021-09-07',\n        startTime: '09:00:00',\n        endTime: '12:00:00',\n    },\n    activities: [\n        {\n            id: 1,\n            category: 'discussion',\n            createdAt: '2021-09-09 12:30:10',\n            createdBy: {\n                id: 1,\n                name: 'John Smith'\n            },\n            meeting: {\n                date: '2021-09-07',\n                startTime: '09:00:00',\n                endTime: '12:00:00',\n            },\n            attendees: {\n                client: {\n                    id: 1,\n                    name: 'John Smith',\n                },\n                professional: {\n                    id: 2,\n                    name: 'John Smurf',\n                },\n            },\n            additionalAttendees: 'Additional',\n            values: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n            files: [\n                {\n                    id: 1,\n                    name: 'Document 1',\n                    link: 'https://www.google.com/'\n                },\n                {\n                    id: 2,\n                    name: 'Document 2',\n                    link: 'https://www.google.com/'\n                }\n            ],\n            replies: [],\n        },\n        {\n            id: 2,\n            category: 'discussion',\n            createdAt: '2021-09-09 12:30:10',\n            createdBy: {\n                id: 1,\n                name: 'John Smith'\n            },\n            meeting: {\n                date: '2021-09-07',\n                startTime: '09:00:00',\n                endTime: '12:00:00',\n            },\n            attendees: {\n                client: {\n                    id: 1,\n                    name: 'John Smith',\n                },\n                professional: {\n                    id: 2,\n                    name: 'John Smurf',\n                },\n            },\n            additionalAttendees: 'Additional',\n            values: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n            files: [\n                {\n                    id: 1,\n                    name: 'Document 1',\n                    link: 'https://www.google.com/'\n                },\n                {\n                    id: 2,\n                    name: 'Document 2',\n                    link: 'https://www.google.com/'\n                }\n            ],\n            replies: [\n                {\n                    id: 1,\n                    createdBy: {\n                        id: 1,\n                        name: 'John Smith'\n                    },\n                    createdAt: '2021-09-09 12:30:10',\n                    values: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n                },\n                {\n                    id: 1,\n                    createdBy: {\n                        id: 1,\n                        name: 'John Smith'\n                    },\n                    createdAt: '2021-09-09 12:30:10',\n                    values: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n                }\n            ],\n        },\n        {\n            id: 3,\n            category: 'deliverable',\n            createdAt: '2021-09-09 12:30:10',\n            createdBy: {\n                id: 1,\n                name: 'John Smith'\n            },\n            meeting: {\n                date: '2021-09-07',\n                startTime: '09:00:00',\n                endTime: '12:00:00',\n            },\n            attendees: {\n                client: {\n                    id: 1,\n                    name: 'John Smith',\n                },\n                professional: {\n                    id: 2,\n                    name: 'John Smurf',\n                },\n            },\n            additionalAttendees: 'Additional',\n            values: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n            files: [\n                {\n                    id: 1,\n                    name: 'Document 1',\n                    link: 'https://www.google.com/'\n                },\n                {\n                    id: 2,\n                    name: 'Document 2',\n                    link: 'https://www.google.com/'\n                }\n            ],\n            status: 'pending', // pending, approved, resubmit, draft\n            replies: [\n                {\n                    id: 1,\n                    createdBy: {\n                        id: 1,\n                        name: 'John Smith'\n                    },\n                    createdAt: '2021-09-09 12:30:10',\n                    values: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n                },\n                {\n                    id: 1,\n                    createdBy: {\n                        id: 1,\n                        name: 'John Smith'\n                    },\n                    createdAt: '2021-09-09 12:30:10',\n                    values: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n                }\n            ],\n        },\n    ],\n    files: [\n        {\n            id: 1,\n            url: '',\n            mime: 'image',\n        },\n        {\n            id: 2,\n            url: '',\n            mime: 'file',\n        },\n        {\n            id: 3,\n            url: '',\n            mime: 'video',\n        }\n    ]\n}","import React, { Fragment, useCallback, useMemo, useRef, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, ModalBody, Modal, Badge, Input, InputGroup, InputGroupAddon, InputGroupText, Spinner, Table, Label, UncontrolledPopover, PopoverBody, Progress } from \"reactstrap\";\nimport { useFormik } from \"formik\";\nimport Datepicker from \"react-datepicker\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport moment from \"moment\";\nimport dummyData from './dummyData'\nimport { convertToRupiah } from \"../../../../utils/formatter\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { EditorState, ContentState, convertFromHTML } from 'draft-js';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport draftToHtml from 'draftjs-to-html';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport Select from \"react-select\";\nimport CreatableSelect from 'react-select/creatable'\nimport { toast } from \"react-toastify\";\nimport request from \"../../../../utils/request\";\nimport htmlParser from \"html-react-parser\";\nimport { validateEmail } from './shared';\nimport ReactInputMask from \"react-input-mask\";\nimport { useAuthUser } from \"../../../../store\";\n\nconst statusDeliverable = {\n    draft: 'Draft',\n    pending: 'For Review',\n    rejected: 'To Revise',\n    approved: 'Approved',\n}\n\nexport default () => {\n    const authUser = useAuthUser();\n    const matchRoute = useRouteMatch();\n    const deliverableRef = useRef();\n    const uploadFile = useRef(null)\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\n    const [reply, setReply] = useState({\n        idActivity: '',\n        comment: '',\n    })\n    const [modalVerify, setModalVerify] = useState({ id: 0, status: '', statusMessage: '', open: false });\n    const { data: getData, error, mutate } = useSWR(() => `v1/project/${matchRoute.params.projectId}/activity`);\n    const loading = !getData || error\n    const data = useMemo(() => {\n        return getData?.data?.data ?? [];\n    }, [getData]);\n\n    const attendancesOptions = useMemo(() => {\n        const attendances = data?.professional?.map(pro => ({ name: pro.name, id: pro.id, role: 'professional' })) ?? [];\n        return attendances.concat([{ name: data?.client?.name, id: data?.client?.id, role: 'client' }]);\n    }, [data])\n\n    const deliverableData = useMemo(() => {\n        return data?.activityDetails?.filter(act => act.category === 'deliverable').sort((a, b) => a.id - b.id) ?? null\n    }, [data])\n\n    const { values, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: {\n            idActivity: 0,\n            category: 'discussion',\n            content: {},\n            text: '',\n            isDraft: 'false',\n            files: [],\n        },\n        // validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors, setValues }) => {\n            setSubmitting(true)\n            let formData = new FormData()\n            if (values.idActivity) {\n                formData.append('idActivity', values.idActivity)\n            }\n            formData.append('category', values.category)\n            formData.append('content', JSON.stringify(values.content))\n            formData.append('text', values.text)\n            formData.append('isDraft', values.isDraft)\n            if (values.files.length > 0) {\n                values.files.filter(f => !f.id).map((file, i) => {\n                    return formData.append('file' + (i + 1), file.file, file.file.name)\n                })\n            }\n\n            if (values.idActivity) {\n                request.put(`v1/project/${matchRoute.params.projectId}/activity`, formData)\n                    .then(res => {\n                        toast.success('Create Discussion Successfully')\n                        setValues({\n                            idActivity: 0,\n                            category: 'discussion',\n                            content: {},\n                            text: '',\n                            isDraft: 'false',\n                            files: [],\n                        })\n                        setEditorState(EditorState.createEmpty())\n                        mutate()\n                    })\n                    .catch(err => {\n                        toast.error('Create Discussion Failed.');\n                    })\n                    .finally(() => {\n                        setSubmitting(false)\n                    })\n            } else {\n                request.put(`v1/project/${matchRoute.params.projectId}/activity`, formData)\n                    .then(res => {\n                        toast.success('Create Discussion Successfully')\n                        setValues({\n                            idActivity: 0,\n                            category: 'discussion',\n                            content: {},\n                            text: '',\n                            isDraft: 'false',\n                            files: [],\n                        })\n                        setEditorState(EditorState.createEmpty())\n                        mutate()\n                    })\n                    .catch(err => {\n                        toast.error('Create Discussion Failed.');\n                    })\n                    .finally(() => {\n                        setSubmitting(false)\n                    })\n            }\n        }\n    })\n\n    const handleClickCategory = useCallback((category) => {\n        if (category === 'discussion') {\n            setValues((state) => ({ ...state, category }))\n        } else {\n            if (deliverableData?.pop().status === 'draft') {\n                setValues({ idActivity: deliverableData.pop().id, category, content: { attendees: attendancesOptions, additionalAttendees: deliverableData.pop().content.additionalAttendees, meeting: deliverableData.pop().content.meeting }, text: deliverableData.pop().text, isDraft: 'true', files: deliverableData.pop().files })\n                setEditorState(EditorState.createWithContent(\n                    ContentState.createFromBlockArray(\n                        convertFromHTML(deliverableData.pop().text)\n                    )\n                ))\n            } else {\n                setValues((state) => ({ ...state, idActivity: 0, category, content: { attendees: attendancesOptions, additionalAttendees: [], meeting: { date: moment().format('DD MMMM YYYY'), startTime: moment().format('HH:mm'), endTime: '' } } }))\n            }\n        }\n    }, [setValues, attendancesOptions, deliverableData])\n\n    console.log(values)\n    const handleChangeAttendance = useCallback((e) => {\n        setValues(old => ({ ...old, content: { ...old.content, additionalAttendees: e ?? [] } }))\n    }, [setValues])\n\n    const handleChangeMeetingEndTime = useCallback((e) => {\n        const { value } = e.target;\n        setValues(old => ({ ...old, content: { ...old.content, meeting: { ...old.content.meeting, endTime: value } } }))\n    }, [setValues])\n\n    const handleEditorChange = (editorState) => {\n        setValues(state => ({ ...state, text: draftToHtml(editorState) }))\n    }\n\n    const handlePostReply = () => {\n        request.post(`v1/project/${matchRoute.params.projectId}/activity-reply`, reply)\n            .then(res => {\n                toast.success('Reply Successfully')\n                setReply({\n                    idActivity: '',\n                    comment: '',\n                })\n                mutate()\n            })\n            .catch(err => {\n                toast.error('Reply Failed');\n            })\n    }\n\n    const handleClickSubmit = useCallback(async (e) => {\n        await setValues(old => ({ ...old, isDraft: e }))\n        handleSubmit()\n    }, [setValues, handleSubmit])\n\n    const handleVerifyDeliverable = useCallback((id, status, statusMessage) => {\n        request.put(`v1/project/${matchRoute.params.projectId}/activity-status`, {\n            idActivity: id,\n            status,\n            statusMessage\n        })\n            .then(res => {\n                toast.success('Verify Deliverable Successfully')\n                mutate()\n            })\n            .catch(err => {\n                toast.error('Verify Deliverable Failed.');\n            })\n            .finally(() => {\n                setModalVerify({ id: 0, status: '', statusMessage: '', open: false })\n            })\n    }, [matchRoute.params.projectId, mutate])\n\n    const handleUploadFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setValues(old => ({ ...old, files: [...old.files, { preview: URL.createObjectURL(files[0]), file: files[0] }] }))\n    }, [setValues])\n\n    const handleDeleteFile = useCallback((preview) => {\n        setValues(old => ({ ...old, files: old.files.filter(file => file.preview !== preview) }))\n    }, [setValues])\n\n    const handleChangeMeetingDate = useCallback((e) => {\n        request.put(`v1/project/${matchRoute.params.projectId}/activity-meeting`, {\n            meetingDetails: {\n                link: data.meetingDetails.link,\n                date: moment(e)\n            }\n        })\n            .then(res => {\n                // toast.success('Create Discussion Successfully')\n                mutate()\n            })\n        // .catch(err => {\n        //     toast.error('Create Discussion Failed.');\n        // })\n    }, [data, matchRoute.params.projectId, mutate])\n\n    if (loading) {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                    // background: \"rgba(255,255,255, 0.5)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Spinner style={{ width: 48, height: 48 }} />\n            </div>\n        )\n    }\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <div className=\"font-xl font-weight-bold mb-4\">{data.projectName}</div>\n            </Col>\n            <Col xs=\"12\" md=\"4\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div><span className=\"text-muted\">Client</span> {data.client.name}</div>\n                                <div><span className=\"text-muted\">Consultant</span> {data?.professional[0]?.name}</div>\n                                <div><span className=\"text-muted\">Contract value</span> {convertToRupiah(dummyData.contractValue)}</div>\n                                <div><span className=\"text-muted\">Starting Date</span> {moment(data.stratingDate).format('DD MMMM YYYY')}</div>\n                                <div><span className=\"text-muted\">Closing Date</span> {moment(data.closingDate).format('DD MMMM YYYY')}</div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div className=\"font-lg font-weight-bold mb-3\">Meeting</div>\n                                <div className=\"text-muted\">Meeting Link <a href={data.meetingDetails.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"font-weight-bold ml-1\">Click here</a> </div>\n                                <div className=\"mt-2\">\n                                    <div className=\"text-muted mb-1\">Meeting Date</div>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\" className=\"w-100\">\n                                            <Datepicker\n                                                required\n                                                name=\"startDate\"\n                                                selected={new Date(data?.meetingDetails?.date ?? moment())}\n                                                dateFormat=\"dd MMMM yyyy hh:mm\"\n                                                minDate={new Date()}\n                                                placeholderText=\"Select a date\"\n                                                className=\"form-control\"\n                                                showTimeInput\n                                                autoComplete=\"off\"\n                                                onSelect={handleChangeMeetingDate}\n                                                onChangeRaw={(e) => e.preventDefault()}\n                                            />\n                                            <InputGroupText>\n                                                <FontAwesomeIcon icon=\"calendar-alt\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\" md=\"8\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div className=\"font-lg font-weight-bold mb-3\">Key Milestone</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Table bordered className=\"text-center\">\n                                    <thead>\n                                        <tr>\n                                            <th>Activities</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {dummyData.keyMilestones.map((v, i) =>\n                                            <tr key={i}>\n                                                <td>{v.activities}</td>\n                                                <td>{moment(v.date).add(i, 'days').format('DD MMMM YYYY')}</td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-between align-items-center\">\n                                <Button color=\"secondary\" className=\"mr-2 text-light\" id=\"popover-file-list\">Project Files</Button>\n                                <FileList data={data?.fileDetails} />\n                                <div>\n                                    <div className=\"mb-1 text-muted\">Status of deliverable</div>\n                                    <div className=\"mb-3 text-center\">\n                                        <Badge\n                                            color={deliverableData?.filter(act => act.status !== 'draft').pop().status === 'approved'\n                                                ? 'success'\n                                                : (deliverableData?.filter(act => act.status !== 'draft').pop().status === 'rejected' ? 'danger'\n                                                    : (deliverableData?.filter(act => act.status !== 'draft').pop().status === 'pending' ? 'warning'\n                                                        : 'secondary'))}\n                                            className=\"font-lg text-light text-uppercase\"\n                                            style={{ cursor: \"pointer\" }}\n                                            onClick={() => deliverableRef.current.scrollIntoView({ behavior: \"smooth\" })}\n                                        >\n                                            {statusDeliverable[deliverableData?.filter(act => act.status !== 'draft').pop().status] ?? 'Draft'}\n                                        </Badge>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <Button color={`${values?.category === 'discussion' ? 'primary' : 'light'}`} className=\"text-dark mr-3\" onClick={() => handleClickCategory('discussion')}>Discussion</Button>\n                                {authUser.role === 'professional' && ['draft', 'rejected'].includes(deliverableData?.status ?? 'draft') && <Button color={`${values?.category === 'deliverable' ? 'primary' : 'light'}`} className=\"text-dark\" onClick={() => handleClickCategory('deliverable')}>Deliverable</Button>}\n                            </Col>\n                            {values.category === 'deliverable' &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Meeting Date</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                            {values?.content?.meeting?.date}\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Meeting Time</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                            <InputGroup>\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <InputGroupText className=\"bg-transparent border-0 pl-0\">\n                                                        {values?.content?.meeting?.startTime} -\n                                                    </InputGroupText>\n                                                    <ReactInputMask type=\"text\" mask=\"99:99\" value={values?.content?.meeting?.endTime} onChange={handleChangeMeetingEndTime} placeholder=\"Example 08:00\">\n                                                        {(inputProps) => <Input {...inputProps} />}\n                                                    </ReactInputMask>\n                                                </InputGroupAddon>\n                                            </InputGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Attendees</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex\">\n                                            {values?.content?.attendees?.map((att, i) => (\n                                                <div key={i}> {att.name}{values?.content?.attendees.length === i + 1 ? '' : \", \"}</div>\n                                            ))}\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Additional attendees</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <CreatableSelect\n                                                isClearable\n                                                isMulti\n                                                placeholder=\"Input attendees email...\"\n                                                value={values?.content?.additionalAttendees}\n                                                isValidNewOption={(inputValue) => validateEmail(inputValue)}\n                                                onChange={handleChangeAttendance}\n                                                formatGroupLabel={(data) => <div style={{ display: 'flex', alignItems: 'center' }}><span style={{ fontWeight: 'bold', fontSize: '10px', letterSpacing: '1px' }} className=\"text-muted\">{data.label}</span></div>}\n                                                noOptionsMessage={(inputValue) => <span>Input attendees email</span>}\n                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                            <Col xs=\"12\">\n                                <Editor\n                                    editorState={editorState}\n                                    editorStyle={{ height: '300px' }}\n                                    onEditorStateChange={(editorState) => setEditorState(editorState)}\n                                    onContentStateChange={(editorState) => handleEditorChange(editorState)}\n                                />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-3\">\n                                {values?.files?.map((file, i) => (\n                                    <Fragment key={i}>\n                                        <div className=\"rounded border border-dark d-inline p-1\">\n                                            <FontAwesomeIcon icon=\"times\" color=\"#f86c6b\" className=\"mr-1\" onClick={() => handleDeleteFile(file.preview)} style={{ cursor: \"pointer\" }} /> {file?.file?.name ?? file.fileName}\n                                        </div>\n                                        <div className=\"mb-3\"></div>\n                                    </Fragment>\n                                ))}\n                            </Col>\n                            <Col xs=\"12\">\n                                <input type='file' ref={uploadFile} style={{ display: 'none' }} onChange={(e) => handleUploadFile(e)} />\n                                {/* accept=\"image/*,video/mp4,video/x-m4v,video/*,application/*\" */}\n                                <Button color=\"info\" className=\"text-light\" onClick={() => uploadFile.current.click()}> <FontAwesomeIcon icon=\"upload\" /> Attachment</Button>\n                                <Button color=\"primary\" className=\"float-right\" onClick={() => handleClickSubmit('false')} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Post\"}</Button>\n                                {values.category === 'deliverable' &&\n                                    <Button color=\"secondary\" className=\"float-right mr-2 text-light\" onClick={() => handleClickSubmit('true')} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Draft\"}</Button>\n                                }\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Row>\n                    <Col xs=\"12\" md=\"3\">\n                        <div className=\"mb-1 text-muted\">Category</div>\n                        <div className=\"mb-3\">\n                            <Select\n                                closeMenuOnSelect={false}\n                                isClearable\n                                placeholder=\"Choose a category...\"\n                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                            />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                        <div className=\"mb-1 text-muted\">Date Sort</div>\n                        <div className=\"mb-3\">\n                            <Select\n                                closeMenuOnSelect={false}\n                                isClearable\n                                placeholder=\"Choose a date sort...\"\n                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                            />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\" className=\"justify-content-end\">\n                        <div className=\"mb-1 text-muted\">&nbsp;</div>\n                        <div className=\"mb-3\">\n                            <Input type=\"text\" placeholder=\"Search...\" />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\">\n                        {data.activityDetails.length <= 0 &&\n                            <Card className=\"shadow-sm\">\n                                <CardBody className=\"position-relative\">\n                                    <div style={{ width: '100%', height: '500px' }} className=\"d-flex align-items-center justify-content-center text-muted\"> No Activities </div>\n                                </CardBody>\n                            </Card>\n                        }\n                        {data.activityDetails.filter(act => act.status !== 'draft').sort((a, b) => a.id - b.id).map((activity, i) => (\n                            <Card className=\"shadow-sm\" key={i}>\n                                <CardBody className=\"position-relative\">\n                                    <div className=\"position-absolute\" style={{ right: 20 }}>\n                                        <Badge className=\"font-lg text-uppercase text-light\" color={`${activity.category === 'document' ? 'danger' : (activity.category === 'discussion' ? 'warning' : 'primary')}`}>{activity.category}</Badge>\n                                    </div>\n                                    <div className=\"font-lg font-weight-bold mb-1\">{activity.createdBy.name}</div>\n                                    <div className=\"text-muted mb-3\">{moment.utc(activity.createdAt).local().format('DD MMMM YYYY hh:mm')}</div>\n                                    {activity.category === 'deliverable' &&\n                                        <div>\n                                            <Row className=\"my-1\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label>Meeting Date</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                                    {activity?.content?.meeting?.date}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-1\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label>Meeting Time</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex align-items-center justify-content-between\">\n                                                    {activity?.content?.meeting?.startTime} - {activity?.content?.meeting?.endTime}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-1\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label>Attendees</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"d-flex\">\n                                                    {activity?.content?.attendees?.map((att, i) => (\n                                                        <div key={i}> {att.name}<span className=\"text-capitalize\">({att.role})</span>{activity?.content?.attendees.length === i + 1 ? '' : ','}</div>\n                                                    ))}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-1\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label>Additional attendees</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    {activity?.content?.additionalAttendees.map(attendees => (attendees.label))}\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    }\n                                    <div className=\"mb-3 activity-text\">{htmlParser(activity.text)}</div>\n                                    <div className=\"mb-4\">\n                                        {activity?.files?.map((file, i) => (\n                                            <Fragment key={i}>\n                                                <div className=\"rounded border d-inline p-1\">\n                                                    <a href={file.fileUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-dark\" style={{ textDecoration: \"none\" }}>{file.fileName}</a>\n                                                </div>\n                                                <div className=\"mb-3\"></div>\n                                            </Fragment>\n                                        ))}\n                                    </div>\n                                    {activity.status === 'rejected' &&\n                                        <Card className=\"border-danger\">\n                                            <CardBody>\n                                                <div className=\"font-weight-bold\">Feedback</div>\n                                                <div>{activity.statusMessage ? activity.statusMessage : '-'}</div>\n                                            </CardBody>\n                                        </Card>\n                                    }\n                                    {activity.status === 'pending' && authUser.role !== 'professional' &&\n                                        <div className=\"mb-3 d-flex justify-content-end\">\n                                            <Button color=\"warning\" onClick={() => setModalVerify({ id: activity.id, status: 'rejected', statusMessage: '', open: true })}>To Revise</Button>\n                                            <Button color=\"success\" className=\"mx-2\" onClick={() => setModalVerify({ id: activity.id, status: 'approved', statusMessage: '', open: true })}>Approve</Button>\n                                            <Button color=\"secondary\">Download</Button>\n                                        </div>\n                                    }\n                                    {activity.content?.replies?.length > 0 &&\n                                        <div className=\"pl-5\">\n                                            {activity.content?.replies?.map((reply, ir) => (\n                                                <Card className=\"my-1\" key={ir}>\n                                                    <CardBody className=\"p-3\">\n                                                        <div className=\"font-lg font-weight-bold mb-1\">{reply.createdBy.name}</div>\n                                                        <div className=\"text-muted mb-3\">{moment(reply.createdAt).format('DD MMMM YYYY hh:mm')}</div>\n                                                        <div>{reply.comment}</div>\n                                                    </CardBody>\n                                                </Card>\n                                            ))}\n                                        </div>\n                                    }\n                                    <div className={`${activity.content?.replies?.length > 0 && 'pl-5'}`}>\n                                        <TextareaAutosize\n                                            rows=\"3\"\n                                            name=\"comment\" id=\"comment\"\n                                            style={{ borderRadius: \"10px\" }}\n                                            className=\"form-control\"\n                                            placeholder=\"Type your reply...\"\n                                            value={activity.id === reply.idActivity ? reply.comment : ''}\n                                            onChange={(e) => setReply({ idActivity: activity.id, comment: e.target.value })}\n                                            onKeyPress={(e) => {\n                                                if (e.key === 'Enter') {\n                                                    e.target.blur()\n                                                    handlePostReply()\n                                                }\n                                            }}\n                                        />\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        ))}\n                        <div ref={deliverableRef}></div>\n                        <Modal isOpen={modalVerify.open} centered toggle={() => setModalVerify({ id: 0, status: '', statusMessage: '', open: false })}>\n                            <ModalBody className=\"p-5\">\n                                <Row>\n                                    <Col xs=\"12\">\n                                        <div className=\"mb-2\">\n                                            {modalVerify.status === 'approved'\n                                                ? \"By clicking the 'Approve' button, you confirm that the submission has met your standards and agree to let the system proceed with the payment.\"\n                                                : \"Are you sure you want to 'Revise' this deliverable\"\n                                            }\n                                        </div>\n                                    </Col>\n                                    {modalVerify.status === 'rejected' &&\n                                        <Col xs=\"12\">\n                                            <TextareaAutosize\n                                                minRows={3}\n                                                style={{ borderRadius: \"10px\" }}\n                                                className=\"form-control\"\n                                                placeholder=\"Type your message...\"\n                                                onChange={(e) => setModalVerify(state => ({ ...state, statusMessage: e.target.value }))}\n                                            />\n                                        </Col>\n                                    }\n                                    <Col xs=\"12\" className=\"d-flex justify-content-end mt-5\">\n                                        <Button color=\"secondary\" className=\"mr-2\" onClick={() => setModalVerify({ id: 0, status: '', statusMessage: '', open: false })}>Cancel</Button>\n                                        <Button color=\"primary\" className=\"text-capitalize\" disabled={isSubmitting} onClick={() => handleVerifyDeliverable(modalVerify.id, modalVerify.status, modalVerify.statusMessage)}>{modalVerify.status}</Button>\n                                    </Col>\n                                </Row>\n                            </ModalBody>\n                        </Modal>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nconst FileList = ({ data }) => {\n    const maxFiles = Array(9).fill();\n\n    return (\n        <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target=\"popover-file-list\" popperClassName=\"popover-file-list\">\n            <PopoverBody>\n                <Row className=\"p-2\">\n                    <Col xs=\"8\">\n                        <div className=\"font-weight-bold\">Project Files</div>\n                    </Col>\n                    <Col xs=\"4\">\n                        <Progress striped value={(data?.fileList?.length ?? 0) / 9 * 100}>\n                            <div className=\"text-dark text-center\">Storage Capacity {data?.fileList?.length}/9</div>\n                        </Progress>\n                    </Col>\n                    <Col xs=\"12\" className=\"my-3\">\n                        <Row>\n                            {maxFiles.map((file, i) => (\n                                <Col xs=\"4\" key={i}>\n                                    <a href={data?.fileList[i]?.fileUrl ?? ''} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-dark\">\n                                        {i + 1}. {data?.fileList[i]?.fileName}\n                                    </a>\n                                </Col>\n                            ))}\n                        </Row>\n                    </Col>\n                    <Col xs=\"12\">\n                        <div className=\"text-muted\">Your project storage is limited at maximum 9 files or XX MB</div>\n                    </Col>\n                </Row>\n            </PopoverBody>\n        </UncontrolledPopover>\n    )\n}\n","export const iconClassByOptionType = {\n    'personnel': 'icon-user text-success',\n    'unit'     : 'icon-organization text-info',\n    'job'      : 'icon-briefcase text-pink',\n    'email'    : 'icon-envelope text-muted',\n    'all'      : 'icon-people text-dark',\n};\n\nexport function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n"],"sourceRoot":""}