{"version":3,"sources":["hooks/usePagination.js","views/DataDummy/SkillsDummy.js","views/Menu/Projects/Sorts/SkillMatchSort.js","utils/formatter.js","views/DataDummy/SkillsColorsDummy.js","../node_modules/reactstrap/es/CardFooter.js","views/DataDummy/ProfessionalsDummy.js","views/Menu/Projects/ProjectProfessionals/ProjectProfessionalsContext.js","views/Menu/Projects/ProjectProfessionals/Filters/SkillsFilter.js","views/Menu/Projects/ProjectProfessionals/Filters/SectorsFilter.js","views/Menu/Projects/ProjectProfessionals/Filters/ExperienceFilter.js","views/Menu/Projects/ProjectProfessionals/Sorts/YearExperienceSort.js","views/Menu/Projects/ProjectProfessionals/Sorts/CostSort.js","views/Menu/Projects/ProjectProfessionals/Filters/ResetFilter.js","views/Menu/Projects/ProjectProfessionals/ProjectProfessionalsList.js"],"names":["usePagination","totalData","defaultPage","totalPage","onChangedCurrentPage","useState","currentPage","setCurrentPage","useEffect","next","useCallback","prevState","prev","goto","page","PaginationComponent","useMemo","props","CustomHookPaginationComponent","handleFirst","handleLast","handleNext","handlePrev","handleGoto","count","className","disabled","first","onClick","previous","active","last","label","value","SkillMatchSort","useFilterProjectContext","filter","setFilter","isSearchable","options","onChange","e","state","sortSkill","handleChange","components","DropdownIndicator","IndicatorSeparator","convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","CardFooter","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","id","professionalName","experience","cost","education","degree","field","sector","name","skills","skillsMatch","filterProjectProfessionalsContext","createContext","setFilterProjectProfessionalsContext","FilterProjectProfessionalsProvider","pagination","sectors","exp","sortExp","sortCost","sortSkillsMatch","filterProjectProfessionalsCtx","setFilterProjectProfessionalsCtx","Provider","children","useFilterProjectProfessionalsContext","useContext","SkillsFilter","closeMenuOnSelect","isClearable","isMulti","placeholder","handleChangeSkills","SectorsFilter","handleChangeSectors","ExperienceFilter","target","checked","InputGroup","InputGroupAddon","addonType","InputGroupText","CustomInput","type","YearExperienceSort","CostSort","ResetFilter","Button","color","ProfessionalsList","data","modalApply","setModalApply","useFormik","initialValues","validationSchema","Yup","shape","min","onSubmit","values","setSubmitting","setErrors","touched","errors","handleSubmit","setValues","Row","Col","xs","md","Card","CardBody","map","s","Badge","key","skillsColours","style","fontSize","whiteSpace","onClickAward","Modal","isOpen","centered","toggle","ModalBody","comparedData","setComparedData","filteredData","ProfessionalsDummy","item","contain","includes","handleChangeCurrentPage","resultsData","handleCompareProfessionals","p","yearExperience","d","handleClearOne","handleClearAll","lg","onClear","DefaultImageUser","text","size","to","backgroundColor","find","c","ProfessionalsCompare","lineHeight","top","right","icon"],"mappings":"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","file":"static/js/7.d3da54f4.chunk.js","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n\nexport default function usePagination(totalData, defaultPage, totalPage, onChangedCurrentPage) {\n    const [currentPage, setCurrentPage] = useState(defaultPage);\n\n    useEffect(() => onChangedCurrentPage(currentPage), [currentPage, onChangedCurrentPage])\n\n    const next = useCallback(() => {\n        setCurrentPage(prevState => prevState === (totalPage - 1) ? prevState : prevState + 1);\n    }, [totalPage])\n\n    const prev = useCallback(() => {\n        setCurrentPage(prevState => prevState === 0 ? prevState : prevState - 1);\n    }, []);\n\n    const goto = useCallback((page) => {\n        setCurrentPage(page);\n    }, [])\n\n    const PaginationComponent = useMemo(() => {\n        return (props) => <CustomHookPaginationComponent\n            handleFirst={() => goto(0)}\n            handleLast={() => goto(totalPage - 1)}\n            handleNext={next}\n            handlePrev={prev}\n            handleGoto={goto}\n            currentPage={currentPage}\n            count={totalPage}\n        />;\n    }, [goto, next, prev, currentPage, totalPage]);\n    return { currentPage, next, prev, goto, totalPage, PaginationComponent };\n}\n\nconst CustomHookPaginationComponent = ({ handleFirst, handleLast, handleNext, handlePrev, handleGoto, count, currentPage }) => {\n    return (\n        <Pagination className=\"pagination-hub d-flex justify-content-center\">\n            {handleFirst && <PaginationItem disabled={currentPage - 1 >= 0 ? false : true}>\n                <PaginationLink first onClick={handleFirst} disabled={currentPage === 0} />\n            </PaginationItem>}\n            {handlePrev && <PaginationItem disabled={currentPage - 1 >= 0 ? false : true}>\n                <PaginationLink previous onClick={handlePrev} disabled={currentPage === 0} />\n            </PaginationItem>}\n            {currentPage - 3 >= 0 &&\n                <PaginationItem disabled>\n                    <PaginationLink className=\"text-dark\">...</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage - 2 >= 0 &&\n                <PaginationItem className=\"d-none d-md-block\">\n                    <PaginationLink onClick={() => handleGoto(currentPage - 2)}>{currentPage - 1}</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage - 1 >= 0 &&\n                <PaginationItem>\n                    <PaginationLink onClick={() => handleGoto(currentPage - 1)}>{currentPage}</PaginationLink>\n                </PaginationItem>\n            }\n            <PaginationItem active disabled>\n                <PaginationLink onClick={() => handleGoto(currentPage)}>{currentPage + 1}</PaginationLink>\n            </PaginationItem>\n            {currentPage + 1 < count &&\n                <PaginationItem>\n                    <PaginationLink onClick={() => handleGoto(currentPage + 1)}>{currentPage + 2}</PaginationLink>\n                </PaginationItem>\n            }\n            {currentPage + 2 < count &&\n                <PaginationItem className=\"d-none d-md-block\">\n                    <PaginationLink onClick={() => handleGoto(currentPage + 2)}>{currentPage + 3}</PaginationLink>\n                </PaginationItem>\n            }\n            {/* {[...Array(count).keys()].map(index => (\n                <PaginationItem key={index} active={currentPage === index} disabled={currentPage === index}>\n                    <PaginationLink onClick={() => handleGoto(index)}>{index + 1}</PaginationLink>\n                </PaginationItem>\n            ))} */}\n            {currentPage + 3 < count &&\n                <PaginationItem disabled>\n                    <PaginationLink className=\"text-dark\">...</PaginationLink>\n                </PaginationItem>\n            }\n            <PaginationItem disabled={currentPage + 1 < count ? false : true}>\n                <PaginationLink next onClick={handleNext} disabled={currentPage === count - 1} />\n            </PaginationItem>\n            <PaginationItem disabled={currentPage + 1 < count ? false : true}>\n                <PaginationLink last onClick={handleLast} disabled={currentPage === count - 1} />\n            </PaginationItem>\n        </Pagination>\n    )\n}","export default [\n    { label: 'PHP', value: '1' },\n    { label: 'Phyton', value: '2' },\n    { label: 'Javascript', value: '3' },\n    { label: 'Flutter', value: '4' },\n    { label: 'Golang', value: '5' },\n    { label: 'Laravel', value: '6' },\n    { label: 'React JS', value: '7' },\n    { label: 'Node JS', value: '8' },\n    { label: 'React Native', value: '9' },\n]","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectContext } from '../ProjectContext';\n\nfunction SkillMatchSort() {\n    const [filter, setFilter] = useFilterProjectContext()\n\n    const skill = [\n        { label: 'Lowest to Highest', value: 'lowest' },\n        { label: 'Highest to Lowest', value: 'highest' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortSkill: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Skill Match</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={skill}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortSkill} />\n        </>\n    )\n}\n\nexport default SkillMatchSort","import numeral from 'numeral'\n\nnumeral.register('locale', 'indonesia', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'rb',\n        million: 'jt',\n        billion: 'M',\n        trillion: 'T'\n    },\n    ordinal: function (number) {\n        return number === 1 ? 'er' : 'ème';\n    },\n    currency: {\n        symbol: 'IDR'\n    }\n});\nnumeral.locale('indonesia')\n\nexport function convertToRupiah(angka) {\n    var rupiah = '';\n    var angkarev = angka.toString().split('').reverse().join('');\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';\n\n    return 'IDR ' + rupiah.split('', rupiah.length - 1).reverse().join('');\n}\n\nexport function formatDate(date) {\n    let d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (d.toString() === 'Invalid Date') {\n        return null;\n    }\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function dataURIToBlob(dataURI) {\n    const splitDataURI = dataURI.split(',')\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\n\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type: mimeString })\n}\n\nexport function matchWildcard(str, wildcard) {\n    var escapeRegex = (str) => str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n    return new RegExp(\"^\" + wildcard.split(\"*\").map(escapeRegex).join(\".*\") + \"$\").test(str);\n}\n\nexport function convertNumber(numb, format = '0.0a') {\n    return numeral(numb).format(format)\n}\n","export default [\n    'success',\n    'danger',\n    'warning',\n    'secondary',\n    'info',\n    'primary',\n    'light',\n    'dark'\n]","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","export default [\n    { id: 1, professionalName: 'Leonard', experience: 1, cost: 5000000, education: { degree: 'master', field: 'Engineering' }, sector: { id: 'sector_1', name: 'Sector 1' }, skills: ['php', 'phyton', 'javascript', 'flutter', 'golang', 'reactnative'], skillsMatch: 70 },\n    { id: 2, professionalName: 'Taro', experience: 1, cost: 2000000, education: { degree: 'master', field: 'Engineering' }, sector: { id: 'sector_3', name: 'Sector 3' }, skills: ['php', 'phyton', 'javascript', 'reactjs', 'nodejs', 'reactnative'], skillsMatch: 68 },\n    { id: 3, professionalName: 'Toronto', experience: 1, cost: 7000000, education: { degree: 'master', field: 'Construction Management' }, sector: { id: 'sector_2', name: 'Sector 2' }, skills: ['php', 'phyton', 'javascript', 'flutter', 'golang', 'laravel'], skillsMatch: 55 },\n    { id: 4, professionalName: 'Jeki', experience: 1, cost: 8000000, education: { degree: 'bachelor', field: 'Construction Management' }, sector: { id: 'sector_2', name: 'Sector 2' }, skills: ['nodejs', 'reactnative'], skillsMatch: 40 },\n    { id: 5, professionalName: 'Japoy', experience: 1, cost: 7000000, education: { degree: 'master', field: 'Finance' }, sector: { id: 'sector_2', name: 'Sector 2' }, skills: ['nodejs', 'reactnative'], skillsMatch: 20 },\n    { id: 6, professionalName: 'Deth', experience: 1, cost: 9500000, education: { degree: 'master', field: 'Finance' }, sector: { id: 'sector_2', name: 'Sector 2' }, skills: ['nodejs', 'reactnative'], skillsMatch: 34 },\n    { id: 7, professionalName: 'Zack', experience: 1, cost: 9500000, education: { degree: 'bachelor', field: 'Engineering' }, sector: { id: 'sector_2', name: 'Sector 2' }, skills: ['nodejs', 'reactnative'], skillsMatch: 35 },\n    { id: 8, professionalName: 'Joe', experience: 1, cost: 3500000, education: { degree: 'bachelor', field: 'Medical' }, sector: { id: 'sector_2', name: 'Sector 2' }, skills: ['nodejs', 'reactnative'], skillsMatch: 34 },\n    { id: 9, professionalName: 'Zai ', experience: 1, cost: 3500000, education: { degree: 'master', field: 'Engineering' }, sector: { id: 'sector_2', name: 'Sector 2' }, skills: ['nodejs', 'reactnative'], skillsMatch: 43 },\n    { id: 10, professionalName: 'Anna ', experience: 1, cost: 5000000, education: { degree: 'bachelor', field: 'Law' }, sector: { id: 'sector_2', name: 'Sector 2' }, skills: ['nodejs', 'reactnative'], skillsMatch: 33 },\n]","import React, { createContext } from 'react'\nimport { useState } from 'react'\nimport { useContext } from 'react'\n\nconst filterProjectProfessionalsContext = createContext()\nconst setFilterProjectProfessionalsContext = createContext()\n\nexport default function FilterProjectProfessionalsProvider(props) {\n    const [filterProjectProfessionalsCtx, setFilterProjectProfessionalsCtx] = useState({\n        pagination: 0,\n        skills: [],\n        sectors: [],\n        exp: [],\n        degree: [],\n        education: [],\n        sortExp: { label: 'Shortest to Longest', value: 'shortest' },\n        sortCost: { label: 'Lowest to Highest', value: 'lowest' },\n        sortSkillsMatch: { label: 'Lowest to Highest', value: 'lowest' },\n    })\n\n    return (\n        <setFilterProjectProfessionalsContext.Provider value={setFilterProjectProfessionalsCtx}>\n            <filterProjectProfessionalsContext.Provider value={filterProjectProfessionalsCtx}>\n                {props.children}\n            </filterProjectProfessionalsContext.Provider>\n        </setFilterProjectProfessionalsContext.Provider>\n    )\n}\n\n\nexport const useFilterProjectProfessionalsContext = () => {\n    return [useContext(filterProjectProfessionalsContext), useContext(setFilterProjectProfessionalsContext)]\n}","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\n\nfunction SkillsFilter() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const skills = [\n        { label: 'PHP', value: '1' },\n        { label: 'Phyton', value: '2' },\n        { label: 'Javascript', value: '3' },\n        { label: 'Flutter', value: '4' },\n        { label: 'Golang', value: '5' },\n        { label: 'Laravel', value: '6' },\n        { label: 'React JS', value: '7' },\n        { label: 'Node JS', value: '8' },\n        { label: 'React Native', value: '9' },\n    ]\n\n    const handleChangeSkills = (e) => {\n        setFilter(state => ({ ...state, skills: e ?? [] }))\n    }\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Skills Requirements</div>\n            <div className=\"px-3\">\n                <Select\n                    closeMenuOnSelect={false}\n                    options={skills}\n                    isClearable\n                    isMulti\n                    placeholder=\"Choose some skills...\"\n                    onChange={(e) => handleChangeSkills(e)}\n                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                    value={filter.skills} />\n            </div>\n        </>\n    )\n}\n\nexport default SkillsFilter","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\n\nfunction SectorsFilter() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const sectors = [\n        { label: 'Sector 1', value: 'sector_1' },\n        { label: 'Sector 2', value: 'sector_2' },\n        { label: 'Sector 3', value: 'sector_3' },\n        { label: 'Sector 4', value: 'sector_4' },\n        { label: 'Sector 5', value: 'sector_5' },\n        { label: 'Sector 6', value: 'sector_6' },\n    ]\n\n    const handleChangeSectors = (e) => {\n        setFilter(state => ({ ...state, sectors: e ?? [] }))\n    }\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Sector</div>\n            <div className=\"px-3\">\n                <Select\n                    closeMenuOnSelect={false}\n                    options={sectors}\n                    isClearable\n                    isMulti\n                    placeholder=\"Choose some sectors...\"\n                    onChange={(e) => handleChangeSectors(e)}\n                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                    value={filter.sectors} />\n            </div>\n        </>\n    )\n}\n\nexport default SectorsFilter","import React, { useCallback } from 'react'\nimport { InputGroup, InputGroupAddon, InputGroupText, CustomInput } from 'reactstrap'\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\n\nfunction ExperienceFilter() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const handleChange = useCallback((e) => {\n        const { value, checked } = e.target;\n        setFilter(state => ({ ...state, exp: checked ? value : '' }));\n    }, [setFilter])\n\n    return (\n        <>\n            <div className=\"font-weight-bold mb-2 text-center\">Years of experience</div>\n            <div className=\"px-3\">\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"less3\" value=\"less3\" checked={filter.exp === 'less3'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        Less than 3 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"3of5\" value=\"3of5\" checked={filter.exp === '3of5'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        3-5 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"6of10\" value=\"6of10\" checked={filter.exp === '6of10'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        6-10 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"10of20\" value=\"10of20\" checked={filter.exp === '10of20'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        10-20 years\n                    </div>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                            <CustomInput type=\"checkbox\" id=\"more20\" value=\"more20\" checked={filter.exp === 'more20'} onChange={handleChange} />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                        More than 20 years\n                    </div>\n                </InputGroup>\n            </div>\n        </>\n    )\n}\n\nexport default ExperienceFilter","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\n\nfunction YearExperienceSort() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const sorts = [\n        { label: 'Shortest to Longest', value: 'shortest' },\n        { label: 'Longest to Shortest', value: 'longest' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortExp: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Years of experience</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={sorts}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortExp} />\n        </>\n    )\n}\n\nexport default YearExperienceSort","import React from 'react'\nimport Select from 'react-select';\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\n\nfunction CostSort() {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n\n    const sorts = [\n        { label: 'Lowest to Highest', value: 'lowest' },\n        { label: 'Highest to Lowest', value: 'highest' },\n    ]\n\n    const handleChange = (e) => {\n        setFilter(state => ({ ...state, sortCost: e }))\n    }\n\n    return (\n        <>\n            <small className=\"font-weight-bold mb-2 text-center\">Cost</small>\n            <div className=\"px-3\"></div>\n            <Select\n                isSearchable={false}\n                options={sorts}\n                onChange={(e) => handleChange(e)}\n                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                value={filter.sortExp} />\n        </>\n    )\n}\n\nexport default CostSort","import React from 'react'\nimport { Button } from 'reactstrap';\nimport { useFilterProjectProfessionalsContext } from '../ProjectProfessionalsContext';\n\nfunction ResetFilter() {\n    const [, setFilter] = useFilterProjectProfessionalsContext()\n\n    const handleReset = () => {\n        setFilter(state => ({\n            ...state,\n            skills: [],\n            sectors: [],\n            exp: [],\n            degree: [],\n            education: [],\n        }))\n    }\n\n    return (\n        <Button color=\"danger\" onClick={handleReset}>\n            Reset Filter\n        </Button>\n    )\n}\n\nexport default ResetFilter","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, ModalBody, Modal, Badge, Input, InputGroup, InputGroupAddon, InputGroupText, CardFooter, CustomInput } from \"reactstrap\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport skills from '../../../DataDummy/SkillsDummy'\nimport ProfessionalsDummy from '../../../DataDummy/ProfessionalsDummy'\nimport skillsColours from '../../../DataDummy/SkillsColorsDummy'\nimport FilterProjectProfessionalsProvider, { useFilterProjectProfessionalsContext } from \"./ProjectProfessionalsContext\";\nimport SkillsFilter from \"./Filters/SkillsFilter\";\nimport SectorsFilter from \"./Filters/SectorsFilter\";\nimport ExperienceFilter from \"./Filters/ExperienceFilter\";\nimport YearExperienceSort from \"./Sorts/YearExperienceSort\";\nimport { DefaultImageUser } from \"../../../../components/DefaultImageUser/DefaultImageUser\";\nimport CostSort from \"./Sorts/CostSort\";\nimport SkillMatchSort from \"../Sorts/SkillMatchSort\";\nimport ResetFilter from \"./Filters/ResetFilter\";\nimport { convertToRupiah } from \"../../../../utils/formatter\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport usePagination from \"../../../../hooks/usePagination\";\nimport { Link } from \"react-router-dom\";\n\nexport default ({ data }) => {\n    const [modalApply, setModalApply] = useState(false);\n\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            cost: Yup.number().min(1, 'Min value 1.').label('Duration'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit } = useFormik({\n        initialValues: {\n            cost: 0,\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n        }\n    })\n\n    return (\n        <FilterProjectProfessionalsProvider>\n            <Row>\n                <Col xs=\"12\" md=\"6\">\n                    <Card className=\"shadow-sm\">\n                        <CardBody>\n                            <Row>\n                                <Col xs=\"12\">\n                                    <div className=\"font-xl font-weight-bold\">Project Name</div>\n                                </Col>\n                                <Col xs=\"9\">\n                                    <div><span className=\"text-muted\">Completion Date</span> DD MMMM YYYY</div>\n                                    <div><span className=\"text-muted\">Closing On</span> DD MMMM YYYY</div>\n                                    <div><span className=\"text-muted\">Sector</span> Sector A</div>\n                                    <div><span className=\"text-muted\">Duration</span> 12 Hours</div>\n                                    <div><span className=\"text-muted\">Years of experience</span> 1 Years</div>\n                                    <div><span className=\"text-muted\">Degree</span> Bachelor Degree</div>\n                                    <div><span className=\"text-muted\">Field</span> Mechanical Engineering</div>\n                                </Col>\n                                <Col xs=\"3\">\n                                    {skills.map((s, i) => (\n                                        <Badge key={i} color={skillsColours[i]} className=\"w-100 text-uppercase font-sm my-1 text-light\">{s.label}</Badge>\n                                    ))}\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n                <Col xs=\"12\" md=\"6\">\n                    <Card className=\"shadow-sm\">\n                        <CardBody>\n                            <Row>\n                                <Col xs=\"12\">\n                                    <div className=\"font-xl font-weight-bold\">Statistics</div>\n                                </Col>\n                                <Col xs=\"12\" className=\"d-flex my-1 justify-content-center\">\n                                    <Row className=\"text-center\">\n                                        <Col xs=\"12\" md=\"4\">\n                                            <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}>10</div>\n                                            <p style={{ whiteSpace: 'nowrap' }}>Number of applicant</p>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"4\">\n                                            <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}>500k</div>\n                                            <p style={{ whiteSpace: 'nowrap' }}>Average Cost</p>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"4\">\n                                            <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}>50%</div>\n                                            <p style={{ whiteSpace: 'nowrap' }}>Avarage Skills Match</p>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n                <Col xs=\"12\">\n                    <ProfessionalsList onClickAward={(data) => setModalApply(data)} />\n                </Col>\n                <Modal isOpen={modalApply} centered toggle={() => setModalApply(!modalApply)}>\n                    <ModalBody className=\"p-5\">\n                        <Row>\n                            <Col xs=\"12\" className=\"mb-5\">\n                                <div className=\"mb-2\">\n                                    <div className=\"text-muted\">Sector</div>\n                                    <div>Sector A</div>\n                                </div>\n                                <div className=\"mb-2\">\n                                    <div className=\"text-muted\">Duration</div>\n                                    <div>12 Hours</div>\n                                </div>\n                                <div className=\"mb-2\">\n                                    <div className=\"text-muted\">Completion Date</div>\n                                    <div>DD MMMM YYYY</div>\n                                </div>\n                                <div className=\"mb-2\">\n                                    <div className=\"text-muted\">Submited Cost</div>\n                                    <div>\n                                        {convertToRupiah(modalApply?.cost ?? 0)}\n                                        {touched.cost && errors.cost && <small className=\"text-danger\">{errors.cost}</small>}\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                <Button color=\"secondary\" className=\"mr-2\" onClick={() => setModalApply(!modalApply)}>Cancel</Button>\n                                <Button color=\"primary\" onClick={handleSubmit}>Apply</Button>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                </Modal>\n            </Row>\n        </FilterProjectProfessionalsProvider>\n    );\n}\n\nconst ProfessionalsList = ({ onClickAward }) => {\n    const [filter, setFilter] = useFilterProjectProfessionalsContext()\n    const [comparedData, setComparedData] = useState([])\n\n    const filteredData = useMemo(() => {\n        let data = ProfessionalsDummy;\n        if (filter) {\n            data = data\n                .filter((item) => {\n                    if (!filter.skills.length > 0) return true;\n                    let contain = false\n                    for (var i = 0; i < filter.skills.length; i++) {\n                        if (item.skills.includes(filter.skills[i].value) === true) {\n                            contain = true;\n                            break;\n                        }\n                    }\n                    return contain;\n                })\n                .filter((item) => {\n                    if (!filter.sectors.length > 0) return true;\n                    let contain = false\n                    for (var i = 0; i < filter.sectors.length; i++) {\n                        if (item.sector.id.includes(filter.sectors[i].value) === true) {\n                            contain = true;\n                            break;\n                        }\n                    }\n                    return contain;\n                })\n        }\n        return data;\n    }, [filter]);\n\n    const handleChangeCurrentPage = useCallback(\n        (page) => {\n            setFilter((state) => ({ ...state, pagination: page }));\n        },\n        [setFilter]\n    );\n\n    const { data: resultsData, PaginationComponent } = usePagination(\n        filteredData,\n        5,\n        filter.pagination,\n        handleChangeCurrentPage\n    );\n\n    const handleCompareProfessionals = useCallback((e, p) => {\n        const { value, checked } = e.target;\n\n        if (checked) {\n            setComparedData(state => [...state, { id: p.id, professionalName: p.professionalName, skillsMatch: p.skillsMatch, cost: p.cost, yearExperience: p.experience }])\n        } else {\n            setComparedData(state => state.filter(d => d.id !== p.id))\n        }\n\n    }, [])\n\n    const handleClearOne = useCallback((p) => {\n        setComparedData(state => state.filter(d => d.id !== p.id))\n    }, [])\n\n    const handleClearAll = useCallback((p) => {\n        setComparedData([])\n    }, [])\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\" lg=\"3\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <h5 className=\"font-weight-bold mb-4 text-center\">FILTER</h5>\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <SkillsFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <SectorsFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <ExperienceFilter />\n                            </Col>\n                            <Col xs=\"12\" className=\"my-2\">\n                                <ResetFilter />\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\" lg=\"9\">\n                {comparedData.length > 0 &&\n                    <ProfessionalsCompare data={comparedData} onClear={handleClearOne} />\n                }\n                <Row className=\"mb-4\">\n                    <Col xs=\"3\">\n                        <YearExperienceSort />\n                    </Col>\n                    <Col xs=\"3\">\n                        <CostSort />\n                    </Col>\n                    <Col xs=\"3\">\n                        <SkillMatchSort />\n                    </Col>\n                    <Col xs=\"3\" className=\"d-flex align-items-center\">\n                        <Button color=\"danger\" onClick={handleClearAll}>\n                            Remove all ticked\n                        </Button>\n                    </Col>\n                </Row>\n                <Row className=\"mb-2\">\n                    {resultsData.map((p, i) => (\n                        <Col xs=\"12\" key={i}>\n                            <Card className=\"shadow-sm\">\n                                <CardBody>\n                                    <Row>\n                                        <Col xs=\"9\">\n                                            <Row>\n                                                <Col xs=\"4\" className=\"d-flex justify-content-center align-items-center\">\n                                                    <DefaultImageUser text={p.professionalName} size={90} />\n                                                </Col>\n                                                <Col xs=\"8\">\n                                                    <Row>\n                                                        <Col xs=\"12\">\n                                                            <Link to={`/professional/${p.id}`}>\n                                                                <h4>{p.professionalName}</h4>\n                                                            </Link>\n                                                        </Col>\n                                                        <Col xs=\"12\">\n                                                            <p>{p.education.field} in {p.education.degree}</p>\n                                                        </Col>\n                                                        <Col xs=\"12\">\n                                                            <p>{p.experience} year experience</p>\n                                                        </Col>\n                                                        <Col xs=\"12\">\n                                                            <p>{p.sector.name}</p>\n                                                        </Col>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col xs=\"3\">\n                                            {p.skills.map((s, i) => (\n                                                <Badge key={i} color={skillsColours[i]} className=\"w-100 text-uppercase mx-1 font-sm text-light\">{s}</Badge>\n                                            ))}\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                                <CardFooter style={{ backgroundColor: '#fde2c1' }}>\n                                    <Row>\n                                        <Col xs=\"4\" className=\"d-flex align-items-center\">\n                                            {convertToRupiah(p.cost)}\n                                        </Col>\n                                        <Col xs=\"4\" className=\"d-flex align-items-center\">\n                                            Skills Match {p.skillsMatch}%\n                                        </Col>\n                                        <Col xs=\"4\" className=\"d-flex justify-content-end\">\n                                            <div className=\"d-flex align-items-center\">\n                                                <CustomInput type=\"checkbox\" id={p.id} value={p.id} checked={comparedData.find(c => c.id === p.id)} disabled={comparedData.length === 3 ? (comparedData.find(c => c.id === p.id) ? false : true) : false} onChange={(e) => handleCompareProfessionals(e, p)} />\n                                                <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                    Compare\n                                                </div>\n                                            </div>\n                                            <Button color=\"primary\" size=\"sm\" className=\"ml-2\" onClick={() => onClickAward(p)}>\n                                                Award\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </CardFooter>\n                            </Card>\n                        </Col>\n                    ))}\n                    <Col xs=\"12\">\n                        <PaginationComponent />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nconst ProfessionalsCompare = ({ data, onClear }) => {\n    return (\n        <Row className=\"mb-4\">\n            <Col xs=\"12\">\n                <Row className=\"text-center px-3\">\n                    <Col xs=\"3\" className=\"p-0\">\n                        <div className=\"border font-weight-bold\" style={{ backgroundColor: '#fde2c1', lineHeight: '25pt' }}>Comparing</div>\n                        <div style={{ lineHeight: '25pt' }} className=\"border font-weight-bold\">Skill Match</div>\n                        <div style={{ lineHeight: '25pt' }} className=\"border font-weight-bold\">Cost</div>\n                        <div style={{ lineHeight: '25pt' }} className=\"border font-weight-bold\">Years of experience</div>\n                    </Col>\n                    {data.map((p, i) => (\n                        <Col xs=\"3\" className=\"p-0\" key={i}>\n                            <div className=\"border font-weight-bold position-relative\" style={{ backgroundColor: '#fde2c1', lineHeight: '25pt' }}>\n                                {p.professionalName}\n                                <Button size=\"sm\" className=\"position-absolute\" color=\"danger\" style={{ top: '2px', right: '4px' }} onClick={() => onClear(p)}>\n                                    <FontAwesomeIcon icon=\"times\" size=\"sm\" />\n                                </Button>\n                            </div>\n                            <div style={{ lineHeight: '25pt' }} className=\"border\">{p.skillsMatch}%</div>\n                            <div style={{ lineHeight: '25pt' }} className=\"border\">{convertToRupiah(p.cost)}</div>\n                            <div style={{ lineHeight: '25pt' }} className=\"border\">{p.yearExperience}</div>\n                        </Col>\n                    ))}\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n"],"sourceRoot":""}