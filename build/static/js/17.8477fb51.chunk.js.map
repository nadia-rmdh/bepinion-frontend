{"version":3,"sources":["views/Menu/Professionals/ProfessionalContext.js","views/Menu/Professionals/ProfessionalWrapper.js"],"names":["filterProfessionalContext","createContext","setFilterProfessionalContext","FilterProfessionalProvider","props","useState","limit","page","project","sectors","exp","skills","sortExp","label","value","filterProfessionalCtx","setFilterProfessionalCtx","Provider","children","useFilterProfessionalContext","useContext","Professional","React","lazy","ProfessionalDashboard","ProfessionalDetail","translate","withRouter","location","match","user","useAuthUser","professional","path","exact","component","client","routes","role","map","route","key","from","to"],"mappings":"yMAIMA,EAA4BC,0BAC5BC,EAA+BD,0BAEtB,SAASE,EAA2BC,GAAQ,IAAD,EACIC,mBAAS,CAC/DC,MAAO,GACPC,KAAM,EACNC,QAAS,GACTC,QAAS,GACTC,IAAK,GACLC,OAAQ,GACRC,QAAS,CAAEC,MAAO,oBAAqBC,MAAO,2BARI,mBAC/CC,EAD+C,KACxBC,EADwB,KAWtD,OACI,kBAACd,EAA6Be,SAA9B,CAAuCH,MAAOE,GAC1C,kBAAChB,EAA0BiB,SAA3B,CAAoCH,MAAOC,GACtCX,EAAMc,WAOhB,IAAMC,EAA+B,WACxC,MAAO,CAACC,qBAAWpB,GAA4BoB,qBAAWlB,M,iCC7B9D,qEAOMmB,EAAeC,IAAMC,MAAK,kBAAM,iCAChCC,EAAwBF,IAAMC,MAAK,kBAAM,8DACzCE,EAAqBH,IAAMC,MAAK,kBAAM,kCAwC7BG,8BAAUC,aAtCzB,YAAkD,EAAnBC,SAAoB,IAAVC,EAAS,EAATA,MAC/BC,EAAOC,cACPC,EAAe,CACjB,CACIC,KAAMJ,EAAMI,KAAO,IACnBC,OAAO,EACPC,UAAWX,IAIbY,EAAS,CACX,CACIH,KAAMJ,EAAMI,KAAO,IACnBC,OAAO,EACPC,UAAWd,GAEf,CACIY,KAAMJ,EAAMI,KAAO,mBACnBC,OAAO,EACPC,UAAWV,IAIbY,EAAuB,iBAAdP,EAAKQ,KAA0BN,EAAeI,EAC7D,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACKC,EAAOE,KAAI,SAACC,GAAD,OACR,kBAAC,IAAD,eAAWC,IAAKD,EAAMP,MAAUO,OAEnCH,EAAO,IACJ,kBAAC,IAAD,CAAUH,OAAK,EAACQ,KAAMb,EAAMI,KAAMU,GAAIN,EAAO,GAAGJ","file":"static/js/17.8477fb51.chunk.js","sourcesContent":["import React, { createContext } from 'react'\nimport { useState } from 'react'\nimport { useContext } from 'react'\n\nconst filterProfessionalContext = createContext()\nconst setFilterProfessionalContext = createContext()\n\nexport default function FilterProfessionalProvider(props) {\n    const [filterProfessionalCtx, setFilterProfessionalCtx] = useState({\n        limit: 10,\n        page: 0,\n        project: '',\n        sectors: [],\n        exp: '',\n        skills: [],\n        sortExp: { label: 'Highest to Lowest', value: 'yearOfExperience_DESC' },\n    })\n\n    return (\n        <setFilterProfessionalContext.Provider value={setFilterProfessionalCtx}>\n            <filterProfessionalContext.Provider value={filterProfessionalCtx}>\n                {props.children}\n            </filterProfessionalContext.Provider>\n        </setFilterProfessionalContext.Provider>\n    )\n}\n\n\nexport const useFilterProfessionalContext = () => {\n    return [useContext(filterProfessionalContext), useContext(setFilterProfessionalContext)]\n}","import React from \"react\";\nimport { Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { translate } from \"react-switch-lang\";\nimport AuthRoute from '../../../containers/DefaultLayout/AuthRoute'\nimport { useAuthUser } from \"../../../store\";\nimport FilterProfessionalProvider from \"./ProfessionalContext\";\n\nconst Professional = React.lazy(() => import(\"./Professional\"));\nconst ProfessionalDashboard = React.lazy(() => import(\"./ProfessionalDashboard\"));\nconst ProfessionalDetail = React.lazy(() => import(\"./ProfessionalDetail\"));\n\nfunction ProfessionalWrapper({ location, match }) {\n    const user = useAuthUser();\n    const professional = [\n        {\n            path: match.path + \"/\",\n            exact: true,\n            component: ProfessionalDashboard,\n        },\n    ];\n\n    const client = [\n        {\n            path: match.path + \"/\",\n            exact: true,\n            component: Professional,\n        },\n        {\n            path: match.path + \"/:professionalId\",\n            exact: true,\n            component: ProfessionalDetail,\n        },\n    ];\n\n    const routes = user.role === 'professional' ? professional : client\n    return (\n        <FilterProfessionalProvider>\n            <Switch>\n                {routes.map((route) => (\n                    <AuthRoute key={route.path} {...route} />\n                ))}\n                {routes[0] && (\n                    <Redirect exact from={match.path} to={routes[0].path} />\n                )}\n            </Switch>\n        </FilterProfessionalProvider>\n    );\n}\n\nexport default translate(withRouter(ProfessionalWrapper));\n"],"sourceRoot":""}