{"version":3,"sources":["views/Menu/Profile/Components/Navigation.js","views/Menu/Profile/Forms/RegistrantForm.js","views/Menu/Profile/Forms/EducationForm.js","views/Menu/Profile/Forms/WorkExprerienceForm.js","views/Menu/Profile/Forms/ProjectExperienceForm.js","views/Menu/Profile/Forms/SkillSectorForm.js","views/Menu/Profile/Forms/DocumentVerificationForm.js","views/Menu/Profile/Forms/CompanyInformationForm.js","views/Menu/Profile/Forms/RegistrantCompanyForm.js","views/Menu/Profile/Profile.js"],"names":["NavigationDot","props","pageName","useCallback","i","role","dots","totalSteps","push","className","Nav","tabs","map","p","NavItem","key","NavLink","active","currentStep","onClick","goToStep","data","currentData","useMemo","firstName","lastName","gender","dateOfBirth","dob","moment","idType","label","value","idNumber","identityNumber","npwpNumber","npwp","address","province","name","id","phone","phoneNumber","email","sector","useFormik","initialValues","validationSchema","optional","registrationForm","Yup","required","shape","oneOf","onSubmit","values","setSubmitting","setErrors","onSubmitForm","nextStep","touched","errors","setValues","handleSubmit","isSubmitting","Row","Col","xs","registrantData","setRegistrantData","contactData","setContactData","RegistrantInformationForm","useState","isEdit","getSector","useDataSectors","sectors","handleChangeFirstName","e","target","old","handleChangeLastName","handleChangeSector","handleChangeGender","checked","handleChangeDateOfBirth","handleChangeIdType","handleChangeIdNumber","handleChangeNpwpNumber","Card","CardBody","md","lg","Label","for","Input","type","disabled","onChange","placeholder","options","isDisabled","components","DropdownIndicator","IndicatorSeparator","InputGroup","InputGroupAddon","addonType","InputGroupText","CustomInput","initialSettings","singleDatePicker","showDropdowns","startDate","Date","maxDate","autoApply","onApply","style","background","cursor","padding","border","width","format","onWheel","blur","onInput","Math","max","parseInt","toString","slice","Button","color","Spinner","size","ContactInformationForm","getProvince","useDataProvinces","handleChangeProvince","handleChangeAddress","handleChangePhone","handleChangeEmail","minRows","educations","v","degree","educationDegree","school","education","educationField","graduationYear","getDegree","useDataEducationDegrees","getSchool","useDataSchools","getEduField","useDataEducationFields","eduField","of","educationData","setEducationData","handleChangeDegree","edu","handleChangeSchool","handleChangeEducation","handleChangeGraduationYear","handleAddEducationData","length","handleDeleteEducationData","filter","icon","workExperience","job","jobTitle","company","companyName","employementType","employmentType","replace","charAt","toUpperCase","location","endDate","endDatePresent","isStillPresent","skills","skill","provinces","employementTypes","getSkills","useDataSkills","workExperienceData","setWorkExperienceData","work","handleChangeEmployementType","handleChangeLocation","handleChangeJob","handleChangeCompany","handleChangeStartDate","handleChangeEndDate","handleChangePresent","handleChangeSkills","handleAddWorkExperienceData","handleDeleteWorkExperienceData","selected","showMonthYearPicker","showFullMonthYearPicker","showFourColumnMonthYearPicker","dateFormat","placeholderText","wrapperClassName","minDate","closeMenuOnSelect","isClearable","isMulti","projectExperience","projectName","client","clientName","projectRole","country","description","hasProjectExperience","setHasProjectExperience","getCountries","useDataCountries","countries","projectExperienceData","setProjectExperienceData","project","handleChangeCountry","handleChangeProjectName","handleChangeClient","handleChangeProjectRole","handleChangeDescription","handleAddprojectExperienceData","handleDeleteprojectExperienceData","colorSkills","ColorSkill","category","floor","random","min","skillSectorData","setSkillSectorData","colourStyles","multiValue","styles","backgroundColor","multiValueLabel","opt","dataOptions","find","u","isOptionDisabled","option","npwpFile","useRef","regIdFile","photoFile","preview","npwpImageUrl","regId","identityImageUrl","photo","avatar","file","onFinishRegistration","verificationData","setVerificationData","onErrorImage","src","noImage","onerror","onChangeNpwpFile","preventDefault","files","toast","error","URL","createObjectURL","onChangeRegIdFile","onChangePhotoFile","height","alt","objectFit","position","onError","ref","display","accept","current","click","businessName","companySize","aboutUs","about","companyInformationData","setCompanyInformationData","CompanyInformationForm","handleChangeBusinessName","handleChangecompanySize","handleChangeAboutUs","registrantInformation","handleChangeJobTitle","Biodata","setAbout","setIsEdit","handleChangeAbout","request","put","then","response","success","catch","DefaultImageUser","text","createdAt","translate","history","useHistory","authUser","useAuthUser","modalSubmitForm","setModalSubmitForm","setInstance","companyInformationForm","registrantForm","educationForm","workExperienceForm","projectExperienceForm","skillSectorForm","verificationForm","formData","FormData","append","password","JSON","stringify","idSchool","idEducationDegree","idEducationField","idProvince","idSector","s","idSkill","idCountry","post","message","finally","setRegistrationData","handleFinishRegistration","isHashEnabled","nav","instance","transitions","enterRight","enterLeft","exitRight","exitLeft","intro","RegistrantForm","step","hashKey","stepName","state","EducationForm","WorkExprerienceForm","ProjectExperienceForm","SkillSectorForm","DocumentVerificationForm","RegistrantCompanyForm","Modal","isOpen","centered","toggle","ModalBody"],"mappings":"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","file":"static/js/23.b41bebed.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\n\nexport const NavigationDot = (props) => {\n    const pageName = useCallback((i) => {\n        if (props.role === 'professional') {\n            if (i === 1) return 'Registrant Information'\n            if (i === 2) return 'Education'\n            if (i === 3) return 'Work Experience'\n            if (i === 4) return 'Project Experience'\n            if (i === 5) return 'Skill'\n            if (i === 6) return 'Document Verification'\n        }\n        if (props.role === 'company') {\n            if (i === 1) return 'Company Information'\n            if (i === 2) return 'Registrant Information'\n            if (i === 3) return 'Document Verification'\n        }\n        if (props.role === 'individual') {\n            if (i === 1) return 'Registrant Information'\n            if (i === 2) return 'Document Verification'\n        }\n    }, [props.role])\n\n    const dots = [];\n    for (let i = 1; i <= props.totalSteps; i += 1) {\n        dots.push(i);\n    }\n\n    return (\n        <div className=\"register-nav mb-4\">\n            <div className={`mb-3 mb-md-3`}>\n                <Nav tabs className=\"text-center border-bottom-0\">\n                    {dots.map((p, i) => (\n                        <NavItem key={i}>\n                            <NavLink className=\"profile-tabs-item\" active={props.currentStep === i + 1} onClick={() => props.goToStep(i + 1)}>\n                                {pageName(i + 1)}\n                            </NavLink>\n                        </NavItem>\n                    ))}\n                </Nav>\n            </div>\n        </div>\n    );\n};","import React, { useCallback, useMemo, useState } from \"react\"\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { Card, CardBody, Row, Col, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Button, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport moment from \"moment\";\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\n\n\nexport default (props) => {\n    const data = props.data;\n    const currentData = useMemo(() => ({\n        firstName: data.firstName ?? '',\n        lastName: data.lastName ?? '',\n        gender: data.gender ?? '',\n        dateOfBirth: data.dob ? moment(data.dob) : '',\n        idType: { label: 'KTP', value: 'ktp' },\n        idNumber: data.identityNumber ?? '',\n        npwpNumber: data.npwp ?? '',\n        address: data.address ?? '',\n        province: { label: data.province.name, value: data.province.id } ?? '',\n        phone: data.phoneNumber ?? '',\n        email: data.email ?? '',\n        sector: data?.sector?.id ?? '',\n    }), [data])\n\n    const ValidationFormSchema = () => {\n        let optional;\n        if (props.registrationForm === 'individual') optional = { sector: Yup.string().required().label('Sector') }\n        return Yup.object().shape({\n            ...optional,\n            firstName: Yup.string().required().label('First Name'),\n            lastName: Yup.string().required().label('Last Name'),\n            gender: Yup.string().required().oneOf(['L', 'P']).label('Gender'),\n            dateOfBirth: Yup.string().required().label('Date of Birth'),\n            idType: Yup.string().required().label('ID Type'),\n            idNumber: Yup.string().required().label('ID Number'),\n            npwpNumber: Yup.string().required().label('NPWP Number'),\n            address: Yup.string().required().label('Address'),\n            province: Yup.string().required().label('Province'),\n            phone: Yup.string().required().label('Phone'),\n            email: Yup.string().required().email().label('Email'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><RegistrantInformationForm registrantData={values} currentData={currentData} setRegistrantData={setValues} onSubmit={handleSubmit} isSubmitting={isSubmitting} touched={touched} errors={errors} {...props} /></Col>\n            <Col xs=\"12\"><ContactInformationForm contactData={values} currentData={currentData} setContactData={setValues} onSubmit={handleSubmit} isSubmitting={isSubmitting} touched={touched} errors={errors} /></Col>\n        </Row>\n    );\n}\n\nexport const RegistrantInformationForm = ({ registrantData, currentData, setRegistrantData, onSubmit, isSubmitting, touched, errors, registrationForm }) => {\n    const [isEdit,] = useState(false);\n\n    const idType = [\n        { label: 'KTP', value: 'ktp' },\n    ]\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeFirstName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, firstName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeLastName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, lastName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeSector = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, sector: e }))\n    }, [setRegistrantData])\n\n    const handleChangeGender = useCallback((e) => {\n        const { value, checked } = e.target;\n        setRegistrantData(old => ({ ...old, gender: checked ? value : '' }))\n    }, [setRegistrantData])\n\n    const handleChangeDateOfBirth = useCallback((value) => {\n        setRegistrantData(old => ({ ...old, dateOfBirth: value }))\n    }, [setRegistrantData])\n\n    const handleChangeIdType = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, idType: e }))\n    }, [setRegistrantData])\n\n    const handleChangeIdNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, idNumber: value }))\n    }, [setRegistrantData])\n\n    const handleChangeNpwpNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, npwpNumber: value }))\n    }, [setRegistrantData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-md-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                        {/* <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                            setIsEdit(!isEdit)\n                            setRegistrantData(currentData)\n                        }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button> */}\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"firstName\">First Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={registrantData.firstName} disabled={!isEdit} onChange={(e) => handleChangeFirstName(e)} placeholder=\"First Name Field...\" />\n                                {touched.firstName && errors.firstName && <small className=\"text-danger\">{errors.firstName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"lastName\">Last Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={registrantData.lastName} disabled={!isEdit} onChange={(e) => handleChangeLastName(e)} placeholder=\"Last Name Field...\" />\n                                {touched.lastName && errors.lastName && <small className=\"text-danger\">{errors.lastName}</small>}\n                            </Col>\n                        </Row>\n                        {registrationForm === 'individual' &&\n                            <Row className=\"my-3\">\n                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                    <Label for=\"sector\">Sector</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                    <Select\n                                        options={sectors}\n                                        placeholder=\"Choose a socter...\"\n                                        value={registrantData.sector}\n                                        isDisabled={!isEdit}\n                                        onChange={(e) => handleChangeSector(e)}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    />\n                                    {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                                </Col>\n                            </Row>\n                        }\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"gender\">Gender</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"male\" value=\"L\" checked={registrantData.gender === \"L\" ? true : false} disabled={!isEdit} onChange={(e) => handleChangeGender(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"male\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Male\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"female\" value=\"P\" checked={registrantData.gender === \"P\" ? true : false} disabled={!isEdit} onChange={(e) => handleChangeGender(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"female\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Female\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.gender && errors.gender && <small className=\"text-danger\">{errors.gender}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"dateOfBirth\">Date of Birth</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                {!isEdit ?\n                                    registrantData.dateOfBirth ? registrantData.dateOfBirth.format('DD/MM/YYYY') : 'DD/MMMM/YYYY'\n                                    :\n                                    <DateRangePicker\n                                        initialSettings={{\n                                            singleDatePicker: true,\n                                            showDropdowns: true,\n                                            startDate: new Date(),\n                                            maxDate: new Date(),\n                                            autoApply: true,\n                                        }}\n                                        onApply={(e, p) => handleChangeDateOfBirth(p.startDate)}\n                                    >\n                                        <div id=\"reportrange\" style={{ background: '#fff', cursor: 'pointer', padding: '5px 10px', border: '1px solid #ccc', width: '100%' }}>\n                                            <i className=\"fa fa-calendar mr-2\"></i><span>{registrantData.dateOfBirth ? registrantData.dateOfBirth.format('DD/MM/YYYY') : 'DD/MMMM/YYYY'}</span> <i className=\"fa fa-caret-down float-right\"></i>\n                                        </div>\n                                    </DateRangePicker>\n                                }\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idType\">ID Type</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={idType}\n                                    placeholder=\"Choose id type...\"\n                                    value={registrantData.idType}\n                                    isDisabled={!isEdit}\n                                    onChange={(e) => handleChangeIdType(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.idType && errors.idType && <small className=\"text-danger\">{errors.idType}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idNumber\">ID Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"idNumber\" id=\"idNumber\" value={registrantData.idNumber} disabled={!isEdit} onChange={(e) => handleChangeIdNumber(e)} placeholder=\"ID Number Field...\"\n                                    onWheel={(e) => { e.target.blur() }} onInput={(e) => { e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 16) }}\n                                />\n                                {touched.idNumber && errors.idNumber && <small className=\"text-danger\">{errors.idNumber}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"npwpNumber\">NPWP Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"npwpNumber\" id=\"npwpNumber\" value={registrantData.npwpNumber} disabled={!isEdit} onChange={(e) => handleChangeNpwpNumber(e)} placeholder=\"NPWP Number Field...\"\n                                    onWheel={(e) => { e.target.blur() }}\n                                />\n                                {touched.npwpNumber && errors.npwpNumber && <small className=\"text-danger\">{errors.npwpNumber}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    {isEdit &&\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"primary\" className=\"float-right\" onClick={onSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                        </Col>\n                    }\n                </Row>\n            </CardBody>\n        </Card >\n    );\n}\n\nexport const ContactInformationForm = ({ contactData, currentData, setContactData, onSubmit, isSubmitting, touched, errors }) => {\n    const [isEdit,] = useState(false);\n    const { data: getProvince } = useDataProvinces();\n    const province = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n    const handleChangeProvince = useCallback((e) => {\n        setContactData(old => ({ ...old, province: e }))\n    }, [setContactData])\n\n    const handleChangeAddress = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, address: value }))\n    }, [setContactData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, phone: value }))\n    }, [setContactData])\n\n    const handleChangeEmail = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, email: value }))\n    }, [setContactData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-md-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">CONTACT INFORMATION</div>\n                        {/* <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                            setIsEdit(!isEdit)\n                            setContactData(currentData)\n                        }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button> */}\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"address\">Address</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"address\"\n                                    id=\"address\"\n                                    className=\"form-control\"\n                                    placeholder=\"Address Field...\"\n                                    value={contactData.address}\n                                    disabled={!isEdit}\n                                    onChange={(e) => handleChangeAddress(e)}\n                                />\n                                {touched.address && errors.address && <small className=\"text-danger\">{errors.address}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"province\">Province</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={province}\n                                    placeholder=\"Choose province...\"\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={contactData.province}\n                                    isDisabled={!isEdit}\n                                    onChange={(e) => handleChangeProvince(e)}\n                                />\n                                {touched.province && errors.province && <small className=\"text-danger\">{errors.province}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Mobile Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" value={contactData.phone} disabled={!isEdit} onChange={(e) => handleChangePhone(e)} placeholder=\"Mobile Phone Field...\"\n                                    onWheel={(e) => { e.target.blur() }}\n                                />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"email\">Email</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={contactData.email} disabled={!isEdit} onChange={(e) => handleChangeEmail(e)} placeholder=\"Email Field...\" />\n                                {touched.email && errors.email && <small className=\"text-danger\">{errors.email}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    {isEdit &&\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"primary\" className=\"float-right\" onClick={onSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                        </Col>\n                    }\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataEducationDegrees from \"../../../../hooks/useDataEducationDegrees\";\nimport useDataEducationFields from \"../../../../hooks/useDataEducationFields\";\nimport useDataSchools from \"../../../../hooks/useDataSchools\";\n\nexport default (props) => {\n    const data = props.data.educations;\n    const [isEdit,] = useState(false);\n\n    const currentData = useMemo(() => data?.map((v, i) => (\n        {\n            id: v.id,\n            degree: { label: v.educationDegree.name, value: v.educationDegree.id } ?? '',\n            school: { label: v.school.name, value: v.school.id } ?? '',\n            education: { label: v.educationField.name, value: v.educationField.id } ?? '',\n            graduationYear: 0,\n        }\n    )), [data])\n\n    const { data: getDegree } = useDataEducationDegrees();\n    const degree = useMemo(() => getDegree.map(p => ({ label: p.name, value: p.id })), [getDegree])\n\n    const { data: getSchool } = useDataSchools();\n    const school = useMemo(() => getSchool.map(p => ({ label: p.name, value: p.id })), [getSchool])\n\n    const { data: getEduField } = useDataEducationFields();\n    const eduField = useMemo(() => getEduField.map(p => ({ label: p.name, value: p.id })), [getEduField])\n\n    const ValidationFormSchema = () => {\n        return Yup.array().of(\n            Yup.object().shape({\n                degree: Yup.string().required().label('Degree'),\n                school: Yup.string().required().label('School'),\n                education: Yup.string().required().label('Education'),\n                graduationYear: Yup.string().required().label('Graduation Year'),\n            })\n        )\n    }\n\n    const { values: educationData, touched, errors, setValues: setEducationData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeDegree = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, degree: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeSchool = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, school: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeEducation = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, education: e }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeGraduationYear = useCallback((e, i) => {\n        const { value } = e.target;\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, graduationYear: value }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleAddEducationData = useCallback(() => {\n        setEducationData(old => ([...old, { id: old[old.length - 1].id + 1, degree: '', school: '', education: '', graduationYear: '' }]))\n    }, [setEducationData])\n\n    const handleDeleteEducationData = useCallback((i) => {\n        setEducationData(old => ([...old].filter(edu => edu.id !== i)))\n    }, [setEducationData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-md-5\">\n                            <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Education</div>\n                                {/* <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                                    setIsEdit(!isEdit)\n                                    setEducationData(currentData)\n                                }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button> */}\n                            </Col>\n                            {educationData.map((edu, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <Card className=\"shadow-sm\">\n                                        <CardBody>\n                                            {i > 0 &&\n                                                <Row className=\"my-3\">\n                                                    <Col xs=\"12\">\n                                                        <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteEducationData(edu.id)} disabled={!isEdit || isSubmitting}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                    </Col>\n                                                </Row>\n                                            }\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"degree\">Degree</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={degree}\n                                                        placeholder=\"Choose degree...\"\n                                                        onChange={(e) => handleChangeDegree(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.degree}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.degree && errors[i]?.degree && <small className=\"text-danger\">{errors[i]?.degree}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"school\">School</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={school}\n                                                        placeholder=\"Choose school...\"\n                                                        onChange={(e) => handleChangeSchool(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.school}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.school && errors[i]?.school && <small className=\"text-danger\">{errors[i]?.school}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"education\">Education</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={eduField}\n                                                        placeholder=\"Choose Education Field...\"\n                                                        onChange={(e) => handleChangeEducation(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.education}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.education && errors[i]?.education && <small className=\"text-danger\">{errors[i]?.education}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"graduationYear\">Graduation year</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"number\" disabled={!isEdit || isSubmitting} name=\"graduationYear\" id=\"graduationYear\" value={edu.graduationYear} onChange={(e) => handleChangeGraduationYear(e, edu.id)} placeholder=\"YYYY\"\n                                                        onWheel={(e) => { e.target.blur() }} onInput={(e) => { e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 4) }}\n                                                    />\n                                                    {touched[i]?.graduationYear && errors[i]?.graduationYear && <small className=\"text-danger\">{errors[i]?.graduationYear}</small>}\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ))}\n                            {isEdit &&\n                                <>\n                                    <Col xs=\"12\" className=\"d-flex justify-content-center\">\n                                        <Button color=\"success\" onClick={handleAddEducationData} disabled={isSubmitting}>Add Education</Button>\n                                    </Col>\n                                    <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                        <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                                    </Col>\n                                </>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Datepicker from \"react-datepicker\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\n\nexport default (props) => {\n    const data = props.data.workExperience;\n    const [isEdit, ] = useState(false);\n    const currentData = useMemo(() => data.map((v) => (\n        {\n            id: v.id,\n            job: v.jobTitle,\n            company: v.companyName,\n            sector: { label: v.sector.name, value: v.sector.id },\n            employementType: { label: v.employmentType.replace(/_/g, ' ').charAt(0).toUpperCase() + v.employmentType.replace(/_/g, ' ').slice(1), value: v.employmentType },\n            location: { label: v.province.name, value: v.province.id },\n            startDate: new Date(v.startDate),\n            endDate: new Date(v.endDate),\n            endDatePresent: v.isStillPresent ? true : false,\n            skills: v.skills.map(skill => ({ label: skill.skill.name, value: skill.skill.id })),\n        }\n    )), [data])\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const { data: getProvince } = useDataProvinces();\n    const provinces = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const employementTypes = [\n        { label: 'Permanent employee', value: 'permanent_employee' },\n        { label: 'Part-time Employee', value: 'part_time_employee' },\n        { label: 'Fixed-Term Contract Employee', value: 'fixed_term_contract_employee' },\n        { label: 'Intern', value: 'intern' },\n        { label: 'Freelancer', value: 'freelancer' },\n    ]\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const ValidationFormSchema = () => {\n        return Yup.array().of(\n            Yup.object().shape({\n                job: Yup.string().required().label('Job'),\n                company: Yup.string().required().label('Company Name'),\n                sector: Yup.string().required().label('Sector'),\n                employementType: Yup.string().required().label('Employement Type'),\n                location: Yup.string().required().label('Location'),\n                startDate: Yup.string().required().label('Start Date'),\n                endDate: Yup.string().required().label('End Date'),\n                skills: Yup.string().required().label('Skills'),\n            })\n        )\n    }\n\n    const { values: workExperienceData, touched, errors, setValues: setWorkExperienceData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeSector = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, sector: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeEmployementType = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, employementType: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeLocation = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, location: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeJob = useCallback((e, i) => {\n        const { value } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, job: value }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeCompany = useCallback((e, i) => {\n        const { value } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, company: value }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeStartDate = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, startDate: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeEndDate = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, endDate: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangePresent = useCallback((e, i) => {\n        const { value, checked } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, endDate: new Date(), endDatePresent: checked ? value : '' }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeSkills = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, skills: e ?? [] }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleAddWorkExperienceData = useCallback(() => {\n        setWorkExperienceData(old => ([...old, { id: old[old.length - 1].id + 1, job: '', company: '', sector: '', employementType: '', location: '', startDate: '', endDate: '', endDatePresent: '', skills: [], }]))\n    }, [setWorkExperienceData])\n\n    const handleDeleteWorkExperienceData = useCallback((i) => {\n        setWorkExperienceData(old => ([...old].filter(work => work.id !== i)))\n    }, [setWorkExperienceData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-md-5\">\n                            <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Work Experience</div>\n                                {/* <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                                    setIsEdit(!isEdit)\n                                    setWorkExperienceData(currentData)\n                                }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button> */}\n                            </Col>\n                            {workExperienceData.map((work, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <Card className=\"shadow-sm\">\n                                        <CardBody>\n                                            {i > 0 &&\n                                                <Row className=\"my-3\">\n                                                    <Col xs=\"12\">\n                                                        <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteWorkExperienceData(work.id)} disabled={!isEdit || isSubmitting}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                    </Col>\n                                                </Row>\n                                            }\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"job\">Job Title</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"text\" name=\"job\" id=\"job\" value={work.job} disabled={!isEdit || isSubmitting} onChange={(e) => handleChangeJob(e, work.id)} placeholder=\"Job Title Field...\" />\n                                                    {touched[i]?.job && errors[i]?.job && <small className=\"text-danger\">{errors[i]?.job}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"job\">Company Name</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"text\" name=\"company\" id=\"company\" value={work.company} disabled={!isEdit || isSubmitting} onChange={(e) => handleChangeCompany(e, work.id)} placeholder=\"Company Name Field...\" />\n                                                    {touched[i]?.company && errors[i]?.company && <small className=\"text-danger\">{errors[i]?.company}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"sector\">Sector</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={sectors}\n                                                        placeholder=\"Choose sector...\"\n                                                        onChange={(e) => handleChangeSector(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.sector}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.sector && errors[i]?.sector && <small className=\"text-danger\">{errors[i]?.sector}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"employementType\">Employment Type</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={employementTypes}\n                                                        placeholder=\"Choose Employment Type...\"\n                                                        onChange={(e) => handleChangeEmployementType(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.employementType}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.employementType && errors[i]?.employementType && <small className=\"text-danger\">{errors[i]?.employementType}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"location\">Location</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={provinces}\n                                                        placeholder=\"Choose Location...\"\n                                                        onChange={(e) => handleChangeLocation(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.location}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.location && errors[i]?.location && <small className=\"text-danger\">{errors[i]?.location}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"startDate\">Start Date</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Datepicker\n                                                        required\n                                                        name=\"startDate\"\n                                                        selected={work.startDate}\n                                                        onChange={(e) => handleChangeStartDate(e, work.id)}\n                                                        showMonthYearPicker\n                                                        showFullMonthYearPicker\n                                                        showFourColumnMonthYearPicker\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMMM yyyy\"\n                                                        maxDate={new Date()}\n                                                        placeholderText=\"Select a date\"\n                                                        wrapperClassName=\"form-control\"\n                                                        disabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.startDate && errors[i]?.startDate && <small className=\"text-danger\">{errors[i]?.startDate}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"endDate\">End Date</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Row>\n                                                        {!work.endDatePresent &&\n                                                            <Col xs=\"6\" md=\"4\" lg=\"5\">\n                                                                <Datepicker\n                                                                    required\n                                                                    name=\"endDate\"\n                                                                    selected={work.endDate}\n                                                                    onChange={(e) => handleChangeEndDate(e, work.id)}\n                                                                    showMonthYearPicker\n                                                                    showFullMonthYearPicker\n                                                                    showFourColumnMonthYearPicker\n                                                                    className=\"form-control\"\n                                                                    dateFormat=\"MMMM yyyy\"\n                                                                    minDate={work.startDate}\n                                                                    maxDate={new Date()}\n                                                                    placeholderText=\"Select a date\"\n                                                                    wrapperClassName=\"form-control\"\n                                                                    disabled={!isEdit || isSubmitting}\n                                                                />\n                                                            </Col>\n                                                        }\n                                                        <Col xs=\"6\" md=\"4\" lg=\"4\">\n                                                            <InputGroup>\n                                                                <InputGroupAddon addonType=\"prepend\">\n                                                                    <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                                        <CustomInput type=\"checkbox\" id={`present-${work.id}`} value=\"present\" disabled={!isEdit || isSubmitting} checked={work.endDatePresent} onChange={(e) => handleChangePresent(e, work.id)} />\n                                                                    </InputGroupText>\n                                                                </InputGroupAddon>\n                                                                <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                                    Present\n                                                                </div>\n                                                            </InputGroup>\n                                                        </Col>\n                                                        <Col xs=\"12\">\n                                                            {touched[i]?.endDate && errors[i]?.endDate && <small className=\"text-danger\">{errors[i]?.endDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"skill\">Skill</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        closeMenuOnSelect={false}\n                                                        options={skills}\n                                                        isClearable\n                                                        isMulti\n                                                        placeholder=\"Choose some skills...\"\n                                                        onChange={(e) => handleChangeSkills(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.skills}\n                                                        isDisabled={!isEdit || isSubmitting}\n                                                    />\n                                                    {touched[i]?.skills && errors[i]?.skills && <small className=\"text-danger\">{errors[i]?.skills}</small>}\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ))}\n                            {isEdit &&\n                                <>\n                                    <Col xs=\"12\" className=\"d-flex justify-content-center\">\n                                        <Button color=\"success\" className=\"float-right\" onClick={handleAddWorkExperienceData}>Add Work Experience</Button>\n                                    </Col>\n                                    <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                        <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                                    </Col>\n                                </>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Datepicker from \"react-datepicker\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\nimport useDataCountries from \"../../../../hooks/useDataCountries\";\n\nexport default (props) => {\n    const data = props.data.projectExperience;\n    const [isEdit,] = useState(false);\n    const currentData = useMemo(() => data.map((v) => (\n        {\n            id: v.id,\n            projectName: v.projectName,\n            client: v.clientName,\n            projectRole: v.projectRole,\n            sector: { label: v.sector.name, value: v.sector.id },\n            province: { label: v.province.name, value: v.province.id },\n            country: { label: v.country.name, value: v.country.id },\n            startDate: new Date(v.startDate),\n            endDate: new Date(v.endDate),\n            description: v.description,\n            skills: v.skills.map(skill => ({ label: skill.skill.name, value: skill.skill.id })),\n        }\n    )), [data]);\n\n    const [hasProjectExperience, setHasProjectExperience] = useState(data.length > 0 ? true : false);\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const { data: getProvince } = useDataProvinces();\n    const provinces = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const { data: getCountries } = useDataCountries();\n    const countries = useMemo(() => getCountries.map(p => ({ label: p.name, value: p.id })), [getCountries])\n\n    const ValidationFormSchema = () => {\n        if (!hasProjectExperience) return Yup.array().of(\n            Yup.object().shape({\n                projectName: Yup.string().label('Project Name'),\n            })\n        )\n        return Yup.array().of(\n            Yup.object().shape({\n                projectName: Yup.string().required().label('Project Name'),\n                client: Yup.string().required().label('Client Name'),\n                projectRole: Yup.string().required().label('Project Role'),\n                sector: Yup.string().required().label('Sector'),\n                province: Yup.string().required().label('province'),\n                startDate: Yup.string().required().label('Start Date'),\n                endDate: Yup.string().required().label('End Date'),\n                description: Yup.string().required().label('Description'),\n                skills: Yup.string().required().label('Skills'),\n            })\n        )\n    }\n\n    const { values: projectExperienceData, touched, errors, setValues: setProjectExperienceData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeSector = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, sector: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProvince = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, province: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeCountry = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, country: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProjectName = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, projectName: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeClient = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, client: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProjectRole = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, projectRole: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeStartDate = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, startDate: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeEndDate = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, endDate: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeDescription = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, description: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeSkills = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, skills: e ?? [] }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleAddprojectExperienceData = useCallback(() => {\n        setProjectExperienceData(old => ([...old, { id: old[old.length - 1].id + 1, projectName: '', client: '', projectRole: '', sector: '', province: '', startDate: '', endDate: '', description: '', skills: [], }]))\n    }, [setProjectExperienceData])\n\n    const handleDeleteprojectExperienceData = useCallback((i) => {\n        setProjectExperienceData(old => ([...old].filter(project => project.id !== i)))\n    }, [setProjectExperienceData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-md-5\">\n                            <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Project Experience</div>\n                                {/* <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                                    setIsEdit(!isEdit)\n                                    setProjectExperienceData(currentData)\n                                }} disabled={isEdit && isSubmitting} > <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button> */}\n                            </Col>\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <InputGroup>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                            <CustomInput type=\"checkbox\" id=\"hasProjectExperience\" value=\"hasProjectExperience\" checked={hasProjectExperience} onChange={(e) => setHasProjectExperience(e.target.checked)} disabled={!isEdit || isSubmitting} />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Label for=\"hasProjectExperience\" className=\"d-flex bg-transparent m-0 align-items-center\">\n                                        Do you have project experience?\n                                    </Label>\n                                </InputGroup>\n                            </Col>\n                            {hasProjectExperience &&\n                                <>\n                                    {projectExperienceData.map((project, i) => (\n                                        <Col xs=\"12\" key={i}>\n                                            <Card className=\"shadow-sm\">\n                                                <CardBody>\n                                                    {i > 0 &&\n                                                        <Row className=\"my-3\">\n                                                            <Col xs=\"12\">\n                                                                <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteprojectExperienceData(project.id)} disabled={!isEdit || isSubmitting}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                            </Col>\n                                                        </Row>\n                                                    }\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"projectName\">Project Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"projectName\" id=\"projectName\" disabled={!isEdit || isSubmitting} value={project.projectName} onChange={(e) => handleChangeProjectName(e, project.id)} placeholder=\"Job Title Field...\" />\n                                                            {touched[i]?.projectName && errors[i]?.projectName && <small className=\"text-danger\">{errors[i]?.projectName}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"client\">Client Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"client\" id=\"client\" disabled={!isEdit || isSubmitting} value={project.client} onChange={(e) => handleChangeClient(e, project.id)} placeholder=\"Client Name Field...\" />\n                                                            {touched[i]?.client && errors[i]?.client && <small className=\"text-danger\">{errors[i]?.client}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"projectRole\">Project Role</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"projectRole\" id=\"projectRole\" disabled={!isEdit || isSubmitting} value={project.projectRole} onChange={(e) => handleChangeProjectRole(e, project.id)} placeholder=\"Project Role Field...\" />\n                                                            {touched[i]?.projectRole && errors[i]?.projectRole && <small className=\"text-danger\">{errors[i]?.projectRole}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"sector\">Sector</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={sectors}\n                                                                placeholder=\"Choose sector...\"\n                                                                onChange={(e) => handleChangeSector(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.sector}\n                                                                isDisabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.sector && errors[i]?.sector && <small className=\"text-danger\">{errors[i]?.sector}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"province\">Province</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={provinces}\n                                                                placeholder=\"Choose a Province...\"\n                                                                onChange={(e) => handleChangeProvince(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.province}\n                                                                isDisabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.province && errors[i]?.province && <small className=\"text-danger\">{errors[i]?.province}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"countries\">Country</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={countries}\n                                                                placeholder=\"Choose a Country...\"\n                                                                onChange={(e) => handleChangeCountry(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.country}\n                                                                isDisabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.country && errors[i]?.country && <small className=\"text-danger\">{errors[i]?.country}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"startDate\">Start Date</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"startDate\"\n                                                                selected={project.startDate}\n                                                                onChange={(e) => handleChangeStartDate(e, project.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                className=\"form-control\"\n                                                                disabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.startDate && errors[i]?.startDate && <small className=\"text-danger\">{errors[i]?.startDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"endDate\">End Date</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"endDate\"\n                                                                selected={project.endDate}\n                                                                onChange={(e) => handleChangeEndDate(e, project.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                minDate={project.startDate}\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                className=\"form-control\"\n                                                                disabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.endDate && errors[i]?.endDate && <small className=\"text-danger\">{errors[i]?.endDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"description\">Description</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <TextareaAutosize\n                                                                minRows={3}\n                                                                name=\"description\"\n                                                                id=\"description\"\n                                                                className=\"form-control\"\n                                                                placeholder=\"Description Field...\"\n                                                                value={project.description}\n                                                                onChange={(e) => handleChangeDescription(e, project.id)}\n                                                                disabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.description && errors[i]?.description && <small className=\"text-danger\">{errors[i]?.description}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"skill\">Skill</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                closeMenuOnSelect={false}\n                                                                options={skills}\n                                                                isClearable\n                                                                isMulti\n                                                                placeholder=\"Choose some skills...\"\n                                                                onChange={(e) => handleChangeSkills(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.skills}\n                                                                isDisabled={!isEdit || isSubmitting}\n                                                            />\n                                                            {touched[i]?.skills && errors[i]?.skills && <small className=\"text-danger\">{errors[i]?.skills}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                    ))}\n                                    {isEdit &&\n                                        <>\n                                            <Col xs=\"12\" className=\"d-flex justify-content-center\">\n                                                <Button color=\"success\" className=\"float-right rounded-circle shadow-sm\" onClick={handleAddprojectExperienceData}><FontAwesomeIcon icon=\"plus\" /></Button>\n                                            </Col>\n                                            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                                <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                                            </Col>\n                                        </>\n                                    }\n                                </>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row >\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\nimport ColorSkill from \"../../../../components/ColorSkill\";\n\nconst colorSkills = [\n    '#1372BA',\n    '#5380a2',\n    '#8453a2',\n    '#53a276',\n    '#a25353',\n    '#bfb327',\n    '#2733bf',\n    '#27bf4f'\n]\n\nexport default (props) => {\n    const data = props.data;\n    const [isEdit,] = useState(false);\n    const currentData = useMemo(() => ({\n        skills: data.skills.map(p => ({ label: p.skill.name, value: p.skill.id, color: ColorSkill[p.skill.category] })),\n        sectors: data.sectors.map(p => ({ label: p.sector.name, value: p.sector.id, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })),\n    }), [data])\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            sectors: Yup.array().min(1).max(3).label('Sector'),\n            skills: Yup.array().min(1).max(5).label('Skills'),\n        })\n    }\n\n    const { values: skillSectorData, touched, errors, setValues: setSkillSectorData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n    const colourStyles = {\n        multiValue: (styles, { data }) => {\n            const color = data.color;\n            return {\n                ...styles,\n                backgroundColor: color,\n            };\n        },\n        multiValueLabel: (styles, { data }) => ({\n            ...styles,\n            color: '#fff',\n        }),\n    };\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => {\n        const opt = []\n        const dataSectors = getSector.map(p => ({ label: p.name, value: p.id }))\n        dataSectors.map((v) => {\n            const dataOptions = skillSectorData.sectors?.find(u => u.value === v.value);\n            if (!dataOptions) opt.push({ ...v, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })\n            return dataOptions;\n        })\n\n        return opt\n    }, [skillSectorData.sectors, getSector])\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => {\n        return getSkills.map(p => ({ label: p.name, value: p.id, color: ColorSkill[p.category] }))\n    }, [getSkills])\n\n    const handleChangeSector = useCallback((e) => {\n        setSkillSectorData(old => ({ ...old, sectors: e ?? [] }))\n    }, [setSkillSectorData])\n\n    const handleChangeSkills = useCallback((e) => {\n        setSkillSectorData(old => ({ ...old, skills: e ?? [] }))\n    }, [setSkillSectorData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-md-5\">\n                            <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">My Top 5 Skills</div>\n                                {/* <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                                    setIsEdit(!isEdit)\n                                    setSkillSectorData(currentData)\n                                }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button> */}\n                            </Col>\n                            {/* <Col xs=\"12\">\n                                <Card className=\"shadow-sm\">\n                                    <CardBody>\n                                        {skillSectorData.skills.map((skill, i) => (\n                                            <Badge key={i} color={colorSkills[i]} className=\"text-uppercase font-sm mx-1 text-light\">{skill.label}</Badge>\n                                        ))}\n                                    </CardBody>\n                                </Card>\n                            </Col> */}\n                            <Col xs=\"12\">\n                                <Select\n                                    closeMenuOnSelect={false}\n                                    options={skills}\n                                    isClearable\n                                    isMulti\n                                    placeholder=\"Choose some skills...\"\n                                    onChange={(e) => handleChangeSkills(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={skillSectorData.skills}\n                                    styles={colourStyles}\n                                    isDisabled={!isEdit || isSubmitting}\n                                    isOptionDisabled={(option) => skillSectorData.skills.length >= 5}\n                                />\n                                {touched.skills && errors.skills && <small className=\"text-danger\">{errors.skills}</small>}\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-md-5\">\n                            <Col xs=\"12\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">My top 3 Sectors</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\">\n                                        <Select\n                                            closeMenuOnSelect={false}\n                                            options={sectors}\n                                            isClearable\n                                            isMulti\n                                            placeholder=\"Choose some sectors...\"\n                                            onChange={(e) => handleChangeSector(e)}\n                                            components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                            value={skillSectorData.sectors}\n                                            styles={colourStyles}\n                                            isDisabled={!isEdit || isSubmitting}\n                                            isOptionDisabled={(option) => skillSectorData.sectors.length >= 3}\n                                        />\n                                        {touched.sectors && errors.sectors && <small className=\"text-danger\">{errors.sectors}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                            {isEdit &&\n                                <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                    <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                                </Col>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo, useRef, useState } from \"react\"\nimport { toast } from \"react-toastify\";\nimport { Card, CardBody, Row, Col, Button, Label, Spinner } from \"reactstrap\";\nimport noImage from '../../../../assets/illustrations/image-error.png'\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\n\nexport default (props) => {\n    const npwpFile = useRef(null)\n    const regIdFile = useRef(null)\n    const photoFile = useRef(null)\n    const data = props.data;\n\n    const [isEdit,] = useState(false);\n    const currentData = useMemo(() => ({\n        npwp: { preview: data.npwpImageUrl ?? 'a' },\n        regId: { preview: data.identityImageUrl ?? 'a' },\n        photo: { preview: data.avatar ?? 'a' },\n    }), [data])\n\n    const ValidationFormSchema = () => {\n        let file;\n        if (props.registrationForm === 'professional') file = { npwp: Yup.string().required().label('Npwp File'), regId: Yup.string().required().label('Registrant ID File'), photo: Yup.string().required().label('Photo Profile File') }\n        if (props.registrationForm === 'business') file = { npwp: Yup.string().required().label('Npwp File') }\n        if (props.registrationForm === 'individual') file = { npwp: Yup.string().required().label('Npwp File'), regId: Yup.string().required().label('Registrant ID File') }\n\n        return Yup.object().shape({\n            ...file,\n        })\n    }\n\n    const { values: verificationData, touched, errors, setValues: setVerificationData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.onFinishRegistration()\n        }\n    })\n\n    const onErrorImage = useCallback((e) => {\n        e.target.src = noImage;\n        e.target.onerror = null;\n    }, [])\n\n    const onChangeNpwpFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, npwp: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangeRegIdFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, regId: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangePhotoFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, photo: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm verification-process-form\">\n                    <CardBody>\n                        <Row className=\"px-md-5\">\n                            <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Verification Process</div>\n                                {/* <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                                    setIsEdit(!isEdit)\n                                    setVerificationData(currentData)\n                                }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button> */}\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                        <Label>{props.registrationForm === 'business' ? 'Entity' : 'Registrant'} NPWP</Label>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                        <div style={{ width: '200px', height: '200px' }}>\n                                            {verificationData?.npwp?.preview && <img src={verificationData?.npwp?.preview} alt=\"npwp\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                            <input type='file' ref={npwpFile} style={{ display: 'none' }} disabled={!isEdit || isSubmitting} onChange={(e) => onChangeNpwpFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                            {!(!isEdit || isSubmitting) &&\n                                                <Button\n                                                    className={`btn border-0 upload-file-button ${verificationData?.npwp?.preview && 'filled'}`}\n                                                    onClick={() => npwpFile.current.click()}\n                                                >\n                                                    <i className=\"fa fa-2x fa-camera\" />\n                                                    <br />\n                                                    <div className=\"text-center d-none d-md-block\">\n                                                        Upload\n                                                        <br />\n                                                        <small>Max. 5 MB</small>\n                                                    </div>\n                                                </Button>\n                                            }\n                                        </div>\n                                        {touched.npwp && errors.npwp && <small className=\"text-danger\">{errors.npwp}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                            {(props.registrationForm === 'professional' || props.registrationForm === 'individual') &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Registrant ID</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <div style={{ width: '200px', height: '200px' }}>\n                                                {verificationData?.regId?.preview && <img src={verificationData?.regId?.preview} alt=\"regId\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                                <input type='file' ref={regIdFile} style={{ display: 'none' }} disabled={!isEdit || isSubmitting} onChange={(e) => onChangeRegIdFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                                {!(!isEdit || isSubmitting) &&\n                                                    <Button\n                                                        className={`btn border-0 upload-file-button ${verificationData?.regId?.preview && 'filled'}`}\n                                                        onClick={() => regIdFile.current.click()}\n                                                    >\n                                                        <i className=\"fa fa-2x fa-camera\" />\n                                                        <br />\n                                                        <div className=\"text-center d-none d-md-block\">\n                                                            Upload\n                                                            <br />\n                                                            <small>Max. 5 MB</small>\n                                                        </div>\n                                                    </Button>\n                                                }\n                                            </div>\n                                            {touched.regId && errors.regId && <small className=\"text-danger\">{errors.regId}</small>}\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                            {props.registrationForm === 'professional' &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Photo Profile</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <div style={{ width: '200px', height: '200px' }}>\n                                                {verificationData?.photo?.preview && <img src={verificationData?.photo?.preview} alt=\"profile\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                                <input type='file' ref={photoFile} style={{ display: 'none' }} disabled={!isEdit || isSubmitting} onChange={(e) => onChangePhotoFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                                {!(!isEdit || isSubmitting) &&\n                                                    <Button\n                                                        className={`btn border-0 upload-file-button ${verificationData?.photo?.preview && 'filled'}`}\n                                                        onClick={() => photoFile.current.click()}\n                                                    >\n                                                        <i className=\"fa fa-2x fa-camera\" />\n                                                        <br />\n                                                        <div className=\"text-center d-none d-md-block\">\n                                                            Upload\n                                                            <br />\n                                                            <small>Max. 5 MB</small>\n                                                        </div>\n                                                    </Button>\n                                                }\n                                            </div>\n                                            {touched.photo && errors.photo && <small className=\"text-danger\">{errors.photo}</small>}\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                            {isEdit &&\n                                <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                    <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                                </Col>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Button, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\n\n\nexport default (props) => {\n    const data = props.data;\n    const currentData = useMemo(() => ({\n        businessName: data.name ?? '',\n        sector: { label: data.sector.name, value: data.sector.id } ?? '',\n        companySize: data.size ?? '',\n        aboutUs: data.about ?? '',\n        npwpNumber: data.npwp ?? '',\n        address: data.address ?? '',\n        province: { label: data.province.name, value: data.province.id } ?? '',\n        phone: data.phoneNumber ?? '',\n    }), [data])\n\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            businessName: Yup.string().required().label('Business Name'),\n            sector: Yup.string().required().label('Sector'),\n            companySize: Yup.string().required().oneOf(['<10', '11-50', '50-100', '100-500', '>500']).label('Company Size'),\n            aboutUs: Yup.string().required().label('About Us'),\n            npwpNumber: Yup.string().required().label('NPWP Number'),\n            address: Yup.string().required().label('Address'),\n            province: Yup.string().required().label('Province'),\n            phone: Yup.string().required().label('Phone'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><CompanyInformationForm currentData={currentData} companyInformationData={values} setCompanyInformationData={setValues} handleSubmit={handleSubmit} isSubmitting={isSubmitting} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><ContactInformationForm currentData={currentData} contactData={values} setContactData={setValues} handleSubmit={handleSubmit} isSubmitting={isSubmitting} touched={touched} errors={errors} /></Col>\n        </Row>\n    );\n}\n\nconst CompanyInformationForm = ({ currentData, companyInformationData, setCompanyInformationData, handleSubmit, isSubmitting, touched, errors }) => {\n    const [isEdit] = useState(false);\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeBusinessName = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, businessName: value }))\n    }, [setCompanyInformationData])\n\n    const handleChangecompanySize = useCallback((e) => {\n        const { value, checked } = e.target;\n        setCompanyInformationData(old => ({ ...old, companySize: checked ? value : '' }))\n    }, [setCompanyInformationData])\n\n    const handleChangeSector = useCallback((e) => {\n        setCompanyInformationData(old => ({ ...old, sector: e }))\n    }, [setCompanyInformationData])\n\n    const handleChangeNpwpNumber = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, npwpNumber: value }))\n    }, [setCompanyInformationData])\n\n    const handleChangeAboutUs = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, aboutUs: value }))\n    }, [setCompanyInformationData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-md-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">COMPANY INFORMATION</div>\n                        {/* <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                    (!isEdit)\n                            setCompanyInformationData(currentData)\n                        }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button> */}\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"businessName\">Business Entity</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"businessName\" id=\"businessName\" disabled={!isEdit || isSubmitting} value={companyInformationData.businessName} onChange={(e) => handleChangeBusinessName(e)} placeholder=\"Business Entity Field...\" />\n                                {touched.businessName && errors.businessName && <small className=\"text-danger\">{errors.businessName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"sector\">Sector</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={sectors}\n                                    placeholder=\"Choose a socter...\"\n                                    value={companyInformationData.sector}\n                                    onChange={(e) => handleChangeSector(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    isDisabled={!isEdit || isSubmitting}\n                                />\n                                {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"companySize\">Company Size</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size1\" value=\"<10\" disabled={!isEdit || isSubmitting} checked={companyInformationData.companySize === \"<10\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size1\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            {\"<10\"}\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size2\" value=\"11-50\" disabled={!isEdit || isSubmitting} checked={companyInformationData.companySize === \"11-50\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size2\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            11-50\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size3\" value=\"50-100\" disabled={!isEdit || isSubmitting} checked={companyInformationData.companySize === \"50-100\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size3\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            50-100\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size4\" value=\"100-500\" disabled={!isEdit || isSubmitting} checked={companyInformationData.companySize === \"100-500\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size4\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            100-500\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size1\" value=\">500\" disabled={!isEdit || isSubmitting} checked={companyInformationData.companySize === \">500\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size1\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            {\">500\"}\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.companySize && errors.companySize && <small className=\"text-danger\">{errors.companySize}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"aboutUs\">About Us</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"aboutUs\"\n                                    id=\"aboutUs\"\n                                    className=\"form-control\"\n                                    placeholder=\"About Us Field...\"\n                                    value={companyInformationData.aboutUs}\n                                    onChange={(e) => handleChangeAboutUs(e)}\n                                    disabled={!isEdit || isSubmitting}\n                                />\n                                {touched.aboutUs && errors.aboutUs && <small className=\"text-danger\">{errors.aboutUs}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"npwpNumber\">NPWP Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"npwpNumber\" id=\"npwpNumber\" disabled={!isEdit || isSubmitting} value={companyInformationData.npwpNumber} onChange={(e) => handleChangeNpwpNumber(e)} placeholder=\"NPWP Number Field...\" />\n                                {touched.npwpNumber && errors.npwpNumber && <small className=\"text-danger\">{errors.npwpNumber}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    {isEdit &&\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                        </Col>\n                    }\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nconst ContactInformationForm = ({ currentData, contactData, setContactData, handleSubmit, isSubmitting, touched, errors }) => {\n    const [isEdit] = useState(false);\n    const { data: getProvince } = useDataProvinces();\n    const province = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const handleChangeProvince = useCallback((e) => {\n        setContactData(old => ({ ...old, province: e }))\n    }, [setContactData])\n\n    const handleChangeAddress = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, address: value }))\n    }, [setContactData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, phone: value }))\n    }, [setContactData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-md-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">CONTACT INFORMATION</div>\n                        {/* <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                            setIsEdit(!isEdit)\n                            setContactData(currentData)\n                        }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button> */}\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"address\">Address</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"address\"\n                                    id=\"address\"\n                                    className=\"form-control\"\n                                    placeholder=\"Address Field...\"\n                                    value={contactData.address}\n                                    onChange={(e) => handleChangeAddress(e)}\n                                    disabled={!isEdit || isSubmitting}\n                                />\n                                {touched.address && errors.address && <small className=\"text-danger\">{errors.address}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"province\">Province</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={province}\n                                    placeholder=\"Choose province...\"\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={contactData.province}\n                                    onChange={(e) => handleChangeProvince(e)}\n                                    isDisabled={!isEdit || isSubmitting}\n                                />\n                                {touched.province && errors.province && <small className=\"text-danger\">{errors.province}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Mobile Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" disabled={!isEdit || isSubmitting} value={contactData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Mobile Phone Field...\"\n                                    onWheel={(e) => { e.target.blur() }}\n                                />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    {isEdit &&\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                        </Col>\n                    }\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Input, Label, Button, Spinner } from \"reactstrap\";\nimport Select from 'react-select';\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\n\nexport default (props) => {\n    const data = props.data;\n\n    const currentData = useMemo(() => ({\n        firstName: data.registrantInformation.firstName ?? '',\n        lastName: data.registrantInformation.lastName ?? '',\n        email: data.registrantInformation.email ?? '',\n        phone: data.registrantInformation.phoneNumber ?? '',\n        idType: { label: 'KTP', value: 'ktp' },\n        idNumber: data.registrantInformation.identityNumber ?? '',\n        jobTitle: data.registrantInformation.jobTitle ?? '',\n    }), [data])\n\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            firstName: Yup.string().required().label('First Name'),\n            lastName: Yup.string().required().label('Last Name'),\n            email: Yup.string().required().email().label('Email'),\n            phone: Yup.string().required().label('Phone'),\n            idType: Yup.string().required().label('ID Type'),\n            idNumber: Yup.string().required().label('ID Number'),\n            jobTitle: Yup.string().required().label('Job Title'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit, isSubmitting } = useFormik({\n        initialValues: currentData,\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><RegistrantInformationForm currentData={currentData} registrantData={values} setRegistrantData={setValues} handleSubmit={handleSubmit} isSubmitting={isSubmitting} touched={touched} errors={errors} /></Col>\n        </Row>\n    );\n}\n\nexport const RegistrantInformationForm = ({ currentData, registrantData, setRegistrantData, handleSubmit, isSubmitting, touched, errors }) => {\n    const [isEdit,] = useState(false);\n    const idType = [\n        { label: 'KTP', value: 'ktp' },\n    ]\n\n    const handleChangeFirstName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, firstName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeLastName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, lastName: value }))\n    }, [setRegistrantData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, phone: value }))\n    }, [setRegistrantData])\n\n    const handleChangeEmail = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, email: value }))\n    }, [setRegistrantData])\n\n    const handleChangeIdType = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, idType: e }))\n    }, [setRegistrantData])\n\n    const handleChangeIdNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, idNumber: value }))\n    }, [setRegistrantData])\n\n    const handleChangeJobTitle = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, jobTitle: value }))\n    }, [setRegistrantData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-md-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                        {/* <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => {\n                            setIsEdit(!isEdit)\n                            setRegistrantData(currentData)\n                        }} disabled={isEdit && isSubmitting}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button> */}\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"firstName\">First Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" disabled={!isEdit || isSubmitting} value={registrantData.firstName} onChange={(e) => handleChangeFirstName(e)} placeholder=\"First Name Field...\" />\n                                {touched.firstName && errors.firstName && <small className=\"text-danger\">{errors.firstName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"lastName\">Last Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" disabled={!isEdit || isSubmitting} value={registrantData.lastName} onChange={(e) => handleChangeLastName(e)} placeholder=\"Last Name Field...\" />\n                                {touched.lastName && errors.lastName && <small className=\"text-danger\">{errors.lastName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"email\">Email</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"email\" name=\"email\" id=\"email\" disabled={!isEdit || isSubmitting} value={registrantData.email} onChange={(e) => handleChangeEmail(e)} placeholder=\"Email Field...\" />\n                                {touched.email && errors.email && <small className=\"text-danger\">{errors.email}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Mobile Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" disabled={!isEdit || isSubmitting} value={registrantData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Mobile Phone Field...\"\n                                    onWheel={(e) => { e.target.blur() }} />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idType\">ID Type</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={idType}\n                                    placeholder=\"Choose id type...\"\n                                    value={registrantData.idType}\n                                    onChange={(e) => handleChangeIdType(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    isDisabled={!isEdit || isSubmitting}\n                                />\n                                {touched.idType && errors.idType && <small className=\"text-danger\">{errors.idType}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idNumber\">ID Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"idNumber\" id=\"idNumber\"\n                                    disabled={!isEdit || isSubmitting} value={registrantData.idNumber} onChange={(e) => handleChangeIdNumber(e)} placeholder=\"ID Number Field...\"\n                                    onWheel={(e) => { e.target.blur() }} onInput={(e) => { e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 16) }}\n                                />\n                                {touched.idNumber && errors.idNumber && <small className=\"text-danger\">{errors.idNumber}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"jobTitle\">Job Title</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" disabled={!isEdit || isSubmitting} value={registrantData.jobTitle} onChange={(e) => handleChangeJobTitle(e)} placeholder=\"Job Title Field...\" />\n                                {touched.jobTitle && errors.jobTitle && <small className=\"text-danger\">{errors.jobTitle}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    {isEdit &&\n                        <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                            <Button color=\"primary\" className=\"float-right\" onClick={handleSubmit} disabled={isSubmitting}>{isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : \"Save\"}</Button>\n                        </Col>\n                    }\n                </Row>\n            </CardBody>\n        </Card >\n    );\n}\n","import React, { useCallback, useState } from \"react\"\nimport {\n    translate,\n} from 'react-switch-lang';\nimport StepWizard from 'react-step-wizard';\nimport { NavigationDot } from \"./Components/Navigation\";\nimport RegistrantForm from \"./Forms/RegistrantForm\";\nimport EducationForm from \"./Forms/EducationForm\";\nimport WorkExprerienceForm from \"./Forms/WorkExprerienceForm\";\nimport ProjectExperienceForm from \"./Forms/ProjectExperienceForm\";\nimport SkillSectorForm from \"./Forms/SkillSectorForm\";\nimport DocumentVerificationForm from \"./Forms/DocumentVerificationForm\";\nimport { useFormik } from \"formik\";\nimport { Button, Card, CardBody, Col, Modal, ModalBody, Row, Spinner } from \"reactstrap\";\nimport CompanyInformationForm from \"./Forms/CompanyInformationForm\";\nimport RegistrantCompanyForm from \"./Forms/RegistrantCompanyForm\";\nimport { useHistory } from \"react-router-dom\";\nimport request from \"../../../utils/request\";\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\nimport { useAuthUser } from \"../../../store\";\nimport noImage from '../../../assets/illustrations/image-error.png'\nimport { DefaultImageUser } from '../../../components/DefaultImageUser/DefaultImageUser';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Profile(props) {\n    const history = useHistory();\n    const authUser = useAuthUser();\n    const registrationForm = authUser.role\n    const [modalSubmitForm, setModalSubmitForm] = useState(false);\n    const [, setInstance] = useState(null);\n\n    const { setValues: setRegistrationData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: {\n            companyInformationForm: '',\n            registrantForm: '',\n            educationForm: '',\n            workExperienceForm: '',\n            projectExperienceForm: '',\n            skillSectorForm: '',\n            verificationForm: '',\n        },\n        // validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            // if (!validationForm(instance, registrationForm, registrationData)) setModalSubmitForm(false)\n\n            let formData = new FormData()\n            formData.append('role', registrationForm)\n            formData.append('email', values.registrantForm.email)\n            formData.append('password', values.verificationForm.password)\n            formData.append('firstName', values.registrantForm.firstName)\n            formData.append('lastName', values.registrantForm.lastName)\n            formData.append('phoneNumber', values.registrantForm.phone)\n            formData.append('identityType', values.registrantForm.idType.value)\n            formData.append('identityNumber', values.registrantForm.idNumber)\n\n            if (registrationForm === 'company') {\n                formData.append('clientIdSector', values.companyInformationForm.sector.value)\n                formData.append('companyName', values.companyInformationForm.businessName)\n                formData.append('companySize', values.companyInformationForm.companySize)\n                formData.append('about', values.companyInformationForm.aboutUs)\n                formData.append('npwp', values.companyInformationForm.npwpNumber)\n                formData.append('address', values.companyInformationForm.address)\n                formData.append('idProvince', values.companyInformationForm.province.value)\n                formData.append('companyPhoneNumber', values.companyInformationForm.phone)\n                formData.append('jobTitle', values.registrantForm.jobTitle)\n            } else {\n                formData.append('idProvince', values.registrantForm.province.value)\n                formData.append('address', values.registrantForm.address)\n                formData.append('dob', moment(values.registrantForm.dateOfBirth).format('YYYY-MM-DD'))\n                formData.append('gender', values.registrantForm.gender)\n                formData.append('npwp', values.registrantForm.npwpNumber)\n\n                if (registrationForm === 'individual') {\n                    formData.append('clientIdSector', values.registrantForm.sector.value)\n                }\n\n                if (registrationForm === 'professional') {\n                    formData.append('educations', JSON.stringify(values.educationForm.map(v => ({ idSchool: v.school.value, idEducationDegree: v.degree.value, idEducationField: v.education.value, graduationYear: v.graduationYear.value }))))\n                    formData.append('workExperiences', JSON.stringify(values.workExperienceForm.map(v => ({ idProvince: v.location.value, idSector: v.sector.value, jobTitle: v.job, companyName: v.company, employmentType: v.employementType.value, startDate: moment(v.startDate).format('YYYY-MM-DD'), endDate: moment(v.endDate).format('YYYY-MM-DD'), isStillPresent: v.endDatePresent, skills: v.skills.map(s => ({ idSkill: s.value })) }))))\n                    formData.append('projectExperiences', JSON.stringify(values.projectExperienceForm.map(v => ({ idProvince: v.province.value, idCountry: v.country.value, idSector: v.sector.value, clientName: v.client, projectName: v.projectName, projectRole: v.projectRole, description: v.description, startDate: moment(v.startDate).format('YYYY-MM-DD'), endDate: moment(v.endDate).format('YYYY-MM-DD'), skills: v.skills.map(s => ({ idSkill: s.value })) }))))\n                    formData.append('skills', JSON.stringify(values.skillSectorForm.skills.map(v => ({ idSkill: v.value }))))\n                    formData.append('sectors', JSON.stringify(values.skillSectorForm.sectors.map(v => ({ idSector: v.value }))))\n                }\n            }\n\n            if (values.verificationForm.photo) formData.append('avatar', values.verificationForm.photo.file, values.verificationForm.photo.file.name)\n            if (values.verificationForm.npwp) formData.append('npwp', values.verificationForm.npwp.file, values.verificationForm.npwp.file.name)\n            if (values.verificationForm.regId) formData.append('identity', values.verificationForm.regId.file, values.verificationForm.regId.file.name)\n            request.post(`v1/auth/signup`, formData)\n                .then(() => {\n                    toast.success('Register success')\n                    setModalSubmitForm(false)\n                    history.push('/')\n                })\n                .catch((error) => toast.error(error.response.data.message))\n                .finally(() => setSubmitting(false))\n        }\n    })\n\n    // useEffect(() => {\n    //     if (instance) {\n    //         validationForm(instance, registrationForm, registrationData)\n    //     }\n    //     // eslint-disable-next-line\n    // }, [instance, registrationForm])\n\n    const handleFinishRegistration = () => {\n        setModalSubmitForm(!modalSubmitForm)\n    }\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\">\n                <Biodata data={authUser} />\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <StepWizard\n                            isHashEnabled\n                            className=\"register-form\"\n                            nav={<NavigationDot role={registrationForm} />}\n                            instance={setInstance}\n                            transitions={{\n                                enterRight: ``,\n                                enterLeft: ``,\n                                exitRight: ``,\n                                exitLeft: ``,\n                                intro: ``,\n                            }}\n                        >\n                            {registrationForm === 'professional' && <RegistrantForm data={authUser} step={1} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n                            {registrationForm === 'professional' && <EducationForm data={authUser} step={2} registrationForm={registrationForm} hashKey=\"education\" stepName=\"education\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, educationForm: data }))} />}\n                            {registrationForm === 'professional' && <WorkExprerienceForm data={authUser} step={3} registrationForm={registrationForm} hashKey=\"workExperience\" stepName=\"workExperience\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, workExperienceForm: data }))} />}\n                            {registrationForm === 'professional' && <ProjectExperienceForm data={authUser} step={4} registrationForm={registrationForm} hashKey=\"projectExperience\" stepName=\"projectExperience\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, projectExperienceForm: data }))} />}\n                            {registrationForm === 'professional' && <SkillSectorForm data={authUser} step={5} registrationForm={registrationForm} hashKey=\"skillSector\" stepName=\"skillSector\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, skillSectorForm: data }))} />}\n                            {registrationForm === 'professional' && <DocumentVerificationForm data={authUser} step={6} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n\n                            {registrationForm === 'company' && <CompanyInformationForm data={authUser} step={1} registrationForm={registrationForm} hashKey=\"companyInformation\" stepName=\"companyInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, companyInformationForm: data }))} />}\n                            {registrationForm === 'company' && <RegistrantCompanyForm data={authUser} step={2} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n                            {registrationForm === 'company' && <DocumentVerificationForm data={authUser} step={3} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n\n                            {registrationForm === 'individual' && <RegistrantForm data={authUser} step={1} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n                            {registrationForm === 'individual' && <DocumentVerificationForm data={authUser} step={2} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n                        </StepWizard>\n                    </CardBody>\n                </Card>\n                <Modal isOpen={modalSubmitForm} centered toggle={handleFinishRegistration}>\n                    <ModalBody className=\"p-5\">\n                        <Row>\n                            <Col xs=\"12\" className=\"mb-5\">\n                                Are you sure with your registration data?\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                <Button color=\"secondary\" className=\"mr-2\" onClick={handleFinishRegistration}>Cancel</Button>\n                                <Button color=\"primary\" disabled={isSubmitting} onClick={handleSubmit}>\n                                    {isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : 'Submit'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                </Modal>\n            </Col>\n        </Row>\n    );\n}\n\nconst Biodata = ({ data }) => {\n    const [about, setAbout] = useState(data.about);\n    const [isEdit, setIsEdit] = useState(false);\n\n    const onErrorImage = useCallback((e) => {\n        e.target.src = noImage;\n        e.target.onerror = null;\n    }, [])\n\n    const handleChangeAbout = useCallback((e) => {\n        const { value } = e.target;\n        setAbout(value)\n    }, [setAbout])\n\n    const handleSubmit = useCallback(() => {\n        request.put('v1/user/me/about', { about })\n            .then((response) => {\n                toast.success('Your biodata was updated successfully')\n                setIsEdit(false)\n            })\n            .catch(() => toast.error('Your biodata failed to update'))\n    }, [about])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <div className=\"d-md-flex py-3\">\n                            <div className=\"ml-4 mr-5\">\n                                {data.avatar ?\n                                    <img src={data.avatar.replace('http://127.0.0.1:5000', 'https://bepinion.com')} alt=\"profile\" width={180} height={180} style={{ objectFit: 'cover' }} onError={(e) => onErrorImage(e)} className=\"rounded-circle shadow-sm mb-3\" />\n                                    :\n                                    <DefaultImageUser text={data.role !== 'professional' ? `${data.name}` : `${data.firstName} ${data.lastName}`} role={data?.role} size={200} />\n                                }\n                            </div>\n                            <div className=\"w-100\">\n                                {data.role === 'professional' ?\n                                    <div className=\"font-2xl font-weight-bold mb-2\">{data.firstName} {data.lastName}</div>\n                                    :\n                                    <>\n                                        <div className=\"font-2xl font-weight-bold mb-2\">{data.name}</div>\n                                        <div className=\"font-lg mb-2\">{data.registrantInformation.firstName} {data.registrantInformation.lastName}</div>\n                                    </>\n                                }\n                                <Row className=\"mb-2\">\n                                    <Col xs=\"12\" md=\"3\">\n                                        <small>Phone number</small>\n                                        <div className=\"font-weight-bold\">{data.phoneNumber}</div>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"3\">\n                                        <small>Joined at</small>\n                                        <div className=\"font-weight-bold\">{moment(data.createdAt).format('DD MMMM YYYY')}</div>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"6\">\n                                        <small style={{ cursor: \"pointer\" }} onClick={() => {\n                                            setIsEdit(!isEdit)\n                                        }}>\n                                            About me <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}\n                                        </small>\n                                        <div>\n                                            {!isEdit\n                                                ? data.about ?? 'Hello! Thank you for visiting my profile. I will update this section soon.'\n                                                : <TextareaAutosize\n                                                    minRows={3}\n                                                    name=\"address\"\n                                                    id=\"address\"\n                                                    className=\"form-control\"\n                                                    placeholder=\"Address Field...\"\n                                                    value={about ?? data.about}\n                                                    disabled={!isEdit}\n                                                    onChange={(e) => handleChangeAbout(e)}\n                                                />\n                                            }\n                                            {isEdit &&\n                                                <div className=\"text-pinion-primary float-right mt-2\" style={{ cursor: \"pointer\" }} onClick={handleSubmit}>\n                                                    Save\n                                                </div>\n                                            }\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default translate(Profile);\n"],"sourceRoot":""}