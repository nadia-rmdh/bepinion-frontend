{"version":3,"sources":["views/Menu/Profile/Components/Navigation.js","views/Menu/Profile/Forms/RegistrantForm.js","views/Menu/Profile/Forms/EducationForm.js","views/Menu/Profile/Forms/WorkExprerienceForm.js","views/Menu/Profile/Forms/ProjectExperienceForm.js","views/Menu/Profile/Forms/SkillSectorForm.js","views/Menu/Profile/Forms/DocumentVerificationForm.js","views/Menu/Profile/Forms/CompanyInformationForm.js","views/Menu/Profile/Forms/RegistrantCompanyForm.js","views/Menu/Profile/Profile.js"],"names":["NavigationDot","props","pageName","useCallback","i","role","dots","totalSteps","push","className","Nav","tabs","map","p","NavItem","key","NavLink","active","currentStep","onClick","goToStep","data","useFormik","initialValues","firstName","lastName","gender","dateOfBirth","dob","moment","idType","label","value","idNumber","identityNumber","npwpNumber","npwp","address","province","phone","phoneNumber","email","sector","id","validationSchema","optional","registrationForm","Yup","required","shape","oneOf","onSubmit","values","setSubmitting","setErrors","onSubmitForm","nextStep","touched","errors","setValues","handleSubmit","Row","Col","xs","registrantData","setRegistrantData","contactData","setContactData","RegistrantInformationForm","useState","isEdit","setIsEdit","getSector","useDataSectors","sectors","useMemo","name","handleChangeFirstName","e","target","old","handleChangeLastName","handleChangeSector","handleChangeGender","checked","handleChangeDateOfBirth","handleChangeIdType","handleChangeIdNumber","handleChangeNpwpNumber","Card","CardBody","Button","color","icon","md","lg","Label","for","Input","type","disabled","onChange","placeholder","options","isDisabled","components","DropdownIndicator","IndicatorSeparator","InputGroup","InputGroupAddon","addonType","InputGroupText","CustomInput","initialSettings","singleDatePicker","showDropdowns","startDate","Date","maxDate","autoApply","onApply","style","background","cursor","padding","border","width","format","ContactInformationForm","getProvince","useDataProvinces","handleChangeProvince","handleChangeAddress","handleChangePhone","handleChangeEmail","minRows","getDegree","useDataEducationDegrees","degree","getSchool","useDataSchools","school","getEduField","useDataEducationFields","eduField","education","graduationYear","of","educationData","setEducationData","handleChangeDegree","edu","handleChangeSchool","handleChangeEducation","handleChangeGraduationYear","handleAddEducationData","length","handleDeleteEducationData","filter","SelectYear","onChanged","provinces","employementTypes","getSkills","useDataSkills","skills","job","company","employementType","location","endDate","endDatePresent","workExperienceData","setWorkExperienceData","work","handleChangeEmployementType","handleChangeLocation","handleChangeJob","handleChangeCompany","handleChangeStartDate","handleChangeEndDate","handleChangePresent","handleChangeSkills","handleAddWorkExperienceData","handleDeleteWorkExperienceData","selected","showMonthYearPicker","showFullMonthYearPicker","showFourColumnMonthYearPicker","dateFormat","placeholderText","wrapperClassName","minDate","closeMenuOnSelect","isClearable","isMulti","hasProjectExperience","setHasProjectExperience","getCountries","useDataCountries","countries","projectName","client","projectRole","country","description","projectExperienceData","setProjectExperienceData","project","handleChangeCountry","handleChangeProjectName","handleChangeClient","handleChangeProjectRole","handleChangeDescription","handleAddprojectExperienceData","handleDeleteprojectExperienceData","colorSkills","min","max","skillSectorData","setSkillSectorData","colourStyles","multiValue","styles","backgroundColor","multiValueLabel","opt","v","dataOptions","find","u","Math","floor","random","isOptionDisabled","option","npwpFile","useRef","regIdFile","photoFile","password","passwordConfirmation","showPassword","setShowPassword","regId","photo","confirmed","privacy","file","onFinishRegistration","verificationData","setVerificationData","onErrorImage","src","noImage","onerror","onChangeNpwpFile","preventDefault","files","size","toast","error","preview","URL","createObjectURL","onChangeRegIdFile","onChangePhotoFile","onChangePassword","onChangePasswordConfirmation","onChangeConfirmation","onChangePrivacy","height","alt","objectFit","position","onError","ref","display","accept","current","click","whiteSpace","businessName","companySize","aboutUs","companyInformationData","setCompanyInformationData","CompanyInformationForm","handleChangeBusinessName","handleChangecompanySize","handleChangeAboutUs","jobTitle","handleChangeJobTitle","Biodata","avatar","DefaultImageUser","text","registrantInformation","createdAt","about","validationForm","instance","registrationData","registrantForm","goToNamedStep","educationForm","workExperienceForm","projectExperienceForm","skillSectorForm","verificationForm","companyInformationForm","translate","useLocation","history","useHistory","authUser","useAuthUser","modalSubmitForm","setModalSubmitForm","setInstance","formData","FormData","append","JSON","stringify","idSchool","idEducationDegree","idEducationField","idProvince","idSector","companyName","employmentType","isStillPresent","s","idSkill","idCountry","clientName","request","post","then","success","catch","response","message","finally","setRegistrationData","isSubmitting","useEffect","handleFinishRegistration","isHashEnabled","nav","transitions","enterRight","enterLeft","exitRight","exitLeft","intro","RegistrantForm","step","hashKey","stepName","state","EducationForm","WorkExprerienceForm","ProjectExperienceForm","SkillSectorForm","DocumentVerificationForm","RegistrantCompanyForm","Modal","isOpen","centered","toggle","ModalBody","Spinner"],"mappings":"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","file":"static/js/18.348f0889.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button, Col, Nav, NavItem, NavLink, Row } from 'reactstrap';\nimport { ArcherContainer, ArcherElement } from 'react-archer'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport const NavigationDot = (props) => {\n    const pageName = useCallback((i) => {\n        if (props.role === 'professional') {\n            if (i === 1) return 'Registrant Information'\n            if (i === 2) return 'Education'\n            if (i === 3) return 'Work Experience'\n            if (i === 4) return 'Project Experience'\n            if (i === 5) return 'Skill'\n            if (i === 6) return 'Document Verification'\n        }\n        if (props.role === 'company') {\n            if (i === 1) return 'Company Information'\n            if (i === 2) return 'Registrant Information'\n            if (i === 3) return 'Document Verification'\n        }\n        if (props.role === 'individual') {\n            if (i === 1) return 'Registrant Information'\n            if (i === 2) return 'Document Verification'\n        }\n    }, [props.role])\n\n    const pageIcon = useCallback((i) => {\n        if (props.role === 'professional') {\n            if (i === 1) return 'user'\n            if (i === 2) return 'university'\n            if (i === 3) return 'building'\n            if (i === 4) return 'laptop-house'\n            if (i === 5) return 'briefcase'\n            if (i === 6) return 'book'\n        }\n        if (props.role === 'company') {\n            if (i === 1) return 'building'\n            if (i === 2) return 'user'\n            if (i === 3) return 'book'\n        }\n        if (props.role === 'individual') {\n            if (i === 1) return 'user'\n            if (i === 2) return 'book'\n        }\n    }, [props.role])\n\n    const dots = [];\n    for (let i = 1; i <= props.totalSteps; i += 1) {\n        dots.push(i);\n    }\n\n    return (\n        <div className=\"register-nav mb-4\">\n            <div className={`mb-3 mb-md-3`}>\n                <Nav tabs className=\"text-center border-bottom-0\">\n                    {dots.map((p, i) => (\n                        <NavItem key={i}>\n                            <NavLink className=\"profile-tabs-item\" active={props.currentStep === i + 1} onClick={() => props.goToStep(i + 1)}>\n                                {pageName(i + 1)}\n                            </NavLink>\n                        </NavItem>\n                    ))}\n                </Nav>\n            </div>\n        </div>\n    );\n};","import React, { useCallback, useMemo, useState } from \"react\"\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { Card, CardBody, Row, Col, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Button } from \"reactstrap\";\nimport Select from 'react-select';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport moment from \"moment\";\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nexport default (props) => {\n    const data = props.data;\n\n    const ValidationFormSchema = () => {\n        let optional;\n        if (props.registrationForm === 'individual') optional = { sector: Yup.string().required().label('Sector') }\n        return Yup.object().shape({\n            ...optional,\n            firstName: Yup.string().required().label('First Name'),\n            lastName: Yup.string().required().label('Last Name'),\n            gender: Yup.string().required().oneOf(['L', 'P']).label('Gender'),\n            dateOfBirth: Yup.string().required().label('Date of Birth'),\n            idType: Yup.string().required().label('ID Type'),\n            idNumber: Yup.string().required().label('ID Number'),\n            npwpNumber: Yup.string().required().label('NPWP Number'),\n            address: Yup.string().required().label('Address'),\n            province: Yup.string().required().label('Province'),\n            phone: Yup.string().required().label('Phone'),\n            email: Yup.string().required().email().label('Email'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit } = useFormik({\n        initialValues: {\n            firstName: data.firstName ?? '',\n            lastName: data.lastName ?? '',\n            gender: data.gender ?? '',\n            dateOfBirth: data.dob ? moment(data.dob) : '',\n            idType: { label: 'KTP', value: 'ktp' },\n            idNumber: data.identityNumber ?? '',\n            npwpNumber: data.npwp ?? '',\n            address: data.address ?? '',\n            province: data.province ?? '',\n            phone: data.phoneNumber ?? '',\n            email: data.email ?? '',\n            sector: data?.sector?.id ?? '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><RegistrantInformationForm registrantData={values} setRegistrantData={setValues} touched={touched} errors={errors} {...props} /></Col>\n            <Col xs=\"12\"><ContactInformationForm contactData={values} setContactData={setValues} touched={touched} errors={errors} /></Col>\n        </Row>\n    );\n}\n\nexport const RegistrantInformationForm = ({ registrantData, setRegistrantData, touched, errors, registrationForm }) => {\n    const [isEdit, setIsEdit] = useState(false);\n\n    const idType = [\n        { label: 'KTP', value: 'ktp' },\n    ]\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeFirstName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, firstName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeLastName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, lastName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeSector = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, sector: e }))\n    }, [setRegistrantData])\n\n    const handleChangeGender = useCallback((e) => {\n        const { value, checked } = e.target;\n        setRegistrantData(old => ({ ...old, gender: checked ? value : '' }))\n    }, [setRegistrantData])\n\n    const handleChangeDateOfBirth = useCallback((value) => {\n        setRegistrantData(old => ({ ...old, dateOfBirth: value }))\n    }, [setRegistrantData])\n\n    const handleChangeIdType = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, idType: e }))\n    }, [setRegistrantData])\n\n    const handleChangeIdNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, idNumber: value }))\n    }, [setRegistrantData])\n\n    const handleChangeNpwpNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, npwpNumber: value }))\n    }, [setRegistrantData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                        <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => setIsEdit(!isEdit)}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"firstName\">First Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={registrantData.firstName} disabled={!isEdit} onChange={(e) => handleChangeFirstName(e)} placeholder=\"First Name Field...\" />\n                                {touched.firstName && errors.firstName && <small className=\"text-danger\">{errors.firstName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"lastName\">Last Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={registrantData.lastName} disabled={!isEdit} onChange={(e) => handleChangeLastName(e)} placeholder=\"Last Name Field...\" />\n                                {touched.lastName && errors.lastName && <small className=\"text-danger\">{errors.lastName}</small>}\n                            </Col>\n                        </Row>\n                        {registrationForm === 'individual' &&\n                            <Row className=\"my-3\">\n                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                    <Label for=\"sector\">Sector</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                    <Select\n                                        options={sectors}\n                                        placeholder=\"Choose a socter...\"\n                                        value={registrantData.sector}\n                                        isDisabled={!isEdit}\n                                        onChange={(e) => handleChangeSector(e)}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    />\n                                    {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                                </Col>\n                            </Row>\n                        }\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"gender\">Gender</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"male\" value=\"L\" checked={registrantData.gender === \"L\" ? true : false} disabled={!isEdit} onChange={(e) => handleChangeGender(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"male\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Male\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"female\" value=\"P\" checked={registrantData.gender === \"P\" ? true : false} disabled={!isEdit} onChange={(e) => handleChangeGender(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"female\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            Female\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.gender && errors.gender && <small className=\"text-danger\">{errors.gender}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"dateOfBirth\">Date of Birth</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                {!isEdit ?\n                                    registrantData.dateOfBirth ? registrantData.dateOfBirth.format('DD/MM/YYYY') : 'DD/MMMM/YYYY'\n                                    :\n                                    <DateRangePicker\n                                        initialSettings={{\n                                            singleDatePicker: true,\n                                            showDropdowns: true,\n                                            startDate: new Date(),\n                                            maxDate: new Date(),\n                                            autoApply: true,\n                                        }}\n                                        onApply={(e, p) => handleChangeDateOfBirth(p.startDate)}\n                                    >\n                                        <div id=\"reportrange\" style={{ background: '#fff', cursor: 'pointer', padding: '5px 10px', border: '1px solid #ccc', width: '100%' }}>\n                                            <i className=\"fa fa-calendar mr-2\"></i><span>{registrantData.dateOfBirth ? registrantData.dateOfBirth.format('DD/MM/YYYY') : 'DD/MMMM/YYYY'}</span> <i className=\"fa fa-caret-down float-right\"></i>\n                                        </div>\n                                    </DateRangePicker>\n                                }\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idType\">ID Type</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={idType}\n                                    placeholder=\"Choose id type...\"\n                                    value={registrantData.idType}\n                                    isDisabled={!isEdit}\n                                    onChange={(e) => handleChangeIdType(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.idType && errors.idType && <small className=\"text-danger\">{errors.idType}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idNumber\">ID Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"idNumber\" id=\"idNumber\" value={registrantData.idNumber} disabled={!isEdit} onChange={(e) => handleChangeIdNumber(e)} placeholder=\"ID Number Field...\" />\n                                {touched.idNumber && errors.idNumber && <small className=\"text-danger\">{errors.idNumber}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"npwpNumber\">NPWP Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"npwpNumber\" id=\"npwpNumber\" value={registrantData.npwpNumber} disabled={!isEdit} onChange={(e) => handleChangeNpwpNumber(e)} placeholder=\"NPWP Number Field...\" />\n                                {touched.npwpNumber && errors.npwpNumber && <small className=\"text-danger\">{errors.npwpNumber}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card >\n    );\n}\n\nexport const ContactInformationForm = ({ contactData, setContactData, touched, errors }) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const { data: getProvince } = useDataProvinces();\n    const province = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n    const handleChangeProvince = useCallback((e) => {\n        setContactData(old => ({ ...old, province: e }))\n    }, [setContactData])\n\n    const handleChangeAddress = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, address: value }))\n    }, [setContactData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, phone: value }))\n    }, [setContactData])\n\n    const handleChangeEmail = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, email: value }))\n    }, [setContactData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3 d-flex justify-content-between\">\n                        <div className=\"font-xl font-weight-bold\">CONTACT INFORMATION</div>\n                        <Button color={`${isEdit ? 'danger' : 'primary'}`} onClick={() => setIsEdit(!isEdit)}> <FontAwesomeIcon icon={`${isEdit ? 'times' : 'edit'}`} /> {isEdit ? 'Cancel' : 'Edit'}</Button>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"address\">Address</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"address\"\n                                    id=\"address\"\n                                    className=\"form-control\"\n                                    placeholder=\"Address Field...\"\n                                    value={contactData.address}\n                                    disabled={!isEdit}\n                                    onChange={(e) => handleChangeAddress(e)}\n                                />\n                                {touched.address && errors.address && <small className=\"text-danger\">{errors.address}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"province\">Province</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={province}\n                                    placeholder=\"Choose province...\"\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={contactData.province}\n                                    isDisabled={!isEdit}\n                                    onChange={(e) => handleChangeProvince(e)}\n                                />\n                                {touched.province && errors.province && <small className=\"text-danger\">{errors.province}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" value={contactData.phone} disabled={!isEdit} onChange={(e) => handleChangePhone(e)} placeholder=\"Phone Field...\" />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"email\">Email</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={contactData.email} disabled={!isEdit} onChange={(e) => handleChangeEmail(e)} placeholder=\"Email Field...\" />\n                                {touched.email && errors.email && <small className=\"text-danger\">{errors.email}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label } from \"reactstrap\";\nimport Select from 'react-select';\nimport SelectYear from \"../../../../components/SelectYear\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataEducationDegrees from \"../../../../hooks/useDataEducationDegrees\";\nimport useDataEducationFields from \"../../../../hooks/useDataEducationFields\";\nimport useDataSchools from \"../../../../hooks/useDataSchools\";\n\nexport default (props) => {\n    const { data: getDegree } = useDataEducationDegrees();\n    const degree = useMemo(() => getDegree.map(p => ({ label: p.name, value: p.id })), [getDegree])\n\n    const { data: getSchool } = useDataSchools();\n    const school = useMemo(() => getSchool.map(p => ({ label: p.name, value: p.id })), [getSchool])\n\n    const { data: getEduField } = useDataEducationFields();\n    const eduField = useMemo(() => getEduField.map(p => ({ label: p.name, value: p.id })), [getEduField])\n\n    const ValidationFormSchema = () => {\n        return Yup.array().of(\n            Yup.object().shape({\n                degree: Yup.string().required().label('Degree'),\n                school: Yup.string().required().label('School'),\n                education: Yup.string().required().label('Education'),\n                graduationYear: Yup.string().required().label('Graduation Year'),\n            })\n        )\n    }\n\n    const { values: educationData, touched, errors, setValues: setEducationData, handleSubmit } = useFormik({\n        initialValues: [\n            {\n                id: 1,\n                degree: '',\n                school: '',\n                education: '',\n                graduationYear: '',\n            }\n        ],\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeDegree = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, degree: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeSchool = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, school: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeEducation = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, education: e }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleChangeGraduationYear = useCallback((e, i) => {\n        setEducationData(old => [...old].map(edu => {\n            if (edu.id === i) return { ...edu, graduationYear: { label: e.label, value: e.value } }\n            return { ...edu };\n        }))\n    }, [setEducationData])\n\n    const handleAddEducationData = useCallback(() => {\n        setEducationData(old => ([...old, { id: old[old.length - 1].id + 1, degree: '', school: '', education: '', graduationYear: '' }]))\n    }, [setEducationData])\n\n    const handleDeleteEducationData = useCallback((i) => {\n        setEducationData(old => ([...old].filter(edu => edu.id !== i)))\n    }, [setEducationData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Education</div>\n                            </Col>\n                            {educationData.map((edu, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <Card className=\"shadow-sm\">\n                                        <CardBody>\n                                            {i > 0 &&\n                                                <Row className=\"my-3\">\n                                                    <Col xs=\"12\">\n                                                        <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteEducationData(edu.id)}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                    </Col>\n                                                </Row>\n                                            }\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"degree\">Degree</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={degree}\n                                                        placeholder=\"Choose degree...\"\n                                                        onChange={(e) => handleChangeDegree(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.degree}\n                                                    />\n                                                    {touched[i]?.degree && errors[i]?.degree && <small className=\"text-danger\">{errors[i]?.degree}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"school\">School</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={school}\n                                                        placeholder=\"Choose school...\"\n                                                        onChange={(e) => handleChangeSchool(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.school}\n                                                    />\n                                                    {touched[i]?.school && errors[i]?.school && <small className=\"text-danger\">{errors[i]?.school}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"education\">Education</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={eduField}\n                                                        placeholder=\"Choose Education Field...\"\n                                                        onChange={(e) => handleChangeEducation(e, edu.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={edu.education}\n                                                    />\n                                                    {touched[i]?.education && errors[i]?.education && <small className=\"text-danger\">{errors[i]?.education}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"graduationYear\">Graduation year</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <SelectYear name=\"graduationYear\" id=\"graduationYear\" value={edu.graduationYear} onChanged={(e) => handleChangeGraduationYear(e, edu.id)} />\n                                                    {touched[i]?.graduationYear && errors[i]?.graduationYear && <small className=\"text-danger\">{errors[i]?.graduationYear}</small>}\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ))}\n                            <Col xs=\"12\">\n                                <Button color=\"success\" className=\"float-right\" onClick={handleAddEducationData}>Add Education</Button>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Datepicker from \"react-datepicker\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\n\nexport default (props) => {\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const { data: getProvince } = useDataProvinces();\n    const provinces = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const employementTypes = [\n        { label: 'Self employed', value: 'self_employed' },\n        { label: 'Employee', value: 'employee' },\n        { label: 'Public servant', value: 'public_servant' },\n        { label: 'Retiree', value: 'retiree' },\n        { label: 'Unemployed', value: 'unemployed' },\n    ]\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const ValidationFormSchema = () => {\n        return Yup.array().of(\n            Yup.object().shape({\n                job: Yup.string().required().label('Job'),\n                company: Yup.string().required().label('Company Name'),\n                sector: Yup.string().required().label('Sector'),\n                employementType: Yup.string().required().label('Employement Type'),\n                location: Yup.string().required().label('Location'),\n                startDate: Yup.string().required().label('Start Date'),\n                endDate: Yup.string().required().label('End Date'),\n                skills: Yup.string().required().label('Skills'),\n            })\n        )\n    }\n\n    const { values: workExperienceData, touched, errors, setValues: setWorkExperienceData, handleSubmit } = useFormik({\n        initialValues: [\n            {\n                id: 1,\n                job: '',\n                company: '',\n                sector: '',\n                employementType: '',\n                location: '',\n                startDate: '',\n                endDate: '',\n                endDatePresent: '',\n                skills: [],\n            }\n        ],\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeSector = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, sector: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeEmployementType = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, employementType: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeLocation = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, location: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeJob = useCallback((e, i) => {\n        const { value } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, job: value }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeCompany = useCallback((e, i) => {\n        const { value } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, company: value }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeStartDate = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, startDate: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeEndDate = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, endDate: e }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangePresent = useCallback((e, i) => {\n        const { value, checked } = e.target;\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, endDatePresent: checked ? value : '' }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleChangeSkills = useCallback((e, i) => {\n        setWorkExperienceData(old => [...old].map(work => {\n            if (work.id === i) return { ...work, skills: e ?? [] }\n            return { ...work };\n        }))\n    }, [setWorkExperienceData])\n\n    const handleAddWorkExperienceData = useCallback(() => {\n        setWorkExperienceData(old => ([...old, { id: old[old.length - 1].id + 1, job: '', company: '', sector: '', employementType: '', location: '', startDate: '', endDate: '', endDatePresent: '', skills: [], }]))\n    }, [setWorkExperienceData])\n\n    const handleDeleteWorkExperienceData = useCallback((i) => {\n        setWorkExperienceData(old => ([...old].filter(work => work.id !== i)))\n    }, [setWorkExperienceData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Work Experience</div>\n                            </Col>\n                            {workExperienceData.map((work, i) => (\n                                <Col xs=\"12\" key={i}>\n                                    <Card className=\"shadow-sm\">\n                                        <CardBody>\n                                            {i > 0 &&\n                                                <Row className=\"my-3\">\n                                                    <Col xs=\"12\">\n                                                        <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteWorkExperienceData(work.id)}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                    </Col>\n                                                </Row>\n                                            }\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"job\">Job Title</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"text\" name=\"job\" id=\"job\" value={work.job} onChange={(e) => handleChangeJob(e, work.id)} placeholder=\"Job Title Field...\" />\n                                                    {touched[i]?.job && errors[i]?.job && <small className=\"text-danger\">{errors[i]?.job}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"job\">Company Name</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Input type=\"text\" name=\"company\" id=\"company\" value={work.company} onChange={(e) => handleChangeCompany(e, work.id)} placeholder=\"Company Name Field...\" />\n                                                    {touched[i]?.company && errors[i]?.company && <small className=\"text-danger\">{errors[i]?.company}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"sector\">Sector</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={sectors}\n                                                        placeholder=\"Choose sector...\"\n                                                        onChange={(e) => handleChangeSector(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.sector}\n                                                    />\n                                                    {touched[i]?.sector && errors[i]?.sector && <small className=\"text-danger\">{errors[i]?.sector}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"employementType\">Employment Type</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={employementTypes}\n                                                        placeholder=\"Choose Employment Type...\"\n                                                        onChange={(e) => handleChangeEmployementType(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.employementType}\n                                                    />\n                                                    {touched[i]?.employementType && errors[i]?.employementType && <small className=\"text-danger\">{errors[i]?.employementType}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"location\">Location</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        options={provinces}\n                                                        placeholder=\"Choose Location...\"\n                                                        onChange={(e) => handleChangeLocation(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.location}\n                                                    />\n                                                    {touched[i]?.location && errors[i]?.location && <small className=\"text-danger\">{errors[i]?.location}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"startDate\">Start Date</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Datepicker\n                                                        required\n                                                        name=\"startDate\"\n                                                        selected={work.startDate}\n                                                        onChange={(e) => handleChangeStartDate(e, work.id)}\n                                                        showMonthYearPicker\n                                                        showFullMonthYearPicker\n                                                        showFourColumnMonthYearPicker\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMMM yyyy\"\n                                                        maxDate={new Date()}\n                                                        placeholderText=\"Select a date\"\n                                                        wrapperClassName=\"form-control\"\n                                                    />\n                                                    {touched[i]?.startDate && errors[i]?.startDate && <small className=\"text-danger\">{errors[i]?.startDate}</small>}\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"endDate\">End Date</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Row>\n                                                        <Col xs=\"6\" md=\"4\" lg=\"5\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"endDate\"\n                                                                selected={work.endDate}\n                                                                onChange={(e) => handleChangeEndDate(e, work.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                minDate={work.startDate}\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                wrapperClassName=\"form-control\"\n                                                            />\n                                                        </Col>\n                                                        <Col xs=\"6\" md=\"4\" lg=\"4\">\n                                                            <InputGroup>\n                                                                <InputGroupAddon addonType=\"prepend\">\n                                                                    <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                                        <CustomInput type=\"checkbox\" id={`present-${work.id}`} value=\"present\" checked={work.endDatePresent} onChange={(e) => handleChangePresent(e, work.id)} />\n                                                                    </InputGroupText>\n                                                                </InputGroupAddon>\n                                                                <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                                    Present\n                                                                </div>\n                                                            </InputGroup>\n                                                        </Col>\n                                                        <Col xs=\"12\">\n                                                            {touched[i]?.endDate && errors[i]?.endDate && <small className=\"text-danger\">{errors[i]?.endDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"my-3\">\n                                                <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                    <Label for=\"skill\">Skill</Label>\n                                                </Col>\n                                                <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                    <Select\n                                                        closeMenuOnSelect={false}\n                                                        options={skills}\n                                                        isClearable\n                                                        isMulti\n                                                        placeholder=\"Choose some skills...\"\n                                                        onChange={(e) => handleChangeSkills(e, work.id)}\n                                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                        value={work.skills} />\n                                                    {touched[i]?.skills && errors[i]?.skills && <small className=\"text-danger\">{errors[i]?.skills}</small>}\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ))}\n                            <Col xs=\"12\">\n                                <Button color=\"success\" className=\"float-right\" onClick={handleAddWorkExperienceData}>Add Work Experience</Button>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { Card, CardBody, Row, Col, Button, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Datepicker from \"react-datepicker\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\nimport useDataCountries from \"../../../../hooks/useDataCountries\";\n\nexport default (props) => {\n    const [hasProjectExperience, setHasProjectExperience] = useState(false);\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const { data: getProvince } = useDataProvinces();\n    const provinces = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => getSkills.map(p => ({ label: p.name, value: p.id })), [getSkills])\n\n    const { data: getCountries } = useDataCountries();\n    const countries = useMemo(() => getCountries.map(p => ({ label: p.name, value: p.id })), [getCountries])\n\n    const ValidationFormSchema = () => {\n        if (!hasProjectExperience) return Yup.array().of(\n            Yup.object().shape({\n                projectName: Yup.string().label('Project Name'),\n            })\n        )\n        return Yup.array().of(\n            Yup.object().shape({\n                projectName: Yup.string().required().label('Project Name'),\n                client: Yup.string().required().label('Client Name'),\n                projectRole: Yup.string().required().label('Project Role'),\n                sector: Yup.string().required().label('Sector'),\n                province: Yup.string().required().label('province'),\n                startDate: Yup.string().required().label('Start Date'),\n                endDate: Yup.string().required().label('End Date'),\n                description: Yup.string().required().label('Description'),\n                skills: Yup.string().required().label('Skills'),\n            })\n        )\n    }\n\n    const { values: projectExperienceData, touched, errors, setValues: setProjectExperienceData, handleSubmit } = useFormik({\n        initialValues: [\n            {\n                id: 1,\n                projectName: '',\n                client: '',\n                projectRole: '',\n                sector: '',\n                province: '',\n                country: '',\n                startDate: '',\n                endDate: '',\n                description: '',\n                skills: [],\n            }\n        ],\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    const handleChangeSector = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, sector: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProvince = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, province: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeCountry = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, country: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProjectName = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, projectName: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeClient = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, client: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeProjectRole = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, projectRole: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeStartDate = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, startDate: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeEndDate = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, endDate: e }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeDescription = useCallback((e, i) => {\n        const { value } = e.target;\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, description: value }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleChangeSkills = useCallback((e, i) => {\n        setProjectExperienceData(old => [...old].map(project => {\n            if (project.id === i) return { ...project, skills: e ?? [] }\n            return { ...project };\n        }))\n    }, [setProjectExperienceData])\n\n    const handleAddprojectExperienceData = useCallback(() => {\n        setProjectExperienceData(old => ([...old, { id: old[old.length - 1].id + 1, projectName: '', client: '', projectRole: '', sector: '', province: '', startDate: '', endDate: '', description: '', skills: [], }]))\n    }, [setProjectExperienceData])\n\n    const handleDeleteprojectExperienceData = useCallback((i) => {\n        setProjectExperienceData(old => ([...old].filter(project => project.id !== i)))\n    }, [setProjectExperienceData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">project Experience</div>\n                            </Col>\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <InputGroup>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                            <CustomInput type=\"checkbox\" id=\"hasProjectExperience\" value=\"hasProjectExperience\" checked={hasProjectExperience} onChange={(e) => setHasProjectExperience(e.target.checked)} />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Label for=\"hasProjectExperience\" className=\"d-flex bg-transparent p-1 align-items-center\">\n                                        Do you have project experience?\n                                    </Label>\n                                </InputGroup>\n                            </Col>\n                            {hasProjectExperience &&\n                                <>\n                                    {projectExperienceData.map((project, i) => (\n                                        <Col xs=\"12\" key={i}>\n                                            <Card className=\"shadow-sm\">\n                                                <CardBody>\n                                                    {i > 0 &&\n                                                        <Row className=\"my-3\">\n                                                            <Col xs=\"12\">\n                                                                <Button color=\"danger\" className=\"float-right mt-n3 mb-3\" onClick={() => handleDeleteprojectExperienceData(project.id)}><FontAwesomeIcon icon=\"trash-alt\" /></Button>\n                                                            </Col>\n                                                        </Row>\n                                                    }\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"projectName\">Project Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"projectName\" id=\"projectName\" value={project.projectName} onChange={(e) => handleChangeProjectName(e, project.id)} placeholder=\"Job Title Field...\" />\n                                                            {touched[i]?.projectName && errors[i]?.projectName && <small className=\"text-danger\">{errors[i]?.projectName}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"client\">Client Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"client\" id=\"client\" value={project.client} onChange={(e) => handleChangeClient(e, project.id)} placeholder=\"Client Name Field...\" />\n                                                            {touched[i]?.client && errors[i]?.client && <small className=\"text-danger\">{errors[i]?.client}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"projectRole\">Project Role</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Input type=\"text\" name=\"projectRole\" id=\"projectRole\" value={project.projectRole} onChange={(e) => handleChangeProjectRole(e, project.id)} placeholder=\"Project Role Field...\" />\n                                                            {touched[i]?.projectRole && errors[i]?.projectRole && <small className=\"text-danger\">{errors[i]?.projectRole}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"sector\">Sector</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={sectors}\n                                                                placeholder=\"Choose sector...\"\n                                                                onChange={(e) => handleChangeSector(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.sector}\n                                                            />\n                                                            {touched[i]?.sector && errors[i]?.sector && <small className=\"text-danger\">{errors[i]?.sector}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"province\">Province</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={provinces}\n                                                                placeholder=\"Choose a Province...\"\n                                                                onChange={(e) => handleChangeProvince(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.province}\n                                                            />\n                                                            {touched[i]?.province && errors[i]?.province && <small className=\"text-danger\">{errors[i]?.province}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"countries\">Country</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                options={countries}\n                                                                placeholder=\"Choose a Country...\"\n                                                                onChange={(e) => handleChangeCountry(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.countries}\n                                                            />\n                                                            {touched[i]?.countries && errors[i]?.countries && <small className=\"text-danger\">{errors[i]?.countries}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"startDate\">Start Date</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"startDate\"\n                                                                selected={project.startDate}\n                                                                onChange={(e) => handleChangeStartDate(e, project.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                wrapperClassName=\"form-control\"\n                                                            />\n                                                            {touched[i]?.startDate && errors[i]?.startDate && <small className=\"text-danger\">{errors[i]?.startDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"endDate\">End Date</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Datepicker\n                                                                required\n                                                                name=\"endDate\"\n                                                                selected={project.endDate}\n                                                                onChange={(e) => handleChangeEndDate(e, project.id)}\n                                                                showMonthYearPicker\n                                                                showFullMonthYearPicker\n                                                                showFourColumnMonthYearPicker\n                                                                dateFormat=\"MMMM yyyy\"\n                                                                minDate={project.startDate}\n                                                                maxDate={new Date()}\n                                                                placeholderText=\"Select a date\"\n                                                                wrapperClassName=\"form-control\"\n                                                            />\n                                                            {touched[i]?.endDate && errors[i]?.endDate && <small className=\"text-danger\">{errors[i]?.endDate}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"description\">Description</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <TextareaAutosize\n                                                                minRows={3}\n                                                                name=\"description\"\n                                                                id=\"description\"\n                                                                className=\"form-control\"\n                                                                placeholder=\"Description Field...\"\n                                                                value={project.description}\n                                                                onChange={(e) => handleChangeDescription(e, project.id)}\n                                                            />\n                                                            {touched[i]?.description && errors[i]?.description && <small className=\"text-danger\">{errors[i]?.description}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                    <Row className=\"my-3\">\n                                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                                            <Label for=\"skill\">Skill</Label>\n                                                        </Col>\n                                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                                            <Select\n                                                                closeMenuOnSelect={false}\n                                                                options={skills}\n                                                                isClearable\n                                                                isMulti\n                                                                placeholder=\"Choose some skills...\"\n                                                                onChange={(e) => handleChangeSkills(e, project.id)}\n                                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                                value={project.skills} />\n                                                            {touched[i]?.skills && errors[i]?.skills && <small className=\"text-danger\">{errors[i]?.skills}</small>}\n                                                        </Col>\n                                                    </Row>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                    ))}\n                                    <Col xs=\"12\">\n                                        <Button color=\"success\" className=\"float-right\" onClick={handleAddprojectExperienceData}>Add project Experience</Button>\n                                    </Col>\n                                </>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row >\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport Select from 'react-select';\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataSkills from \"../../../../hooks/useDataSkills\";\n\nconst colorSkills = [\n    '#1372BA',\n    '#5380a2',\n    '#8453a2',\n    '#53a276',\n    '#a25353',\n    '#bfb327',\n    '#2733bf',\n    '#27bf4f'\n]\n\nexport default (props) => {\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            sectors: Yup.array().min(1).max(3).label('Sector'),\n            skills: Yup.array().min(1).max(5).label('Skills'),\n        })\n    }\n\n    const { values: skillSectorData, touched, errors, setValues: setSkillSectorData, handleSubmit } = useFormik({\n        initialValues: {\n            sectors: [],\n            skills: [],\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n    const colourStyles = {\n        multiValue: (styles, { data }) => {\n            const color = data.color;\n            return {\n                ...styles,\n                backgroundColor: color,\n            };\n        },\n        multiValueLabel: (styles, { data }) => ({\n            ...styles,\n            color: '#fff',\n        }),\n    };\n\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => {\n        const opt = []\n        const dataSectors = getSector.map(p => ({ label: p.name, value: p.id }))\n        dataSectors.map((v) => {\n            const dataOptions = skillSectorData.sectors?.find(u => u.value === v.value);\n            if (!dataOptions) opt.push({ ...v, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })\n            return dataOptions;\n        })\n\n        return opt\n    }, [skillSectorData.sectors, getSector])\n\n    const { data: getSkills } = useDataSkills();\n    const skills = useMemo(() => {\n        const opt = []\n        const dataSkills = getSkills.map(p => ({ label: p.name, value: p.id }))\n        dataSkills.map((v) => {\n            const dataOptions = skillSectorData.skills?.find(u => u.value === v.value);\n            if (!dataOptions) opt.push({ ...v, color: colorSkills[Math.floor(Math.random() * colorSkills.length)] })\n            return dataOptions;\n        })\n\n        return opt\n    }, [skillSectorData.skills, getSkills])\n\n    const handleChangeSector = useCallback((e) => {\n        setSkillSectorData(old => ({ ...old, sectors: e ?? [] }))\n    }, [setSkillSectorData])\n\n    const handleChangeSkills = useCallback((e) => {\n        setSkillSectorData(old => ({ ...old, skills: e ?? [] }))\n    }, [setSkillSectorData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">My Top 5 Skills</div>\n                            </Col>\n                            {/* <Col xs=\"12\">\n                                <Card className=\"shadow-sm\">\n                                    <CardBody>\n                                        {skillSectorData.skills.map((skill, i) => (\n                                            <Badge key={i} color={colorSkills[i]} className=\"text-uppercase font-sm mx-1 text-light\">{skill.label}</Badge>\n                                        ))}\n                                    </CardBody>\n                                </Card>\n                            </Col> */}\n                            <Col xs=\"12\">\n                                <Select\n                                    closeMenuOnSelect={false}\n                                    options={skills}\n                                    isClearable\n                                    isMulti\n                                    placeholder=\"Choose some skills...\"\n                                    onChange={(e) => handleChangeSkills(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={skillSectorData.skills}\n                                    styles={colourStyles}\n                                    isOptionDisabled={(option) => skillSectorData.skills.length >= 5}\n                                />\n                                {touched.skills && errors.skills && <small className=\"text-danger\">{errors.skills}</small>}\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">My top 3 Sectors</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\">\n                                        <Select\n                                            closeMenuOnSelect={false}\n                                            options={sectors}\n                                            isClearable\n                                            isMulti\n                                            placeholder=\"Choose some sectors...\"\n                                            onChange={(e) => handleChangeSector(e)}\n                                            components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                            value={skillSectorData.sectors}\n                                            styles={colourStyles}\n                                            isOptionDisabled={(option) => skillSectorData.sectors.length >= 3}\n                                        />\n                                        {touched.sectors && errors.sectors && <small className=\"text-danger\">{errors.sectors}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n","import React, { useCallback, useRef, useState } from \"react\"\nimport { toast } from \"react-toastify\";\nimport { Card, CardBody, Row, Col, Button, Label, Input, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport noImage from '../../../../assets/illustrations/image-error.png'\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default (props) => {\n    const npwpFile = useRef(null)\n    const regIdFile = useRef(null)\n    const photoFile = useRef(null)\n    const [showPassword, setShowPassword] = useState({\n        password: false,\n        passwordConfirmation: false,\n    })\n\n    const ValidationFormSchema = () => {\n        let file;\n        if (props.registrationForm === 'professional') file = { npwp: Yup.string().required().label('Npwp File'), regId: Yup.string().required().label('Registrant ID File'), photo: Yup.string().required().label('Photo Profile File') }\n        if (props.registrationForm === 'business') file = { npwp: Yup.string().required().label('Npwp File') }\n        if (props.registrationForm === 'individual') file = { npwp: Yup.string().required().label('Npwp File'), regId: Yup.string().required().label('Registrant ID File') }\n\n        return Yup.object().shape({\n            ...file,\n            password: Yup.string().required().label('Password'),\n            passwordConfirmation: Yup.string().required('Password Confirmation is a required field').oneOf([Yup.ref('password'), null], 'Passwords must match'),\n            confirmed: Yup.boolean().oneOf([true], \"You must accept the terms and conditions\"),\n            privacy: Yup.boolean().oneOf([true], \"You must accept the Pinion's User Agreement and Privacy Policy\"),\n        })\n    }\n\n    const { values: verificationData, touched, errors, setValues: setVerificationData, handleSubmit } = useFormik({\n        initialValues: {\n            npwp: '',\n            regId: '',\n            photo: '',\n            password: '',\n            passwordConfirmation: '',\n            confirmed: false,\n            privacy: false,\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.onFinishRegistration()\n        }\n    })\n\n    const onErrorImage = useCallback((e) => {\n        e.target.src = noImage;\n        e.target.onerror = null;\n    }, [])\n\n    const onChangeNpwpFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, npwp: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangeRegIdFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, regId: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangePhotoFile = useCallback((e) => {\n        e.preventDefault();\n        const { files } = e.target\n        if (files[0].size > 5242880) {\n            toast.error('Maximum file size is 5mb')\n            return;\n        }\n        setVerificationData(old => ({ ...old, photo: { preview: URL.createObjectURL(files[0]), file: files[0] } }))\n    }, [setVerificationData])\n\n    const onChangePassword = useCallback((e) => {\n        const { value } = e.target\n        setVerificationData(old => ({ ...old, password: value }))\n    }, [setVerificationData])\n\n    const onChangePasswordConfirmation = useCallback((e) => {\n        const { value } = e.target\n        setVerificationData(old => ({ ...old, passwordConfirmation: value }))\n    }, [setVerificationData])\n\n    const onChangeConfirmation = useCallback((e) => {\n        const { checked } = e.target\n        setVerificationData(old => ({ ...old, confirmed: checked }))\n    }, [setVerificationData])\n\n    const onChangePrivacy = useCallback((e) => {\n        const { checked } = e.target\n        setVerificationData(old => ({ ...old, privacy: checked }))\n    }, [setVerificationData])\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm verification-process-form\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Verification Process</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                        <Label>Registrant NPWP</Label>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                        <div style={{ width: '200px', height: '200px' }}>\n                                            {verificationData?.npwp?.preview && <img src={verificationData?.npwp?.preview} alt=\"npwp\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                            <input type='file' ref={npwpFile} style={{ display: 'none' }} onChange={(e) => onChangeNpwpFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                            <Button\n                                                className={`btn border-0 upload-file-button ${verificationData?.npwp?.preview && 'filled'}`}\n                                                onClick={() => npwpFile.current.click()}\n                                            >\n                                                <i className=\"fa fa-2x fa-camera\" />\n                                                <br />\n                                                <div className=\"text-center d-none d-md-block\">\n                                                    Upload\n                                                    <br />\n                                                    <small>Max. 5 MB</small>\n                                                </div>\n                                            </Button>\n                                        </div>\n                                        {touched.npwp && errors.npwp && <small className=\"text-danger\">{errors.npwp}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                            {(props.registrationForm === 'professional' || props.registrationForm === 'individual') &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Registrant ID</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <div style={{ width: '200px', height: '200px' }}>\n                                                {verificationData?.regId?.preview && <img src={verificationData?.regId?.preview} alt=\"regId\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                                <input type='file' ref={regIdFile} style={{ display: 'none' }} onChange={(e) => onChangeRegIdFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                                <Button\n                                                    className={`btn border-0 upload-file-button ${verificationData?.regId?.preview && 'filled'}`}\n                                                    onClick={() => regIdFile.current.click()}\n                                                >\n                                                    <i className=\"fa fa-2x fa-camera\" />\n                                                    <br />\n                                                    <div className=\"text-center d-none d-md-block\">\n                                                        Upload\n                                                        <br />\n                                                        <small>Max. 5 MB</small>\n                                                    </div>\n                                                </Button>\n                                            </div>\n                                            {touched.regId && errors.regId && <small className=\"text-danger\">{errors.regId}</small>}\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                            {props.registrationForm === 'professional' &&\n                                <Col xs=\"12\">\n                                    <Row className=\"my-3\">\n                                        <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                            <Label>Photo Profile</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                            <div style={{ width: '200px', height: '200px' }}>\n                                                {verificationData?.photo?.preview && <img src={verificationData?.photo?.preview} alt=\"profile\" style={{ objectFit: 'cover', position: 'absolute', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />}\n                                                <input type='file' ref={photoFile} style={{ display: 'none' }} onChange={(e) => onChangePhotoFile(e)} accept=\"image/png, image/gif, image/jpeg\" />\n                                                <Button\n                                                    className={`btn border-0 upload-file-button ${verificationData?.photo?.preview && 'filled'}`}\n                                                    onClick={() => photoFile.current.click()}\n                                                >\n                                                    <i className=\"fa fa-2x fa-camera\" />\n                                                    <br />\n                                                    <div className=\"text-center d-none d-md-block\">\n                                                        Upload\n                                                        <br />\n                                                        <small>Max. 5 MB</small>\n                                                    </div>\n                                                </Button>\n                                            </div>\n                                            {touched.photo && errors.photo && <small className=\"text-danger\">{errors.photo}</small>}\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm verification-process-form\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">Password</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                        <Label>Password</Label>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                        <InputGroup>\n                                            <Input type={showPassword.password ? 'text' : 'password'} name=\"password\" id=\"password\" value={verificationData.password} onChange={(e) => onChangePassword(e)} placeholder=\"******\" />\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent\">\n                                                    <FontAwesomeIcon icon={showPassword.password ? 'eye-slash' : 'eye'} onClick={() => setShowPassword(old => ({ ...old, password: !old.password }))} />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                        {touched.password && errors.password && <small className=\"text-danger\">{errors.password}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                        <Label>Password Confirmation</Label>\n                                    </Col>\n                                    <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                        <InputGroup>\n                                            <Input type={showPassword.passwordConfirmation ? 'text' : 'password'} name=\"passwordConfirmation\" id=\"passwordConfirmation\" value={verificationData.passwordConfirmation} onChange={(e) => onChangePasswordConfirmation(e)} placeholder=\"******\" />\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent\">\n                                                    <FontAwesomeIcon icon={showPassword.passwordConfirmation ? 'eye-slash' : 'eye'} onClick={() => setShowPassword(old => ({ ...old, passwordConfirmation: !old.passwordConfirmation }))} />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                        {touched.passwordConfirmation && errors.passwordConfirmation && <small className=\"text-danger\">{errors.passwordConfirmation}</small>}\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm verification-process-form\">\n                    <CardBody>\n                        <Row className=\"px-5\">\n                            <Col xs=\"12\" className=\"mb-3\">\n                                <div className=\"font-xl font-weight-bold text-uppercase\">APPLICATION</div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"confirmed\" checked={verificationData.confirmed} onChange={(e) => onChangeConfirmation(e)} />\n                                                </InputGroupText>\n                                                <Label for=\"confirmed\" className={`d-flex bg-transparent p-0 m-0 align-items-center ${touched.confirmed && errors.confirmed && 'text-danger'}`} style={{ whiteSpace: 'normal' }}>\n                                                    I have reviewed and confirmed that this data is correct\n                                                </Label>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\">\n                                <Row className=\"my-3\">\n                                    <Col xs=\"12\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"privacy\" checked={verificationData.privacy} onChange={(e) => onChangePrivacy(e)} />\n                                                </InputGroupText>\n                                                <Label for=\"privacy\" className={`d-flex bg-transparent p-0 m-0 align-items-center ${touched.privacy && errors.privacy && 'text-danger'}`} style={{ whiteSpace: 'normal' }}>\n                                                    I confirm that I have read, consent and agree to Pinion's User Agreement and Privacy Policy\n                                                </Label>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row >\n    );\n}\n","import React, { useCallback, useMemo } from \"react\"\nimport { Card, CardBody, Row, Col, Input, Label, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from \"reactstrap\";\nimport Select from 'react-select';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport useDataSectors from \"../../../../hooks/useDataSectors\";\nimport useDataProvinces from \"../../../../hooks/useDataProvinces\";\n\n\nexport default (props) => {\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            businessName: Yup.string().required().label('Business Name'),\n            sector: Yup.string().required().label('Sector'),\n            companySize: Yup.string().required().oneOf(['<10', '11-50', '50-100', '100-500', '>500']).label('Company Size'),\n            aboutUs: Yup.string().required().label('About Us'),\n            npwpNumber: Yup.string().required().label('NPWP Number'),\n            address: Yup.string().required().label('Address'),\n            province: Yup.string().required().label('Province'),\n            phone: Yup.string().required().label('Phone'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit } = useFormik({\n        initialValues: {\n            businessName: '',\n            sector: '',\n            companySize: '',\n            aboutUs: '',\n            npwpNumber: '',\n            address: '',\n            province: '',\n            phone: '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><CompanyInformationForm companyInformationData={values} setCompanyInformationData={setValues} touched={touched} errors={errors} /></Col>\n            <Col xs=\"12\"><ContactInformationForm contactData={values} setContactData={setValues} touched={touched} errors={errors} /></Col>\n        </Row>\n    );\n}\n\nconst CompanyInformationForm = ({ companyInformationData, setCompanyInformationData, touched, errors }) => {\n    const { data: getSector } = useDataSectors();\n    const sectors = useMemo(() => getSector.map(p => ({ label: p.name, value: p.id })), [getSector])\n\n    const handleChangeBusinessName = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, businessName: value }))\n    }, [setCompanyInformationData])\n\n    const handleChangecompanySize = useCallback((e) => {\n        const { value, checked } = e.target;\n        setCompanyInformationData(old => ({ ...old, companySize: checked ? value : '' }))\n    }, [setCompanyInformationData])\n\n    const handleChangeSector = useCallback((e) => {\n        setCompanyInformationData(old => ({ ...old, sector: e }))\n    }, [setCompanyInformationData])\n\n    const handleChangeNpwpNumber = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, npwpNumber: value }))\n    }, [setCompanyInformationData])\n\n    const handleChangeAboutUs = useCallback((e) => {\n        const { value } = e.target;\n        setCompanyInformationData(old => ({ ...old, aboutUs: value }))\n    }, [setCompanyInformationData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"businessName\">Business Entity</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"businessName\" id=\"businessName\" value={companyInformationData.businessName} onChange={(e) => handleChangeBusinessName(e)} placeholder=\"Business Entity Field...\" />\n                                {touched.businessName && errors.businessName && <small className=\"text-danger\">{errors.businessName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"sector\">Sector</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={sectors}\n                                    placeholder=\"Choose a socter...\"\n                                    value={companyInformationData.sector}\n                                    onChange={(e) => handleChangeSector(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.sector && errors.sector && <small className=\"text-danger\">{errors.sector}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"companySize\">Company Size</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <div className=\"d-flex\">\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size1\" value=\"<10\" checked={companyInformationData.companySize === \"<10\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size1\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            {\"<10\"}\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size2\" value=\"11-50\" checked={companyInformationData.companySize === \"11-50\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size2\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            11-50\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size3\" value=\"50-100\" checked={companyInformationData.companySize === \"50-100\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size3\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            50-100\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size4\" value=\"100-500\" checked={companyInformationData.companySize === \"100-500\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size4\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            100-500\n                                        </Label>\n                                    </InputGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                <CustomInput type=\"radio\" id=\"size1\" value=\">500\" checked={companyInformationData.companySize === \">500\" ? true : false} onChange={(e) => handleChangecompanySize(e)} />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Label for=\"size1\" className=\"d-flex bg-transparent p-1 m-0 align-items-center\">\n                                            {\">500\"}\n                                        </Label>\n                                    </InputGroup>\n                                </div>\n                                {touched.companySize && errors.companySize && <small className=\"text-danger\">{errors.companySize}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"aboutUs\">About Us</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"aboutUs\"\n                                    id=\"aboutUs\"\n                                    className=\"form-control\"\n                                    placeholder=\"About Us Field...\"\n                                    value={companyInformationData.aboutUs}\n                                    onChange={(e) => handleChangeAboutUs(e)}\n                                />\n                                {touched.aboutUs && errors.aboutUs && <small className=\"text-danger\">{errors.aboutUs}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"npwpNumber\">NPWP Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"npwpNumber\" id=\"npwpNumber\" value={companyInformationData.npwpNumber} onChange={(e) => handleChangeNpwpNumber(e)} placeholder=\"NPWP Number Field...\" />\n                                {touched.npwpNumber && errors.npwpNumber && <small className=\"text-danger\">{errors.npwpNumber}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nconst ContactInformationForm = ({ contactData, setContactData, touched, errors }) => {\n    const { data: getProvince } = useDataProvinces();\n    const province = useMemo(() => getProvince.map(p => ({ label: p.name, value: p.id })), [getProvince])\n\n    const handleChangeProvince = useCallback((e) => {\n        setContactData(old => ({ ...old, province: e }))\n    }, [setContactData])\n\n    const handleChangeAddress = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, address: value }))\n    }, [setContactData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setContactData(old => ({ ...old, phone: value }))\n    }, [setContactData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">CONTACT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"address\">Address</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <TextareaAutosize\n                                    minRows={3}\n                                    name=\"address\"\n                                    id=\"address\"\n                                    className=\"form-control\"\n                                    placeholder=\"Address Field...\"\n                                    value={contactData.address}\n                                    onChange={(e) => handleChangeAddress(e)}\n                                />\n                                {touched.address && errors.address && <small className=\"text-danger\">{errors.address}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"province\">Province</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={province}\n                                    placeholder=\"Choose province...\"\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                    value={contactData.province}\n                                    onChange={(e) => handleChangeProvince(e)}\n                                />\n                                {touched.province && errors.province && <small className=\"text-danger\">{errors.province}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" value={contactData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Phone Field...\" />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\"\nimport { Card, CardBody, Row, Col, Input, Label } from \"reactstrap\";\nimport Select from 'react-select';\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\n\n\nexport default (props) => {\n    const ValidationFormSchema = () => {\n        return Yup.object().shape({\n            firstName: Yup.string().required().label('First Name'),\n            lastName: Yup.string().required().label('Last Name'),\n            email: Yup.string().required().email().label('Email'),\n            phone: Yup.string().required().label('Phone'),\n            idType: Yup.string().required().label('ID Type'),\n            idNumber: Yup.string().required().label('ID Number'),\n            jobTitle: Yup.string().required().label('Job Title'),\n        })\n    }\n\n    const { values, touched, errors, setValues, handleSubmit } = useFormik({\n        initialValues: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            phone: '',\n            idType: { label: 'KTP', value: 'ktp' },\n            idNumber: '',\n            jobTitle: '',\n        },\n        validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            props.onSubmitForm(values)\n            props.nextStep();\n        }\n    })\n\n    return (\n        <Row>\n            <Col xs=\"12\"><RegistrantInformationForm registrantData={values} setRegistrantData={setValues} touched={touched} errors={errors} /></Col>\n        </Row>\n    );\n}\n\nexport const RegistrantInformationForm = ({ registrantData, setRegistrantData, touched, errors }) => {\n    const idType = [\n        { label: 'KTP', value: 'ktp' },\n    ]\n\n    const handleChangeFirstName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, firstName: value }))\n    }, [setRegistrantData])\n\n    const handleChangeLastName = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, lastName: value }))\n    }, [setRegistrantData])\n\n    const handleChangePhone = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, phone: value }))\n    }, [setRegistrantData])\n\n    const handleChangeEmail = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, email: value }))\n    }, [setRegistrantData])\n\n    const handleChangeIdType = useCallback((e) => {\n        setRegistrantData(old => ({ ...old, idType: e }))\n    }, [setRegistrantData])\n\n    const handleChangeIdNumber = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, idNumber: value }))\n    }, [setRegistrantData])\n\n    const handleChangeJobTitle = useCallback((e) => {\n        const { value } = e.target;\n        setRegistrantData(old => ({ ...old, jobTitle: value }))\n    }, [setRegistrantData])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row className=\"px-5\">\n                    <Col xs=\"12\" className=\"mb-3\">\n                        <div className=\"font-xl font-weight-bold\">REGISTRANT INFORMATION</div>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"firstName\">First Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={registrantData.firstName} onChange={(e) => handleChangeFirstName(e)} placeholder=\"First Name Field...\" />\n                                {touched.firstName && errors.firstName && <small className=\"text-danger\">{errors.firstName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"lastName\">Last Name</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={registrantData.lastName} onChange={(e) => handleChangeLastName(e)} placeholder=\"Last Name Field...\" />\n                                {touched.lastName && errors.lastName && <small className=\"text-danger\">{errors.lastName}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"email\">Email</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={registrantData.email} onChange={(e) => handleChangeEmail(e)} placeholder=\"Email Field...\" />\n                                {touched.email && errors.email && <small className=\"text-danger\">{errors.email}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"phone\">Phone</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"phone\" id=\"phone\" value={registrantData.phone} onChange={(e) => handleChangePhone(e)} placeholder=\"Phone Field...\" />\n                                {touched.phone && errors.phone && <small className=\"text-danger\">{errors.phone}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idType\">ID Type</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Select\n                                    options={idType}\n                                    placeholder=\"Choose id type...\"\n                                    value={registrantData.idType}\n                                    onChange={(e) => handleChangeIdType(e)}\n                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                />\n                                {touched.idType && errors.idType && <small className=\"text-danger\">{errors.idType}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"idNumber\">ID Number</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"number\" name=\"idNumber\" id=\"idNumber\" value={registrantData.idNumber} onChange={(e) => handleChangeIdNumber(e)} placeholder=\"ID Number Field...\" />\n                                {touched.idNumber && errors.idNumber && <small className=\"text-danger\">{errors.idNumber}</small>}\n                            </Col>\n                        </Row>\n                        <Row className=\"my-3\">\n                            <Col xs=\"12\" md=\"4\" lg=\"3\" className=\"d-flex align-items-center\">\n                                <Label for=\"jobTitle\">Job Title</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\" lg=\"9\">\n                                <Input type=\"text\" name=\"jobTitle\" id=\"jobTitle\" value={registrantData.jobTitle} onChange={(e) => handleChangeJobTitle(e)} placeholder=\"Job Title Field...\" />\n                                {touched.jobTitle && errors.jobTitle && <small className=\"text-danger\">{errors.jobTitle}</small>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card >\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\"\n// import Select from 'react-select';\nimport {\n    translate,\n} from 'react-switch-lang';\nimport StepWizard from 'react-step-wizard';\nimport { NavigationDot } from \"./Components/Navigation\";\nimport RegistrantForm from \"./Forms/RegistrantForm\";\nimport EducationForm from \"./Forms/EducationForm\";\nimport WorkExprerienceForm from \"./Forms/WorkExprerienceForm\";\nimport ProjectExperienceForm from \"./Forms/ProjectExperienceForm\";\nimport SkillSectorForm from \"./Forms/SkillSectorForm\";\nimport DocumentVerificationForm from \"./Forms/DocumentVerificationForm\";\nimport { useFormik } from \"formik\";\nimport { Button, Card, CardBody, Col, Modal, ModalBody, Row, Spinner } from \"reactstrap\";\nimport CompanyInformationForm from \"./Forms/CompanyInformationForm\";\nimport RegistrantCompanyForm from \"./Forms/RegistrantCompanyForm\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport request from \"../../../utils/request\";\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\nimport { useAuthUser } from \"../../../store\";\nimport noImage from '../../../assets/illustrations/image-error.png'\nimport { DefaultImageUser } from '../../../components/DefaultImageUser/DefaultImageUser';\n\n\nfunction Profile(props) {\n    const location = useLocation();\n    const history = useHistory();\n    const authUser = useAuthUser();\n    const registrationForm = authUser.role\n    const [modalSubmitForm, setModalSubmitForm] = useState(false);\n    const [instance, setInstance] = useState(null);\n\n    const { values: registrationData, setValues: setRegistrationData, handleSubmit, isSubmitting } = useFormik({\n        initialValues: {\n            companyInformationForm: '',\n            registrantForm: '',\n            educationForm: '',\n            workExperienceForm: '',\n            projectExperienceForm: '',\n            skillSectorForm: '',\n            verificationForm: '',\n        },\n        // validationSchema: ValidationFormSchema,\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            // if (!validationForm(instance, registrationForm, registrationData)) setModalSubmitForm(false)\n\n            let formData = new FormData()\n            formData.append('role', registrationForm)\n            formData.append('email', values.registrantForm.email)\n            formData.append('password', values.verificationForm.password)\n            formData.append('firstName', values.registrantForm.firstName)\n            formData.append('lastName', values.registrantForm.lastName)\n            formData.append('phoneNumber', values.registrantForm.phone)\n            formData.append('identityType', values.registrantForm.idType.value)\n            formData.append('identityNumber', values.registrantForm.idNumber)\n\n            if (registrationForm === 'company') {\n                formData.append('clientIdSector', values.companyInformationForm.sector.value)\n                formData.append('companyName', values.companyInformationForm.businessName)\n                formData.append('companySize', values.companyInformationForm.companySize)\n                formData.append('about', values.companyInformationForm.aboutUs)\n                formData.append('npwp', values.companyInformationForm.npwpNumber)\n                formData.append('address', values.companyInformationForm.address)\n                formData.append('idProvince', values.companyInformationForm.province.value)\n                formData.append('companyPhoneNumber', values.companyInformationForm.phone)\n                formData.append('jobTitle', values.registrantForm.jobTitle)\n            } else {\n                formData.append('idProvince', values.registrantForm.province.value)\n                formData.append('address', values.registrantForm.address)\n                formData.append('dob', moment(values.registrantForm.dateOfBirth).format('YYYY-MM-DD'))\n                formData.append('gender', values.registrantForm.gender)\n                formData.append('npwp', values.registrantForm.npwpNumber)\n\n                if (registrationForm === 'individual') {\n                    formData.append('clientIdSector', values.registrantForm.sector.value)\n                }\n\n                if (registrationForm === 'professional') {\n                    formData.append('educations', JSON.stringify(values.educationForm.map(v => ({ idSchool: v.school.value, idEducationDegree: v.degree.value, idEducationField: v.education.value, graduationYear: v.graduationYear.value }))))\n                    formData.append('workExperiences', JSON.stringify(values.workExperienceForm.map(v => ({ idProvince: v.location.value, idSector: v.sector.value, jobTitle: v.job, companyName: v.company, employmentType: v.employementType.value, startDate: moment(v.startDate).format('YYYY-MM-DD'), endDate: moment(v.endDate).format('YYYY-MM-DD'), isStillPresent: v.endDatePresent, skills: v.skills.map(s => ({ idSkill: s.value })) }))))\n                    formData.append('projectExperiences', JSON.stringify(values.projectExperienceForm.map(v => ({ idProvince: v.province.value, idCountry: v.country.value, idSector: v.sector.value, clientName: v.client, projectName: v.projectName, projectRole: v.projectRole, description: v.description, startDate: moment(v.startDate).format('YYYY-MM-DD'), endDate: moment(v.endDate).format('YYYY-MM-DD'), skills: v.skills.map(s => ({ idSkill: s.value })) }))))\n                    formData.append('skills', JSON.stringify(values.skillSectorForm.skills.map(v => ({ idSkill: v.value }))))\n                    formData.append('sectors', JSON.stringify(values.skillSectorForm.sectors.map(v => ({ idSector: v.value }))))\n                }\n            }\n\n            if (values.verificationForm.photo) formData.append('avatar', values.verificationForm.photo.file, values.verificationForm.photo.file.name)\n            if (values.verificationForm.npwp) formData.append('npwp', values.verificationForm.npwp.file, values.verificationForm.npwp.file.name)\n            if (values.verificationForm.regId) formData.append('identity', values.verificationForm.regId.file, values.verificationForm.regId.file.name)\n            request.post(`v1/auth/signup`, formData)\n                .then(() => {\n                    toast.success('Register success')\n                    setModalSubmitForm(false)\n                    history.push('/')\n                })\n                .catch((error) => toast.error(error.response.data.message))\n                .finally(() => setSubmitting(false))\n        }\n    })\n\n    useEffect(() => {\n        if (instance) {\n            validationForm(instance, registrationForm, registrationData)\n        }\n        // eslint-disable-next-line\n    }, [instance, registrationForm])\n\n    const handleFinishRegistration = () => {\n        setModalSubmitForm(!modalSubmitForm)\n    }\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\">\n                <Biodata data={authUser} />\n            </Col>\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <StepWizard\n                            isHashEnabled\n                            className=\"register-form\"\n                            nav={<NavigationDot role={registrationForm} />}\n                            instance={setInstance}\n                            transitions={{\n                                enterRight: ``,\n                                enterLeft: ``,\n                                exitRight: ``,\n                                exitLeft: ``,\n                                intro: ``,\n                            }}\n                        >\n                            {registrationForm === 'professional' && <RegistrantForm data={authUser} step={1} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n                            {registrationForm === 'professional' && <EducationForm data={authUser} step={2} registrationForm={registrationForm} hashKey=\"education\" stepName=\"education\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, educationForm: data }))} />}\n                            {registrationForm === 'professional' && <WorkExprerienceForm data={authUser} step={3} registrationForm={registrationForm} hashKey=\"workExperience\" stepName=\"workExperience\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, workExperienceForm: data }))} />}\n                            {registrationForm === 'professional' && <ProjectExperienceForm data={authUser} step={4} registrationForm={registrationForm} hashKey=\"projectExperience\" stepName=\"projectExperience\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, projectExperienceForm: data }))} />}\n                            {registrationForm === 'professional' && <SkillSectorForm data={authUser} step={5} registrationForm={registrationForm} hashKey=\"skillSector\" stepName=\"skillSector\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, skillSectorForm: data }))} />}\n                            {registrationForm === 'professional' && <DocumentVerificationForm data={authUser} step={6} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n\n                            {registrationForm === 'company' && <CompanyInformationForm data={authUser} step={1} registrationForm={registrationForm} hashKey=\"companyInformation\" stepName=\"companyInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, companyInformationForm: data }))} />}\n                            {registrationForm === 'company' && <RegistrantCompanyForm data={authUser} step={2} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n                            {registrationForm === 'company' && <DocumentVerificationForm data={authUser} step={3} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n\n                            {registrationForm === 'individual' && <RegistrantForm data={authUser} step={1} registrationForm={registrationForm} hashKey=\"registrantInformation\" stepName=\"registrantInformation\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, registrantForm: data }))} />}\n                            {registrationForm === 'individual' && <DocumentVerificationForm data={authUser} step={2} registrationForm={registrationForm} hashKey=\"documentVerification\" stepName=\"documentVerification\" onSubmitForm={(data) => setRegistrationData(state => ({ ...state, verificationForm: data }))} onFinishRegistration={handleFinishRegistration} />}\n                        </StepWizard>\n                    </CardBody>\n                </Card>\n                <Modal isOpen={modalSubmitForm} centered toggle={handleFinishRegistration}>\n                    <ModalBody className=\"p-5\">\n                        <Row>\n                            <Col xs=\"12\" className=\"mb-5\">\n                                Are you sure with your registration data?\n                            </Col>\n                            <Col xs=\"12\" className=\"d-flex justify-content-end\">\n                                <Button color=\"secondary\" className=\"mr-2\" onClick={handleFinishRegistration}>Cancel</Button>\n                                <Button color=\"primary\" disabled={isSubmitting} onClick={handleSubmit}>\n                                    {isSubmitting ? <><Spinner color=\"light\" size=\"sm\" /> Loading...</> : 'Submit'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                </Modal>\n            </Col>\n        </Row>\n    );\n}\n\nconst Biodata = ({ data }) => {\n    const onErrorImage = useCallback((e) => {\n        e.target.src = noImage;\n        e.target.onerror = null;\n    }, [])\n\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"d-flex py-3\">\n                        {data.avatar ?\n                            <img src={data.avatar} className=\"rounded-circle shadow-sm ml-4\" alt=\"avatar\" style={{ objectFit: 'cover', width: '200px', height: '200px' }} onError={(e) => onErrorImage(e)} />\n                            :\n                            <DefaultImageUser text={data?.name ?? data.firstName} size={200} className=\"ml-4\" />\n                        }\n                        <div className=\"ml-5 w-100\">\n                            {data.role === 'professional' ?\n                                <div className=\"font-2xl font-weight-bold mb-2\">{data.firstName} {data.lastName}</div>\n                                :\n                                <>\n                                    <div className=\"font-2xl font-weight-bold mb-2\">{data.name}</div>\n                                    <div className=\"font-lg mb-2\">{data.registrantInformation.firstName} {data.registrantInformation.lastName}</div>\n                                </>\n                            }\n                            <Row className=\"mb-2\">\n                                <Col xs=\"3\">\n                                    <small>Phone number</small>\n                                    <div className=\"font-weight-bold\">{data.phoneNumber}</div>\n                                </Col>\n                                <Col xs=\"3\">\n                                    <small>Joined at</small>\n                                    <div className=\"font-weight-bold\">{moment(data.createdAt).format('DD MMMM YYYY')}</div>\n                                </Col>\n                                <Col xs=\"6\">\n                                    <small>\n                                        About me\n                                    </small>\n                                    <div>\n                                        {data.about ?? 'Nothing about me'}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst validationForm = (instance, registrationForm, registrationData) => {\n    if (registrationForm === 'professional') {\n        if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n        if (!registrationData.educationForm) { instance.goToNamedStep('education'); return false; }\n        if (!registrationData.workExperienceForm) { instance.goToNamedStep('workExperience'); return false; }\n        if (!registrationData.projectExperienceForm) { instance.goToNamedStep('projectExperience'); return false; }\n        if (!registrationData.skillSectorForm) { instance.goToNamedStep('skillSector'); return false; }\n        if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n    }\n    if (registrationForm === 'company') {\n        if (!registrationData.companyInformationForm) { instance.goToNamedStep('companyInformation'); return false; }\n        if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n        if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n    }\n    if (registrationForm === 'individual') {\n        if (!registrationData.registrantForm) { instance.goToNamedStep('registrantInformation'); return false; }\n        if (!registrationData.verificationForm) { instance.goToNamedStep('documentVerification'); return false; }\n    }\n    return true;\n}\nexport default translate(Profile);\n"],"sourceRoot":""}