{"version":3,"sources":["../node_modules/reactstrap/es/Table.js","../node_modules/reactstrap/es/Progress.js","views/Menu/Clients/ClientDashboard.js"],"names":["propTypes","className","PropTypes","string","cssModule","object","size","bordered","bool","borderless","striped","dark","hover","responsive","oneOfType","tag","tagPropType","responsiveTag","innerRef","func","Table","props","Tag","ResponsiveTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","table","React","createElement","_extends","ref","responsiveClassName","defaultProps","ownKeys","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","children","node","bar","multi","value","number","min","max","animated","color","barClassName","style","barStyle","barAriaValueText","barAriaLabelledBy","Progress","percent","toNumber","progressClasses","progressBarProps","width","role","localizer","momentLocalizer","moment","ProjectStatus","data","xs","addonType","type","id","map","p","to","name","ApplicantEvaluation","icon","ProjectStatistics","applied","useMemo","d","status","ongoing","completed","md","whiteSpace","fontSize","height","MyCalendar","events","popup","defaultDate","Date","messages","previous","next","defaultView","views","Trends","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","legend","tooltips","mode","responsiveAnimationDuration","intersect","onHover","event","chartElement","cursor","Finance","lg","fontWeight","Projects","activities","projectName","progress","step","category","action","dueDate","ClientDashboard","user","useAuthUser","useSWR","getData","error","loading","mutate","dummyProjects","professionalName","closingDate","position","top","right","bottom","left","background","display","justifyContent","alignItems","registrantInformation","firstName","lastName","title","start","end"],"mappings":"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","file":"static/js/2.6cd1f021.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, toNumber } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  bar: PropTypes.bool,\n  multi: PropTypes.bool,\n  tag: tagPropType,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  barClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  style: PropTypes.object,\n  barStyle: PropTypes.object,\n  barAriaValueText: PropTypes.string,\n  barAriaLabelledBy: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  value: 0,\n  min: 0,\n  max: 100,\n  style: {},\n  barStyle: {}\n};\n\nvar Progress = function Progress(props) {\n  var children = props.children,\n      className = props.className,\n      barClassName = props.barClassName,\n      cssModule = props.cssModule,\n      value = props.value,\n      min = props.min,\n      max = props.max,\n      animated = props.animated,\n      striped = props.striped,\n      color = props.color,\n      bar = props.bar,\n      multi = props.multi,\n      Tag = props.tag,\n      style = props.style,\n      barStyle = props.barStyle,\n      barAriaValueText = props.barAriaValueText,\n      barAriaLabelledBy = props.barAriaLabelledBy,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"min\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\", \"style\", \"barStyle\", \"barAriaValueText\", \"barAriaLabelledBy\"]);\n\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var progressBarProps = {\n    className: progressBarClasses,\n    style: _objectSpread(_objectSpread(_objectSpread({}, bar ? style : {}), barStyle), {}, {\n      width: percent + \"%\"\n    }),\n    role: 'progressbar',\n    'aria-valuenow': value,\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuetext': barAriaValueText,\n    'aria-labelledby': barAriaLabelledBy,\n    children: children\n  };\n\n  if (bar) {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, progressBarProps));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    style: style,\n    className: progressClasses\n  }), multi ? children : /*#__PURE__*/React.createElement(\"div\", progressBarProps));\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\nexport default Progress;","import React, { useMemo } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport { Col, Row, Card, CardBody, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Table, Badge, Progress, Input, Button, Spinner } from 'reactstrap'\nimport moment from 'moment'\nimport { Bar } from 'react-chartjs-2';\nimport { Link } from 'react-router-dom';\nimport { useAuthUser } from '../../../store';\nimport useSWR from 'swr';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst localizer = momentLocalizer(moment);\nfunction ClientDashboard() {\n    const user = useAuthUser()\n    const { data: getData, error, mutate } = useSWR(() => `v1/project/client`);\n    const loading = !getData || error\n    const data = useMemo(() => {\n        return getData?.data?.data ?? [];\n    }, [getData]);\n\n    const dummyProjects = [\n        { projectName: 'Project 1', professionalName: 'Client A', status: 'Applied', progress: 0, closingDate: '2021-08-25' },\n        { projectName: 'Project 2', professionalName: 'Client B', status: 'On-Going', progress: 30, closingDate: '2021-08-20' },\n        { projectName: 'Project 3', professionalName: 'Client C', status: 'On-Going', progress: 90, closingDate: '2021-08-28' },\n        { projectName: 'Project 4', professionalName: 'Client D', status: 'On-Going', progress: 60, closingDate: '2021-08-31' },\n    ]\n\n    const dummyActivities = [\n        { projectName: 'Project 1', category: 'Deliverable', action: 'Action 1', dueDate: '2021-08-25' },\n        { projectName: 'Project 2', category: 'Meeting', action: 'Action 2', dueDate: '2021-08-23' },\n        { projectName: 'Project 3', category: 'Invoice', action: 'Action 3', dueDate: '2021-08-29' },\n        { projectName: 'Project 4', category: 'Meeting', action: 'Action 4', dueDate: '2021-08-21' },\n    ]\n\n    const events = [\n        {\n            title: 'Meeting 1',\n            start: '2021-08-08 08:00:00',\n            end: '2021-08-08 12:00:00',\n        },\n        {\n            title: 'Meeting 2',\n            start: '2021-08-12 08:00:00',\n            end: '2021-08-12 12:00:00',\n        },\n        {\n            title: 'Meeting 3',\n            start: '2021-08-16 08:00:00',\n            end: '2021-08-16 12:00:00',\n        },\n        {\n            title: 'Meeting 4',\n            start: '2021-08-20 08:00:00',\n            end: '2021-08-20 12:00:00',\n        },\n    ]\n\n    if (loading) {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                    background: \"rgba(255,255,255, 0.5)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Spinner style={{ width: 48, height: 48 }} />\n            </div>\n        )\n    }\n\n    return (\n        <Row className=\"mt-md-3 mt-lg-n2\">\n            <Col xs=\"12\">\n                <Card className=\"shadow-sm\">\n                    <CardBody>\n                        <Row>\n                            <Col xs=\"12\" className=\"d-flex justify-content-between\">\n                                <h2 className=\"font-weight-bold mb-4\">{user.name} <small className=\"text-muted\">{user.registrantInformation?.firstName} {user.registrantInformation?.lastName}</small></h2>\n                                <div>\n                                    <Link to='/project/create'>\n                                        <Button color=\"primary\">\n                                            Create Project\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatus data={data} />\n                            </Col>\n                            <Col xs=\"12\">\n                                <ApplicantEvaluation data={data} />\n                            </Col>\n                            <Col xs=\"12\">\n                                <ProjectStatistics data={dummyProjects} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"5\">\n                                <MyCalendar events={events} />\n                            </Col>\n                            <Col xs=\"12\" lg=\"7\">\n                                <Trends />\n                            </Col>\n                            <Col xs=\"12\">\n                                <Finance />\n                            </Col>\n                            <Col xs=\"12\">\n                                <Projects data={dummyProjects} activities={dummyActivities} />\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nconst ProjectStatus = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Status</h4>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex my-1\">\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Applied\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Contract Signing\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                On going\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Reviewing\n                            </div>\n                        </InputGroup>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                Payment\n                            </div>\n                        </InputGroup>\n                    </Col>\n                    <Col xs=\"12\" className=\"my-1\">\n                        <Table hover className=\"text-center\">\n                            <thead>\n                                <tr>\n                                    <th>Project Name</th>\n                                    <th>Professional Name</th>\n                                    <th>Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {data.map((p, i) =>\n                                    <tr key={i}>\n                                        <td>\n                                            <Link to={`/project/${p.id}/wall`}>\n                                                {p.name}\n                                            </Link>\n                                        </td>\n                                        <td>Jojo</td>\n                                        <td>On Going</td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst ApplicantEvaluation = ({ data }) => {\n    return (\n        <Card className=\"shadow-sm\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Application Evaluation</h4>\n                    </Col>\n                    <Col xs=\"12\" className=\"my-1\">\n                        <Table hover className=\"text-center\">\n                            <thead>\n                                <tr>\n                                    <th>Project Name</th>\n                                    <th>Closing Date</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {data.map((p, i) =>\n                                    <tr key={i}>\n                                        <td>\n                                            <Link to={`/project/${p.id}/professionals`}>\n                                                {p.name}\n                                            </Link>\n                                        </td>\n                                        <td>2021-08-25</td>\n                                        <td>\n                                            <Link to={`/project/${p.id}`}>\n                                                <Button color=\"primary\" size=\"sm\"><FontAwesomeIcon icon=\"edit\" /> Edit</Button>\n                                            </Link>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst ProjectStatistics = ({ data }) => {\n    const applied = useMemo(() => data?.filter(d => d.status === 'Applied').length ?? 0, [data])\n    const ongoing = useMemo(() => data?.filter(d => d.status === 'On-Going').length ?? 0, [data])\n    const completed = useMemo(() => data?.filter(d => d.status === 'Completed').length ?? 0, [data])\n\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\" className=\"my-1 text-center\">\n                        <h4>Project Statistics</h4>\n                    </Col>\n                    <Col xs=\"12\" className=\"d-flex my-1 justify-content-center\">\n                        <Row>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of applied projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{applied}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of active projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{ongoing}</Badge></div>\n                            </Col>\n                            <Col xs=\"12\" md=\"4\">\n                                <p style={{ whiteSpace: 'nowrap' }}>Number of completed projects</p>\n                                <div className=\"d-flex justify-content-center\" style={{ fontSize: '50pt' }}><Badge color=\"secondary\" className=\"d-flex justify-content-center\" style={{ width: 80, height: 80 }}>{completed}</Badge></div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst MyCalendar = ({ events }) => {\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ height: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">My Calendar</h4>\n                        <Calendar\n                            popup={true}\n                            localizer={localizer}\n                            defaultDate={new Date()}\n                            messages={{\n                                previous: <i className=\"fa fa-angle-left\"></i>,\n                                next: <i className=\"fa fa-angle-right\"></i>,\n                            }}\n                            defaultView=\"month\"\n                            views={[\"month\", 'agenda']}\n                            events={events}\n                            style={{ height: \"50vh\" }}\n                        // onSelectEvent={event => this.modalDetailEvent(event)}\n                        // onRangeChange={this.onRangeChange}\n                        // eventPropGetter={(this.eventStyleGetter)}\n                        />\n                    </Col>\n                    {/* <Col xs=\"12\" className=\"my-2\">\n                        <h4 className=\"mt-3\">My Activites</h4>\n                        <Calendar\n                            popup={true}\n                            localizer={localizer}\n                            defaultDate={new Date()}\n                            messages={{\n                                today: t(\"hariini\"),\n                                previous: <i className=\"fa fa-angle-left\"></i>,\n                                next: <i className=\"fa fa-angle-right\"></i>,\n                                month: t(\"bulanan\"),\n                                week: t(\"mingguan\"),\n                                day: t(\"harian\"),\n                            }}\n                            defaultView=\"agenda\"\n                            views={['agenda']}\n                            events={events}\n                            style={{ minHeight: \"50vh\" }}\n                        // onSelectEvent={event => this.modalDetailEvent(event)}\n                        // onRangeChange={this.onRangeChange}\n                        // eventPropGetter={(this.eventStyleGetter)}\n                        />\n                    </Col> */}\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Trends = () => {\n    const dataSkills = {\n        labels: ['Skill 1', 'Skill 2', 'Skill 3', 'Skill 4', 'Skill 5', 'Skill 6'],\n        datasets: [\n            {\n                label: 'Skills',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    const dataSectors = {\n        labels: ['Sector 1', 'Sector 2', 'Sector 3', 'Sector 4', 'Sector 5', 'Sector 6'],\n        datasets: [\n            {\n                label: 'Sectors',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody style={{ height: '60vh' }}>\n                <Row>\n                    <Col xs=\"12\">\n                        <h4 className=\"mb-4\">Trends</h4>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Row>\n                            <Col xs=\"4\" className=\"px-0 h-100px\">\n                                <h6>My load this week</h6>\n                                <div className=\"mt-4 px-4\">\n                                    <Progress color='#555' value={60}>\n                                        <b style={{ color: \"#555\" }}>{60}%</b>\n                                    </Progress>\n                                </div>\n                            </Col>\n                            <Col xs=\"4\" className=\"px-0\">\n                                <h6>Average Time per Project</h6>\n                                <div style={{ fontSize: '30pt' }}>2 hrs</div>\n                                <small className=\"text-muted\">Total 10 hours</small>\n                            </Col>\n                            <Col xs=\"4\" className=\"px-0\">\n                                <h6>Bid Success Rate</h6>\n                                <div style={{ fontSize: '30pt' }}>20%</div>\n                                <small className=\"text-muted\">5/25 projects</small>\n                            </Col>\n                            <Col xs=\"6\" className=\"mt-5\">\n                                <div>Skills</div>\n                                <div>\n                                    <Bar data={dataSkills} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={250} />\n                                </div>\n                            </Col>\n                            <Col xs=\"6\" className=\"mt-5\">\n                                <div>Sectors</div>\n                                <div>\n                                    <Bar data={dataSectors} options={{\n                                        maintainAspectRatio: false,\n                                        legend: false,\n                                        tooltips: {\n                                            mode: \"label\",\n                                        },\n                                        responsive: true,\n                                        responsiveAnimationDuration: 2000,\n                                        hover: {\n                                            intersect: true,\n                                            mode: \"point\",\n                                        },\n                                        onHover: (event, chartElement) => {\n                                            event.target.style.cursor = chartElement[0]\n                                                ? \"pointer\"\n                                                : \"default\";\n                                        },\n                                    }} height={250} />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Finance = () => {\n    return (\n        <Card className=\"shadow-sm mt-3 text-center\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Finance</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Total AR</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>1.000.000</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Total AR this month</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>500.000</div>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <small>Outstanding AR this month</small>\n                        <div style={{ fontSize: '30pt', fontWeight: 'bold' }}>250.000</div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nconst Projects = ({ data, activities }) => {\n\n    const dataStats = {\n        labels: ['Project 1', 'Project 2', 'Project 3', 'Project 4', 'Project 5', 'Project 6'],\n        datasets: [\n            {\n                label: 'Projects',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n    return (\n        <Card className=\"shadow-sm mt-3\">\n            <CardBody>\n                <Row>\n                    <Col xs=\"12\">\n                        <h3 className=\"mb-4\">Projects</h3>\n                    </Col>\n                    <Col xs=\"12\" lg=\"4\">\n                        <Row className=\"my-2\">\n                            <Col xs=\"5\">\n                                <div>Overall</div>\n                            </Col>\n                            <Col xs=\"7\">\n                                <Progress color='#555' value={60}>\n                                    <b style={{ color: \"#555\" }}>{60}%</b>\n                                </Progress>\n                            </Col>\n                        </Row>\n                        {data.map((d, i) => (\n                            <Row key={i} className=\"my-2\">\n                                <Col xs=\"5\">\n                                    <div>{d.projectName}</div>\n                                </Col>\n                                <Col xs=\"7\">\n                                    <Progress color='#555' value={d.progress}>\n                                        <b style={{ color: \"#555\" }}>{d.progress}%</b>\n                                    </Progress>\n                                </Col>\n                            </Row>\n                        ))}\n                    </Col>\n                    <Col xs=\"12\" lg=\"8\">\n                        <div>\n                            <Bar data={dataStats} options={{\n                                maintainAspectRatio: false,\n                                legend: false,\n                                tooltips: {\n                                    mode: \"label\",\n                                },\n                                responsive: true,\n                                responsiveAnimationDuration: 2000,\n                                hover: {\n                                    intersect: true,\n                                    mode: \"point\",\n                                },\n                                onHover: (event, chartElement) => {\n                                    event.target.style.cursor = chartElement[0]\n                                        ? \"pointer\"\n                                        : \"default\";\n                                },\n                            }} height={250} />\n                        </div>\n                    </Col>\n                    <Col xs=\"12\" className=\"mt-3\">\n                        <Row>\n                            <Col xs=\"12\" lg=\"4\">\n                                <Row>\n                                    <Col xs=\"6\" className=\"d-flex align-items-center\">\n                                        <div>Show for upcoming</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <Input min={0} max={100} type=\"number\" step=\"1\" />\n                                            <InputGroupAddon addonType=\"append\">days</InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-3\">\n                                    <Col xs=\"6\">\n                                        <div>Category Filter</div>\n                                    </Col>\n                                    <Col xs=\"6\">\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Deliverable\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                A/R & A/P\n                                            </div>\n                                        </InputGroup>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText className=\"bg-transparent border-0 px-0\">\n                                                    <CustomInput type=\"checkbox\" id=\"dueDateCheckbox\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <div className=\"d-flex bg-transparent p-1 align-items-center\">\n                                                Meeting\n                                            </div>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col xs=\"12\" lg=\"8\">\n                                <Table hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Project</th>\n                                            <th>Category</th>\n                                            <th>Action</th>\n                                            <th>Due Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {activities.map((p, i) =>\n                                            <tr key={i}>\n                                                <td>{p.projectName}</td>\n                                                <td>{p.category}</td>\n                                                <td>{p.action}</td>\n                                                <td>{p.dueDate}</td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default ClientDashboard"],"sourceRoot":""}